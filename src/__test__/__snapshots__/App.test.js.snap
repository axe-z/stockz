// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App devrait etre capable de lancer avec spacebar 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": App {
      "_reactInternalFiber": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 59,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 58,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <div>
                      <div
                        class="header"
                      >
                        <h1>
                          stockz 
                          <span>
                            Â®
                          </span>
                        </h1>
                        <div
                          class="current"
                          style="transform: translateX(150px);"
                        >
                          <div
                            class="headerInfo"
                          >
                            <h6
                              class="name"
                            />
                            <h6
                              class="valeur"
                            />
                            <p>
                              last updated:
                            </p>
                            <h6
                              class="date"
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="mainApp"
                    >
                      <h3
                        class="mission"
                      >
                        Validating the effects of social media on brand valuation
                      </h3>
                      <h5>
                        - in 3 simple steps -
                      </h5>
                      <form>
                        <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>
                        <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>
                      </form>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="App"
                >
                  <div>
                    <div
                      class="header"
                    >
                      <h1>
                        stockz 
                        <span>
                          Â®
                        </span>
                      </h1>
                      <div
                        class="current"
                        style="transform: translateX(150px);"
                      >
                        <div
                          class="headerInfo"
                        >
                          <h6
                            class="name"
                          />
                          <h6
                            class="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            class="date"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    class="mainApp"
                  >
                    <h3
                      class="mission"
                    >
                      Validating the effects of social media on brand valuation
                    </h3>
                    <h5>
                      - in 3 simple steps -
                    </h5>
                    <form>
                      <div
                        class="cover"
                      >
                        <h2
                          class="num"
                        >
                          01/ 
                          <span>
                             enter the symbol
                          </span>
                        </h2>
                        <div
                          class="search"
                        >
                          <label
                            class="inp"
                            for="stockInput"
                          >
                            <input
                              autocomplete="off"
                              class="searchInput"
                              id="stockInput"
                              name="stockInput"
                              spellcheck="false"
                              tabindex="1"
                              type="text"
                              value=""
                            />
                            <span
                              class="label"
                            >
                              search...
                            </span>
                          </label>
                          <div
                            class="wrapSelect"
                          >
                            <h2
                              class="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              tabindex="2"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>
                          <div
                            class="wrapSelectSocial"
                          >
                            <h2
                              class="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              tabindex="3"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>
                        </div>
                      </div>
                      <button
                        class="btnProjet"
                        disabled=""
                        tabindex="4"
                        type="submit"
                      >
                        Go !
                      </button>
                    </form>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 14,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <div>
                      <div
                        class="header"
                      >
                        <h1>
                          stockz 
                          <span>
                            Â®
                          </span>
                        </h1>
                        <div
                          class="current"
                          style="transform: translateX(150px);"
                        >
                          <div
                            class="headerInfo"
                          >
                            <h6
                              class="name"
                            />
                            <h6
                              class="valeur"
                            />
                            <p>
                              last updated:
                            </p>
                            <h6
                              class="date"
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="mainApp"
                    >
                      <h3
                        class="mission"
                      >
                        Validating the effects of social media on brand valuation
                      </h3>
                      <h5>
                        - in 3 simple steps -
                      </h5>
                      <form>
                        <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>
                        <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>
                      </form>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="App"
                >
                  <div>
                    <div
                      class="header"
                    >
                      <h1>
                        stockz 
                        <span>
                          Â®
                        </span>
                      </h1>
                      <div
                        class="current"
                        style="transform: translateX(150px);"
                      >
                        <div
                          class="headerInfo"
                        >
                          <h6
                            class="name"
                          />
                          <h6
                            class="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            class="date"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    class="mainApp"
                  >
                    <h3
                      class="mission"
                    >
                      Validating the effects of social media on brand valuation
                    </h3>
                    <h5>
                      - in 3 simple steps -
                    </h5>
                    <form>
                      <div
                        class="cover"
                      >
                        <h2
                          class="num"
                        >
                          01/ 
                          <span>
                             enter the symbol
                          </span>
                        </h2>
                        <div
                          class="search"
                        >
                          <label
                            class="inp"
                            for="stockInput"
                          >
                            <input
                              autocomplete="off"
                              class="searchInput"
                              id="stockInput"
                              name="stockInput"
                              spellcheck="false"
                              tabindex="1"
                              type="text"
                              value=""
                            />
                            <span
                              class="label"
                            >
                              search...
                            </span>
                          </label>
                          <div
                            class="wrapSelect"
                          >
                            <h2
                              class="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              tabindex="2"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>
                          <div
                            class="wrapSelectSocial"
                          >
                            <h2
                              class="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              tabindex="3"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>
                        </div>
                      </div>
                      <button
                        class="btnProjet"
                        disabled=""
                        tabindex="4"
                        type="submit"
                      >
                        Go !
                      </button>
                    </form>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 14,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 60,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/axez/Desktop/bourse/src/App.js",
            "lineNumber": 49,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 61,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/axez/Desktop/bourse/src/App.js",
              "lineNumber": 51,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 63,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                "lineNumber": 14,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 64,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                  "lineNumber": 15,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 65,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                    "lineNumber": 16,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 67,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": "stockz ",
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": "stockz ",
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 68,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                        "lineNumber": 16,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "span",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Â®",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Â®",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <span>
                        Â®
                      </span>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "span",
                      "updateQueue": null,
                    },
                    "stateNode": stockz ,
                    "tag": 6,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "h1",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      "stockz ",
                      <span>
                        Â®
                      </span>,
                    ],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      "stockz ",
                      <span>
                        Â®
                      </span>,
                    ],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 66,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                      "lineNumber": 18,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 69,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                        "lineNumber": 19,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 70,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                          "lineNumber": 20,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "h6",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": null,
                          "className": "name",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": null,
                          "className": "name",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 71,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                            "lineNumber": 21,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "h6",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": null,
                            "className": "valeur",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": null,
                            "className": "valeur",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 72,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                              "lineNumber": 22,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "p",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "last updated:",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "last updated:",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 73,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                                "lineNumber": 23,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "h6",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 3,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": null,
                                "className": "date",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": null,
                                "className": "date",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <h6
                                class="date"
                              />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "h6",
                              "updateQueue": null,
                            },
                            "stateNode": <p>
                              last updated:
                            </p>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "stateNode": <h6
                            class="valeur"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "h6",
                          "updateQueue": null,
                        },
                        "stateNode": <h6
                          class="name"
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "h6",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h6
                            className="name"
                          />,
                          <h6
                            className="valeur"
                          />,
                          <p>
                            last updated:
                          </p>,
                          <h6
                            className="date"
                          />,
                        ],
                        "className": "headerInfo",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <h6
                            className="name"
                          />,
                          <h6
                            className="valeur"
                          />,
                          <p>
                            last updated:
                          </p>,
                          <h6
                            className="date"
                          />,
                        ],
                        "className": "headerInfo",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="headerInfo"
                      >
                        <h6
                          class="name"
                        />
                        <h6
                          class="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          class="date"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <div
                        className="headerInfo"
                      >
                        <h6
                          className="name"
                        />
                        <h6
                          className="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          className="date"
                        />
                      </div>,
                      "className": "current",
                      "style": Object {
                        "transform": "translateX(150px)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <div
                        className="headerInfo"
                      >
                        <h6
                          className="name"
                        />
                        <h6
                          className="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          className="date"
                        />
                      </div>,
                      "className": "current",
                      "style": Object {
                        "transform": "translateX(150px)",
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="current"
                      style="transform: translateX(150px);"
                    >
                      <div
                        class="headerInfo"
                      >
                        <h6
                          class="name"
                        />
                        <h6
                          class="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          class="date"
                        />
                      </div>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <h1>
                    stockz 
                    <span>
                      Â®
                    </span>
                  </h1>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "h1",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h1>
                      stockz 
                      <span>
                        Â®
                      </span>
                    </h1>,
                    <div
                      className="current"
                      style={
                        Object {
                          "transform": "translateX(150px)",
                        }
                      }
                    >
                      <div
                        className="headerInfo"
                      >
                        <h6
                          className="name"
                        />
                        <h6
                          className="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          className="date"
                        />
                      </div>
                    </div>,
                  ],
                  "className": "header",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h1>
                      stockz 
                      <span>
                        Â®
                      </span>
                    </h1>,
                    <div
                      className="current"
                      style={
                        Object {
                          "transform": "translateX(150px)",
                        }
                      }
                    >
                      <div
                        className="headerInfo"
                      >
                        <h6
                          className="name"
                        />
                        <h6
                          className="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          className="date"
                        />
                      </div>
                    </div>,
                  ],
                  "className": "header",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="header"
                >
                  <h1>
                    stockz 
                    <span>
                      Â®
                    </span>
                  </h1>
                  <div
                    class="current"
                    style="transform: translateX(150px);"
                  >
                    <div
                      class="headerInfo"
                    >
                      <h6
                        class="name"
                      />
                      <h6
                        class="valeur"
                      />
                      <p>
                        last updated:
                      </p>
                      <h6
                        class="date"
                      />
                    </div>
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <div
                  className="header"
                >
                  <h1>
                    stockz 
                    <span>
                      Â®
                    </span>
                  </h1>
                  <div
                    className="current"
                    style={
                      Object {
                        "transform": "translateX(150px)",
                      }
                    }
                  >
                    <div
                      className="headerInfo"
                    >
                      <h6
                        className="name"
                      />
                      <h6
                        className="valeur"
                      />
                      <p>
                        last updated:
                      </p>
                      <h6
                        className="date"
                      />
                    </div>
                  </div>
                </div>,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <div
                  className="header"
                >
                  <h1>
                    stockz 
                    <span>
                      Â®
                    </span>
                  </h1>
                  <div
                    className="current"
                    style={
                      Object {
                        "transform": "translateX(150px)",
                      }
                    }
                  >
                    <div
                      className="headerInfo"
                    >
                      <h6
                        className="name"
                      />
                      <h6
                        className="valeur"
                      />
                      <p>
                        last updated:
                      </p>
                      <h6
                        className="date"
                      />
                    </div>
                  </div>
                </div>,
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div>
                <div
                  class="header"
                >
                  <h1>
                    stockz 
                    <span>
                      Â®
                    </span>
                  </h1>
                  <div
                    class="current"
                    style="transform: translateX(150px);"
                  >
                    <div
                      class="headerInfo"
                    >
                      <h6
                        class="name"
                      />
                      <h6
                        class="valeur"
                      />
                      <p>
                        last updated:
                      </p>
                      <h6
                        class="date"
                      />
                    </div>
                  </div>
                </div>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "stockName": null,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "stockName": null,
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 62,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                "lineNumber": 55,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 74,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                  "lineNumber": 56,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "h3",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Validating the effects of social media on brand valuation",
                  "className": "mission",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Validating the effects of social media on brand valuation",
                  "className": "mission",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 75,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                    "lineNumber": 57,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "h5",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "- in 3 simple steps -",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "- in 3 simple steps -",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 76,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                      "lineNumber": 59,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 77,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                        "lineNumber": 60,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 79,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                          "lineNumber": 61,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 81,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": "01/ ",
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": "01/ ",
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 82,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                              "lineNumber": 61,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "span",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": " enter the symbol",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": " enter the symbol",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <span>
                               enter the symbol
                            </span>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "span",
                            "updateQueue": null,
                          },
                          "stateNode": 01/ ,
                          "tag": 6,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "h2",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            "01/ ",
                            <span>
                               enter the symbol
                            </span>,
                          ],
                          "className": "num",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            "01/ ",
                            <span>
                               enter the symbol
                            </span>,
                          ],
                          "className": "num",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 80,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                            "lineNumber": 62,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 83,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                              "lineNumber": 63,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 86,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                "lineNumber": 64,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "input",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "autoComplete": "off",
                                "className": "searchInput",
                                "id": "stockInput",
                                "name": "stockInput",
                                "onChange": [Function],
                                "spellCheck": "false",
                                "tabIndex": "1",
                                "type": "text",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "autoComplete": "off",
                                "className": "searchInput",
                                "id": "stockInput",
                                "name": "stockInput",
                                "onChange": [Function],
                                "spellCheck": "false",
                                "tabIndex": "1",
                                "type": "text",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 87,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                  "lineNumber": 66,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "span",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "search...",
                                  "className": "label",
                                  "style": null,
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "search...",
                                  "className": "label",
                                  "style": null,
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <span
                                  class="label"
                                >
                                  search...
                                </span>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "span",
                                "updateQueue": null,
                              },
                              "stateNode": <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "label",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <input
                                  autoComplete="off"
                                  className="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  onChange={[Function]}
                                  spellCheck="false"
                                  tabIndex="1"
                                  type="text"
                                  value=""
                                />,
                                <span
                                  className="label"
                                  style={null}
                                >
                                  search...
                                </span>,
                              ],
                              "className": "inp",
                              "htmlFor": "stockInput",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <input
                                  autoComplete="off"
                                  className="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  onChange={[Function]}
                                  spellCheck="false"
                                  tabIndex="1"
                                  type="text"
                                  value=""
                                />,
                                <span
                                  className="label"
                                  style={null}
                                >
                                  search...
                                </span>,
                              ],
                              "className": "inp",
                              "htmlFor": "stockInput",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 84,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                "lineNumber": 68,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 88,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                  "lineNumber": 69,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 90,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": "02/ ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": "02/ ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 91,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                      "lineNumber": 69,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "contextDependencies": null,
                                    "effectTag": 0,
                                    "elementType": "span",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 1,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": " days reviewed",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": " days reviewed",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <span>
                                       days reviewed
                                    </span>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "span",
                                    "updateQueue": null,
                                  },
                                  "stateNode": 02/ ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "h2",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    "02/ ",
                                    <span>
                                       days reviewed
                                    </span>,
                                  ],
                                  "className": "num",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    "02/ ",
                                    <span>
                                       days reviewed
                                    </span>,
                                  ],
                                  "className": "num",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 89,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                    "lineNumber": 70,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 92,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                      "lineNumber": 71,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "contextDependencies": null,
                                    "effectTag": 0,
                                    "elementType": "option",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "10 days",
                                      "value": "10",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": "10 days",
                                      "value": "10",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 93,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                        "lineNumber": 72,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "contextDependencies": null,
                                      "effectTag": 0,
                                      "elementType": "option",
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 1,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": "20 days",
                                        "value": "20",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": "20 days",
                                        "value": "20",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 94,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                          "lineNumber": 73,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childExpirationTime": 0,
                                        "contextDependencies": null,
                                        "effectTag": 0,
                                        "elementType": "option",
                                        "expirationTime": 0,
                                        "firstEffect": null,
                                        "index": 2,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": "30 days",
                                          "value": "30",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": "30 days",
                                          "value": "30",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 95,
                                          "_debugIsCurrentlyTiming": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                            "lineNumber": 74,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childExpirationTime": 0,
                                          "contextDependencies": null,
                                          "effectTag": 0,
                                          "elementType": "option",
                                          "expirationTime": 0,
                                          "firstEffect": null,
                                          "index": 3,
                                          "key": null,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": "60 days",
                                            "value": "60",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": "60 days",
                                            "value": "60",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 96,
                                            "_debugIsCurrentlyTiming": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                              "lineNumber": 75,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childExpirationTime": 0,
                                            "contextDependencies": null,
                                            "effectTag": 0,
                                            "elementType": "option",
                                            "expirationTime": 0,
                                            "firstEffect": null,
                                            "index": 4,
                                            "key": null,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": "90 days",
                                              "value": "90",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": "90 days",
                                              "value": "90",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": <option
                                              value="90"
                                            >
                                              90 days
                                            </option>,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "option",
                                            "updateQueue": null,
                                          },
                                          "stateNode": <option
                                            value="60"
                                          >
                                            60 days
                                          </option>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "option",
                                          "updateQueue": null,
                                        },
                                        "stateNode": <option
                                          value="30"
                                        >
                                          30 days
                                        </option>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "option",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <option
                                        value="20"
                                      >
                                        20 days
                                      </option>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "option",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <option
                                      value="10"
                                    >
                                      10 days
                                    </option>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "option",
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 0,
                                  "elementType": "select",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <option
                                        value="10"
                                      >
                                        10 days
                                      </option>,
                                      <option
                                        value="20"
                                      >
                                        20 days
                                      </option>,
                                      <option
                                        value="30"
                                      >
                                        30 days
                                      </option>,
                                      <option
                                        value="60"
                                      >
                                        60 days
                                      </option>,
                                      <option
                                        value="90"
                                      >
                                        90 days
                                      </option>,
                                    ],
                                    "name": "value",
                                    "onChange": [Function],
                                    "tabIndex": "2",
                                    "value": "10",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <option
                                        value="10"
                                      >
                                        10 days
                                      </option>,
                                      <option
                                        value="20"
                                      >
                                        20 days
                                      </option>,
                                      <option
                                        value="30"
                                      >
                                        30 days
                                      </option>,
                                      <option
                                        value="60"
                                      >
                                        60 days
                                      </option>,
                                      <option
                                        value="90"
                                      >
                                        90 days
                                      </option>,
                                    ],
                                    "name": "value",
                                    "onChange": [Function],
                                    "tabIndex": "2",
                                    "value": "10",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <select
                                    name="value"
                                    tabindex="2"
                                  >
                                    <option
                                      value="10"
                                    >
                                      10 days
                                    </option>
                                    <option
                                      value="20"
                                    >
                                      20 days
                                    </option>
                                    <option
                                      value="30"
                                    >
                                      30 days
                                    </option>
                                    <option
                                      value="60"
                                    >
                                      60 days
                                    </option>
                                    <option
                                      value="90"
                                    >
                                      90 days
                                    </option>
                                  </select>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "select",
                                  "updateQueue": null,
                                },
                                "stateNode": <h2
                                  class="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "h2",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "div",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <h2
                                    className="num"
                                  >
                                    02/ 
                                    <span>
                                       days reviewed
                                    </span>
                                  </h2>,
                                  <select
                                    name="value"
                                    onChange={[Function]}
                                    tabIndex="2"
                                    value="10"
                                  >
                                    <option
                                      value="10"
                                    >
                                      10 days
                                    </option>
                                    <option
                                      value="20"
                                    >
                                      20 days
                                    </option>
                                    <option
                                      value="30"
                                    >
                                      30 days
                                    </option>
                                    <option
                                      value="60"
                                    >
                                      60 days
                                    </option>
                                    <option
                                      value="90"
                                    >
                                      90 days
                                    </option>
                                  </select>,
                                ],
                                "className": "wrapSelect",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <h2
                                    className="num"
                                  >
                                    02/ 
                                    <span>
                                       days reviewed
                                    </span>
                                  </h2>,
                                  <select
                                    name="value"
                                    onChange={[Function]}
                                    tabIndex="2"
                                    value="10"
                                  >
                                    <option
                                      value="10"
                                    >
                                      10 days
                                    </option>
                                    <option
                                      value="20"
                                    >
                                      20 days
                                    </option>
                                    <option
                                      value="30"
                                    >
                                      30 days
                                    </option>
                                    <option
                                      value="60"
                                    >
                                      60 days
                                    </option>
                                    <option
                                      value="90"
                                    >
                                      90 days
                                    </option>
                                  </select>,
                                ],
                                "className": "wrapSelect",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 85,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                  "lineNumber": 78,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 97,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                    "lineNumber": 79,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 99,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "contextDependencies": null,
                                    "effectTag": 0,
                                    "elementType": null,
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": "03/ ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "03/ ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 100,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                        "lineNumber": 79,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "contextDependencies": null,
                                      "effectTag": 0,
                                      "elementType": "span",
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 1,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": " by social Media",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": " by social Media",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <span>
                                         by social Media
                                      </span>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "span",
                                      "updateQueue": null,
                                    },
                                    "stateNode": 03/ ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 0,
                                  "elementType": "h2",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      "03/ ",
                                      <span>
                                         by social Media
                                      </span>,
                                    ],
                                    "className": "num",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      "03/ ",
                                      <span>
                                         by social Media
                                      </span>,
                                    ],
                                    "className": "num",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 98,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                      "lineNumber": 80,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 101,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                        "lineNumber": 81,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "contextDependencies": null,
                                      "effectTag": 0,
                                      "elementType": "option",
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 0,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": "twitter",
                                        "value": "twitter",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": "twitter",
                                        "value": "twitter",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 102,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                          "lineNumber": 82,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childExpirationTime": 0,
                                        "contextDependencies": null,
                                        "effectTag": 0,
                                        "elementType": "option",
                                        "expirationTime": 0,
                                        "firstEffect": null,
                                        "index": 1,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": "facebook",
                                          "value": "facebook",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": "facebook",
                                          "value": "facebook",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": <option
                                          value="facebook"
                                        >
                                          facebook
                                        </option>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "option",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <option
                                        value="twitter"
                                      >
                                        twitter
                                      </option>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "option",
                                      "updateQueue": null,
                                    },
                                    "childExpirationTime": 0,
                                    "contextDependencies": null,
                                    "effectTag": 0,
                                    "elementType": "select",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 1,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        <option
                                          value="twitter"
                                        >
                                          twitter
                                        </option>,
                                        <option
                                          value="facebook"
                                        >
                                          facebook
                                        </option>,
                                      ],
                                      "name": "socialValue",
                                      "onChange": [Function],
                                      "tabIndex": "3",
                                      "value": "twitter",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        <option
                                          value="twitter"
                                        >
                                          twitter
                                        </option>,
                                        <option
                                          value="facebook"
                                        >
                                          facebook
                                        </option>,
                                      ],
                                      "name": "socialValue",
                                      "onChange": [Function],
                                      "tabIndex": "3",
                                      "value": "twitter",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <select
                                      name="socialValue"
                                      tabindex="3"
                                    >
                                      <option
                                        value="twitter"
                                      >
                                        twitter
                                      </option>
                                      <option
                                        value="facebook"
                                      >
                                        facebook
                                      </option>
                                    </select>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "select",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <h2
                                    class="num"
                                  >
                                    03/ 
                                    <span>
                                       by social Media
                                    </span>
                                  </h2>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "h2",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "div",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 2,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <h2
                                      className="num"
                                    >
                                      03/ 
                                      <span>
                                         by social Media
                                      </span>
                                    </h2>,
                                    <select
                                      name="socialValue"
                                      onChange={[Function]}
                                      tabIndex="3"
                                      value="twitter"
                                    >
                                      <option
                                        value="twitter"
                                      >
                                        twitter
                                      </option>
                                      <option
                                        value="facebook"
                                      >
                                        facebook
                                      </option>
                                    </select>,
                                  ],
                                  "className": "wrapSelectSocial",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <h2
                                      className="num"
                                    >
                                      03/ 
                                      <span>
                                         by social Media
                                      </span>
                                    </h2>,
                                    <select
                                      name="socialValue"
                                      onChange={[Function]}
                                      tabIndex="3"
                                      value="twitter"
                                    >
                                      <option
                                        value="twitter"
                                      >
                                        twitter
                                      </option>
                                      <option
                                        value="facebook"
                                      >
                                        facebook
                                      </option>
                                    </select>,
                                  ],
                                  "className": "wrapSelectSocial",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <div
                                  class="wrapSelectSocial"
                                >
                                  <h2
                                    class="num"
                                  >
                                    03/ 
                                    <span>
                                       by social Media
                                    </span>
                                  </h2>
                                  <select
                                    name="socialValue"
                                    tabindex="3"
                                  >
                                    <option
                                      value="twitter"
                                    >
                                      twitter
                                    </option>
                                    <option
                                      value="facebook"
                                    >
                                      facebook
                                    </option>
                                  </select>
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="wrapSelect"
                              >
                                <h2
                                  class="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  tabindex="2"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                className="inp"
                                htmlFor="stockInput"
                              >
                                <input
                                  autoComplete="off"
                                  className="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  onChange={[Function]}
                                  spellCheck="false"
                                  tabIndex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  className="label"
                                  style={null}
                                >
                                  search...
                                </span>
                              </label>,
                              <div
                                className="wrapSelect"
                              >
                                <h2
                                  className="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  onChange={[Function]}
                                  tabIndex="2"
                                  value="10"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>,
                              <div
                                className="wrapSelectSocial"
                              >
                                <h2
                                  className="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>
                                <select
                                  name="socialValue"
                                  onChange={[Function]}
                                  tabIndex="3"
                                  value="twitter"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>
                              </div>,
                            ],
                            "className": "search",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                className="inp"
                                htmlFor="stockInput"
                              >
                                <input
                                  autoComplete="off"
                                  className="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  onChange={[Function]}
                                  spellCheck="false"
                                  tabIndex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  className="label"
                                  style={null}
                                >
                                  search...
                                </span>
                              </label>,
                              <div
                                className="wrapSelect"
                              >
                                <h2
                                  className="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  onChange={[Function]}
                                  tabIndex="2"
                                  value="10"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>,
                              <div
                                className="wrapSelectSocial"
                              >
                                <h2
                                  className="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>
                                <select
                                  name="socialValue"
                                  onChange={[Function]}
                                  tabIndex="3"
                                  value="twitter"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>
                              </div>,
                            ],
                            "className": "search",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <h2
                          class="num"
                        >
                          01/ 
                          <span>
                             enter the symbol
                          </span>
                        </h2>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "h2",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h2
                            className="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>,
                          <div
                            className="search"
                          >
                            <label
                              className="inp"
                              htmlFor="stockInput"
                            >
                              <input
                                autoComplete="off"
                                className="searchInput"
                                id="stockInput"
                                name="stockInput"
                                onChange={[Function]}
                                spellCheck="false"
                                tabIndex="1"
                                type="text"
                                value=""
                              />
                              <span
                                className="label"
                                style={null}
                              >
                                search...
                              </span>
                            </label>
                            <div
                              className="wrapSelect"
                            >
                              <h2
                                className="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                onChange={[Function]}
                                tabIndex="2"
                                value="10"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              className="wrapSelectSocial"
                            >
                              <h2
                                className="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                onChange={[Function]}
                                tabIndex="3"
                                value="twitter"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>,
                        ],
                        "className": "cover",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <h2
                            className="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>,
                          <div
                            className="search"
                          >
                            <label
                              className="inp"
                              htmlFor="stockInput"
                            >
                              <input
                                autoComplete="off"
                                className="searchInput"
                                id="stockInput"
                                name="stockInput"
                                onChange={[Function]}
                                spellCheck="false"
                                tabIndex="1"
                                type="text"
                                value=""
                              />
                              <span
                                className="label"
                                style={null}
                              >
                                search...
                              </span>
                            </label>
                            <div
                              className="wrapSelect"
                            >
                              <h2
                                className="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                onChange={[Function]}
                                tabIndex="2"
                                value="10"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              className="wrapSelectSocial"
                            >
                              <h2
                                className="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                onChange={[Function]}
                                tabIndex="3"
                                value="twitter"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>,
                        ],
                        "className": "cover",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 78,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                          "lineNumber": 87,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "button",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Go !",
                          "className": "btnProjet",
                          "disabled": true,
                          "tabIndex": "4",
                          "type": "submit",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Go !",
                          "className": "btnProjet",
                          "disabled": true,
                          "tabIndex": "4",
                          "type": "submit",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="cover"
                      >
                        <h2
                          class="num"
                        >
                          01/ 
                          <span>
                             enter the symbol
                          </span>
                        </h2>
                        <div
                          class="search"
                        >
                          <label
                            class="inp"
                            for="stockInput"
                          >
                            <input
                              autocomplete="off"
                              class="searchInput"
                              id="stockInput"
                              name="stockInput"
                              spellcheck="false"
                              tabindex="1"
                              type="text"
                              value=""
                            />
                            <span
                              class="label"
                            >
                              search...
                            </span>
                          </label>
                          <div
                            class="wrapSelect"
                          >
                            <h2
                              class="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              tabindex="2"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>
                          <div
                            class="wrapSelectSocial"
                          >
                            <h2
                              class="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              tabindex="3"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>
                        </div>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "form",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="cover"
                        >
                          <h2
                            className="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            className="search"
                          >
                            <label
                              className="inp"
                              htmlFor="stockInput"
                            >
                              <input
                                autoComplete="off"
                                className="searchInput"
                                id="stockInput"
                                name="stockInput"
                                onChange={[Function]}
                                spellCheck="false"
                                tabIndex="1"
                                type="text"
                                value=""
                              />
                              <span
                                className="label"
                                style={null}
                              >
                                search...
                              </span>
                            </label>
                            <div
                              className="wrapSelect"
                            >
                              <h2
                                className="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                onChange={[Function]}
                                tabIndex="2"
                                value="10"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              className="wrapSelectSocial"
                            >
                              <h2
                                className="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                onChange={[Function]}
                                tabIndex="3"
                                value="twitter"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>,
                        <button
                          className="btnProjet"
                          disabled={true}
                          tabIndex="4"
                          type="submit"
                        >
                          Go !
                        </button>,
                      ],
                      "onSubmit": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="cover"
                        >
                          <h2
                            className="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            className="search"
                          >
                            <label
                              className="inp"
                              htmlFor="stockInput"
                            >
                              <input
                                autoComplete="off"
                                className="searchInput"
                                id="stockInput"
                                name="stockInput"
                                onChange={[Function]}
                                spellCheck="false"
                                tabIndex="1"
                                type="text"
                                value=""
                              />
                              <span
                                className="label"
                                style={null}
                              >
                                search...
                              </span>
                            </label>
                            <div
                              className="wrapSelect"
                            >
                              <h2
                                className="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                onChange={[Function]}
                                tabIndex="2"
                                value="10"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              className="wrapSelectSocial"
                            >
                              <h2
                                className="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                onChange={[Function]}
                                tabIndex="3"
                                value="twitter"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>,
                        <button
                          className="btnProjet"
                          disabled={true}
                          tabIndex="4"
                          type="submit"
                        >
                          Go !
                        </button>,
                      ],
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <form>
                      <div
                        class="cover"
                      >
                        <h2
                          class="num"
                        >
                          01/ 
                          <span>
                             enter the symbol
                          </span>
                        </h2>
                        <div
                          class="search"
                        >
                          <label
                            class="inp"
                            for="stockInput"
                          >
                            <input
                              autocomplete="off"
                              class="searchInput"
                              id="stockInput"
                              name="stockInput"
                              spellcheck="false"
                              tabindex="1"
                              type="text"
                              value=""
                            />
                            <span
                              class="label"
                            >
                              search...
                            </span>
                          </label>
                          <div
                            class="wrapSelect"
                          >
                            <h2
                              class="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              tabindex="2"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>
                          <div
                            class="wrapSelectSocial"
                          >
                            <h2
                              class="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              tabindex="3"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>
                        </div>
                      </div>
                      <button
                        class="btnProjet"
                        disabled=""
                        tabindex="4"
                        type="submit"
                      >
                        Go !
                      </button>
                    </form>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "form",
                    "updateQueue": null,
                  },
                  "stateNode": <h5>
                    - in 3 simple steps -
                  </h5>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "h5",
                  "updateQueue": null,
                },
                "stateNode": <h3
                  class="mission"
                >
                  Validating the effects of social media on brand valuation
                </h3>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "h3",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h3
                    className="mission"
                  >
                    Validating the effects of social media on brand valuation
                  </h3>,
                  <h5>
                    - in 3 simple steps -
                  </h5>,
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="cover"
                    >
                      <h2
                        className="num"
                      >
                        01/ 
                        <span>
                           enter the symbol
                        </span>
                      </h2>
                      <div
                        className="search"
                      >
                        <label
                          className="inp"
                          htmlFor="stockInput"
                        >
                          <input
                            autoComplete="off"
                            className="searchInput"
                            id="stockInput"
                            name="stockInput"
                            onChange={[Function]}
                            spellCheck="false"
                            tabIndex="1"
                            type="text"
                            value=""
                          />
                          <span
                            className="label"
                            style={null}
                          >
                            search...
                          </span>
                        </label>
                        <div
                          className="wrapSelect"
                        >
                          <h2
                            className="num"
                          >
                            02/ 
                            <span>
                               days reviewed
                            </span>
                          </h2>
                          <select
                            name="value"
                            onChange={[Function]}
                            tabIndex="2"
                            value="10"
                          >
                            <option
                              value="10"
                            >
                              10 days
                            </option>
                            <option
                              value="20"
                            >
                              20 days
                            </option>
                            <option
                              value="30"
                            >
                              30 days
                            </option>
                            <option
                              value="60"
                            >
                              60 days
                            </option>
                            <option
                              value="90"
                            >
                              90 days
                            </option>
                          </select>
                        </div>
                        <div
                          className="wrapSelectSocial"
                        >
                          <h2
                            className="num"
                          >
                            03/ 
                            <span>
                               by social Media
                            </span>
                          </h2>
                          <select
                            name="socialValue"
                            onChange={[Function]}
                            tabIndex="3"
                            value="twitter"
                          >
                            <option
                              value="twitter"
                            >
                              twitter
                            </option>
                            <option
                              value="facebook"
                            >
                              facebook
                            </option>
                          </select>
                        </div>
                      </div>
                    </div>
                    <button
                      className="btnProjet"
                      disabled={true}
                      tabIndex="4"
                      type="submit"
                    >
                      Go !
                    </button>
                  </form>,
                ],
                "className": "mainApp",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h3
                    className="mission"
                  >
                    Validating the effects of social media on brand valuation
                  </h3>,
                  <h5>
                    - in 3 simple steps -
                  </h5>,
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="cover"
                    >
                      <h2
                        className="num"
                      >
                        01/ 
                        <span>
                           enter the symbol
                        </span>
                      </h2>
                      <div
                        className="search"
                      >
                        <label
                          className="inp"
                          htmlFor="stockInput"
                        >
                          <input
                            autoComplete="off"
                            className="searchInput"
                            id="stockInput"
                            name="stockInput"
                            onChange={[Function]}
                            spellCheck="false"
                            tabIndex="1"
                            type="text"
                            value=""
                          />
                          <span
                            className="label"
                            style={null}
                          >
                            search...
                          </span>
                        </label>
                        <div
                          className="wrapSelect"
                        >
                          <h2
                            className="num"
                          >
                            02/ 
                            <span>
                               days reviewed
                            </span>
                          </h2>
                          <select
                            name="value"
                            onChange={[Function]}
                            tabIndex="2"
                            value="10"
                          >
                            <option
                              value="10"
                            >
                              10 days
                            </option>
                            <option
                              value="20"
                            >
                              20 days
                            </option>
                            <option
                              value="30"
                            >
                              30 days
                            </option>
                            <option
                              value="60"
                            >
                              60 days
                            </option>
                            <option
                              value="90"
                            >
                              90 days
                            </option>
                          </select>
                        </div>
                        <div
                          className="wrapSelectSocial"
                        >
                          <h2
                            className="num"
                          >
                            03/ 
                            <span>
                               by social Media
                            </span>
                          </h2>
                          <select
                            name="socialValue"
                            onChange={[Function]}
                            tabIndex="3"
                            value="twitter"
                          >
                            <option
                              value="twitter"
                            >
                              twitter
                            </option>
                            <option
                              value="facebook"
                            >
                              facebook
                            </option>
                          </select>
                        </div>
                      </div>
                    </div>
                    <button
                      className="btnProjet"
                      disabled={true}
                      tabIndex="4"
                      type="submit"
                    >
                      Go !
                    </button>
                  </form>,
                ],
                "className": "mainApp",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="mainApp"
              >
                <h3
                  class="mission"
                >
                  Validating the effects of social media on brand valuation
                </h3>
                <h5>
                  - in 3 simple steps -
                </h5>
                <form>
                  <div
                    class="cover"
                  >
                    <h2
                      class="num"
                    >
                      01/ 
                      <span>
                         enter the symbol
                      </span>
                    </h2>
                    <div
                      class="search"
                    >
                      <label
                        class="inp"
                        for="stockInput"
                      >
                        <input
                          autocomplete="off"
                          class="searchInput"
                          id="stockInput"
                          name="stockInput"
                          spellcheck="false"
                          tabindex="1"
                          type="text"
                          value=""
                        />
                        <span
                          class="label"
                        >
                          search...
                        </span>
                      </label>
                      <div
                        class="wrapSelect"
                      >
                        <h2
                          class="num"
                        >
                          02/ 
                          <span>
                             days reviewed
                          </span>
                        </h2>
                        <select
                          name="value"
                          tabindex="2"
                        >
                          <option
                            value="10"
                          >
                            10 days
                          </option>
                          <option
                            value="20"
                          >
                            20 days
                          </option>
                          <option
                            value="30"
                          >
                            30 days
                          </option>
                          <option
                            value="60"
                          >
                            60 days
                          </option>
                          <option
                            value="90"
                          >
                            90 days
                          </option>
                        </select>
                      </div>
                      <div
                        class="wrapSelectSocial"
                      >
                        <h2
                          class="num"
                        >
                          03/ 
                          <span>
                             by social Media
                          </span>
                        </h2>
                        <select
                          name="socialValue"
                          tabindex="3"
                        >
                          <option
                            value="twitter"
                          >
                            twitter
                          </option>
                          <option
                            value="facebook"
                          >
                            facebook
                          </option>
                        </select>
                      </div>
                    </div>
                  </div>
                  <button
                    class="btnProjet"
                    disabled=""
                    tabindex="4"
                    type="submit"
                  >
                    Go !
                  </button>
                </form>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": "div",
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <Header
                stockName={null}
              />,
              <div
                className="mainApp"
              >
                <h3
                  className="mission"
                >
                  Validating the effects of social media on brand valuation
                </h3>
                <h5>
                  - in 3 simple steps -
                </h5>
                <form
                  onSubmit={[Function]}
                >
                  <div
                    className="cover"
                  >
                    <h2
                      className="num"
                    >
                      01/ 
                      <span>
                         enter the symbol
                      </span>
                    </h2>
                    <div
                      className="search"
                    >
                      <label
                        className="inp"
                        htmlFor="stockInput"
                      >
                        <input
                          autoComplete="off"
                          className="searchInput"
                          id="stockInput"
                          name="stockInput"
                          onChange={[Function]}
                          spellCheck="false"
                          tabIndex="1"
                          type="text"
                          value=""
                        />
                        <span
                          className="label"
                          style={null}
                        >
                          search...
                        </span>
                      </label>
                      <div
                        className="wrapSelect"
                      >
                        <h2
                          className="num"
                        >
                          02/ 
                          <span>
                             days reviewed
                          </span>
                        </h2>
                        <select
                          name="value"
                          onChange={[Function]}
                          tabIndex="2"
                          value="10"
                        >
                          <option
                            value="10"
                          >
                            10 days
                          </option>
                          <option
                            value="20"
                          >
                            20 days
                          </option>
                          <option
                            value="30"
                          >
                            30 days
                          </option>
                          <option
                            value="60"
                          >
                            60 days
                          </option>
                          <option
                            value="90"
                          >
                            90 days
                          </option>
                        </select>
                      </div>
                      <div
                        className="wrapSelectSocial"
                      >
                        <h2
                          className="num"
                        >
                          03/ 
                          <span>
                             by social Media
                          </span>
                        </h2>
                        <select
                          name="socialValue"
                          onChange={[Function]}
                          tabIndex="3"
                          value="twitter"
                        >
                          <option
                            value="twitter"
                          >
                            twitter
                          </option>
                          <option
                            value="facebook"
                          >
                            facebook
                          </option>
                        </select>
                      </div>
                    </div>
                  </div>
                  <button
                    className="btnProjet"
                    disabled={true}
                    tabIndex="4"
                    type="submit"
                  >
                    Go !
                  </button>
                </form>
              </div>,
              false,
            ],
            "className": "App",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <Header
                stockName={null}
              />,
              <div
                className="mainApp"
              >
                <h3
                  className="mission"
                >
                  Validating the effects of social media on brand valuation
                </h3>
                <h5>
                  - in 3 simple steps -
                </h5>
                <form
                  onSubmit={[Function]}
                >
                  <div
                    className="cover"
                  >
                    <h2
                      className="num"
                    >
                      01/ 
                      <span>
                         enter the symbol
                      </span>
                    </h2>
                    <div
                      className="search"
                    >
                      <label
                        className="inp"
                        htmlFor="stockInput"
                      >
                        <input
                          autoComplete="off"
                          className="searchInput"
                          id="stockInput"
                          name="stockInput"
                          onChange={[Function]}
                          spellCheck="false"
                          tabIndex="1"
                          type="text"
                          value=""
                        />
                        <span
                          className="label"
                          style={null}
                        >
                          search...
                        </span>
                      </label>
                      <div
                        className="wrapSelect"
                      >
                        <h2
                          className="num"
                        >
                          02/ 
                          <span>
                             days reviewed
                          </span>
                        </h2>
                        <select
                          name="value"
                          onChange={[Function]}
                          tabIndex="2"
                          value="10"
                        >
                          <option
                            value="10"
                          >
                            10 days
                          </option>
                          <option
                            value="20"
                          >
                            20 days
                          </option>
                          <option
                            value="30"
                          >
                            30 days
                          </option>
                          <option
                            value="60"
                          >
                            60 days
                          </option>
                          <option
                            value="90"
                          >
                            90 days
                          </option>
                        </select>
                      </div>
                      <div
                        className="wrapSelectSocial"
                      >
                        <h2
                          className="num"
                        >
                          03/ 
                          <span>
                             by social Media
                          </span>
                        </h2>
                        <select
                          name="socialValue"
                          onChange={[Function]}
                          tabIndex="3"
                          value="twitter"
                        >
                          <option
                            value="twitter"
                          >
                            twitter
                          </option>
                          <option
                            value="facebook"
                          >
                            facebook
                          </option>
                        </select>
                      </div>
                    </div>
                  </div>
                  <button
                    className="btnProjet"
                    disabled={true}
                    tabIndex="4"
                    type="submit"
                  >
                    Go !
                  </button>
                </form>
              </div>,
              false,
            ],
            "className": "App",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <div
            class="App"
          >
            <div>
              <div
                class="header"
              >
                <h1>
                  stockz 
                  <span>
                    Â®
                  </span>
                </h1>
                <div
                  class="current"
                  style="transform: translateX(150px);"
                >
                  <div
                    class="headerInfo"
                  >
                    <h6
                      class="name"
                    />
                    <h6
                      class="valeur"
                    />
                    <p>
                      last updated:
                    </p>
                    <h6
                      class="date"
                    />
                  </div>
                </div>
              </div>
            </div>
            <div
              class="mainApp"
            >
              <h3
                class="mission"
              >
                Validating the effects of social media on brand valuation
              </h3>
              <h5>
                - in 3 simple steps -
              </h5>
              <form>
                <div
                  class="cover"
                >
                  <h2
                    class="num"
                  >
                    01/ 
                    <span>
                       enter the symbol
                    </span>
                  </h2>
                  <div
                    class="search"
                  >
                    <label
                      class="inp"
                      for="stockInput"
                    >
                      <input
                        autocomplete="off"
                        class="searchInput"
                        id="stockInput"
                        name="stockInput"
                        spellcheck="false"
                        tabindex="1"
                        type="text"
                        value=""
                      />
                      <span
                        class="label"
                      >
                        search...
                      </span>
                    </label>
                    <div
                      class="wrapSelect"
                    >
                      <h2
                        class="num"
                      >
                        02/ 
                        <span>
                           days reviewed
                        </span>
                      </h2>
                      <select
                        name="value"
                        tabindex="2"
                      >
                        <option
                          value="10"
                        >
                          10 days
                        </option>
                        <option
                          value="20"
                        >
                          20 days
                        </option>
                        <option
                          value="30"
                        >
                          30 days
                        </option>
                        <option
                          value="60"
                        >
                          60 days
                        </option>
                        <option
                          value="90"
                        >
                          90 days
                        </option>
                      </select>
                    </div>
                    <div
                      class="wrapSelectSocial"
                    >
                      <h2
                        class="num"
                      >
                        03/ 
                        <span>
                           by social Media
                        </span>
                      </h2>
                      <select
                        name="socialValue"
                        tabindex="3"
                      >
                        <option
                          value="twitter"
                        >
                          twitter
                        </option>
                        <option
                          value="facebook"
                        >
                          facebook
                        </option>
                      </select>
                    </div>
                  </div>
                </div>
                <button
                  class="btnProjet"
                  disabled=""
                  tabindex="4"
                  type="submit"
                >
                  Go !
                </button>
              </form>
            </div>
          </div>,
          "tag": 5,
          "treeBaseDuration": 0,
          "type": "div",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 5,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": Object {
          "isLoading": false,
          "socialValue": "twitter",
          "stockData": Array [],
          "stockInput": "",
          "stockName": null,
          "value": "10",
        },
        "mode": 0,
        "nextEffect": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 58,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <div>
                      <div
                        class="header"
                      >
                        <h1>
                          stockz 
                          <span>
                            Â®
                          </span>
                        </h1>
                        <div
                          class="current"
                          style="transform: translateX(150px);"
                        >
                          <div
                            class="headerInfo"
                          >
                            <h6
                              class="name"
                            />
                            <h6
                              class="valeur"
                            />
                            <p>
                              last updated:
                            </p>
                            <h6
                              class="date"
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="mainApp"
                    >
                      <h3
                        class="mission"
                      >
                        Validating the effects of social media on brand valuation
                      </h3>
                      <h5>
                        - in 3 simple steps -
                      </h5>
                      <form>
                        <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>
                        <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>
                      </form>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="App"
                >
                  <div>
                    <div
                      class="header"
                    >
                      <h1>
                        stockz 
                        <span>
                          Â®
                        </span>
                      </h1>
                      <div
                        class="current"
                        style="transform: translateX(150px);"
                      >
                        <div
                          class="headerInfo"
                        >
                          <h6
                            class="name"
                          />
                          <h6
                            class="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            class="date"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    class="mainApp"
                  >
                    <h3
                      class="mission"
                    >
                      Validating the effects of social media on brand valuation
                    </h3>
                    <h5>
                      - in 3 simple steps -
                    </h5>
                    <form>
                      <div
                        class="cover"
                      >
                        <h2
                          class="num"
                        >
                          01/ 
                          <span>
                             enter the symbol
                          </span>
                        </h2>
                        <div
                          class="search"
                        >
                          <label
                            class="inp"
                            for="stockInput"
                          >
                            <input
                              autocomplete="off"
                              class="searchInput"
                              id="stockInput"
                              name="stockInput"
                              spellcheck="false"
                              tabindex="1"
                              type="text"
                              value=""
                            />
                            <span
                              class="label"
                            >
                              search...
                            </span>
                          </label>
                          <div
                            class="wrapSelect"
                          >
                            <h2
                              class="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              tabindex="2"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>
                          <div
                            class="wrapSelectSocial"
                          >
                            <h2
                              class="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              tabindex="3"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>
                        </div>
                      </div>
                      <button
                        class="btnProjet"
                        disabled=""
                        tabindex="4"
                        type="submit"
                      >
                        Go !
                      </button>
                    </form>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 14,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <div>
                      <div
                        class="header"
                      >
                        <h1>
                          stockz 
                          <span>
                            Â®
                          </span>
                        </h1>
                        <div
                          class="current"
                          style="transform: translateX(150px);"
                        >
                          <div
                            class="headerInfo"
                          >
                            <h6
                              class="name"
                            />
                            <h6
                              class="valeur"
                            />
                            <p>
                              last updated:
                            </p>
                            <h6
                              class="date"
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="mainApp"
                    >
                      <h3
                        class="mission"
                      >
                        Validating the effects of social media on brand valuation
                      </h3>
                      <h5>
                        - in 3 simple steps -
                      </h5>
                      <form>
                        <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>
                        <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>
                      </form>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="App"
                >
                  <div>
                    <div
                      class="header"
                    >
                      <h1>
                        stockz 
                        <span>
                          Â®
                        </span>
                      </h1>
                      <div
                        class="current"
                        style="transform: translateX(150px);"
                      >
                        <div
                          class="headerInfo"
                        >
                          <h6
                            class="name"
                          />
                          <h6
                            class="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            class="date"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    class="mainApp"
                  >
                    <h3
                      class="mission"
                    >
                      Validating the effects of social media on brand valuation
                    </h3>
                    <h5>
                      - in 3 simple steps -
                    </h5>
                    <form>
                      <div
                        class="cover"
                      >
                        <h2
                          class="num"
                        >
                          01/ 
                          <span>
                             enter the symbol
                          </span>
                        </h2>
                        <div
                          class="search"
                        >
                          <label
                            class="inp"
                            for="stockInput"
                          >
                            <input
                              autocomplete="off"
                              class="searchInput"
                              id="stockInput"
                              name="stockInput"
                              spellcheck="false"
                              tabindex="1"
                              type="text"
                              value=""
                            />
                            <span
                              class="label"
                            >
                              search...
                            </span>
                          </label>
                          <div
                            class="wrapSelect"
                          >
                            <h2
                              class="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              tabindex="2"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>
                          <div
                            class="wrapSelectSocial"
                          >
                            <h2
                              class="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              tabindex="3"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>
                        </div>
                      </div>
                      <button
                        class="btnProjet"
                        disabled=""
                        tabindex="4"
                        type="submit"
                      >
                        Go !
                      </button>
                    </form>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 14,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "pendingProps": Object {},
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 58,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <div>
                      <div
                        class="header"
                      >
                        <h1>
                          stockz 
                          <span>
                            Â®
                          </span>
                        </h1>
                        <div
                          class="current"
                          style="transform: translateX(150px);"
                        >
                          <div
                            class="headerInfo"
                          >
                            <h6
                              class="name"
                            />
                            <h6
                              class="valeur"
                            />
                            <p>
                              last updated:
                            </p>
                            <h6
                              class="date"
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="mainApp"
                    >
                      <h3
                        class="mission"
                      >
                        Validating the effects of social media on brand valuation
                      </h3>
                      <h5>
                        - in 3 simple steps -
                      </h5>
                      <form>
                        <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>
                        <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>
                      </form>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="App"
                >
                  <div>
                    <div
                      class="header"
                    >
                      <h1>
                        stockz 
                        <span>
                          Â®
                        </span>
                      </h1>
                      <div
                        class="current"
                        style="transform: translateX(150px);"
                      >
                        <div
                          class="headerInfo"
                        >
                          <h6
                            class="name"
                          />
                          <h6
                            class="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            class="date"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    class="mainApp"
                  >
                    <h3
                      class="mission"
                    >
                      Validating the effects of social media on brand valuation
                    </h3>
                    <h5>
                      - in 3 simple steps -
                    </h5>
                    <form>
                      <div
                        class="cover"
                      >
                        <h2
                          class="num"
                        >
                          01/ 
                          <span>
                             enter the symbol
                          </span>
                        </h2>
                        <div
                          class="search"
                        >
                          <label
                            class="inp"
                            for="stockInput"
                          >
                            <input
                              autocomplete="off"
                              class="searchInput"
                              id="stockInput"
                              name="stockInput"
                              spellcheck="false"
                              tabindex="1"
                              type="text"
                              value=""
                            />
                            <span
                              class="label"
                            >
                              search...
                            </span>
                          </label>
                          <div
                            class="wrapSelect"
                          >
                            <h2
                              class="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              tabindex="2"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>
                          <div
                            class="wrapSelectSocial"
                          >
                            <h2
                              class="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              tabindex="3"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>
                        </div>
                      </div>
                      <button
                        class="btnProjet"
                        disabled=""
                        tabindex="4"
                        type="submit"
                      >
                        Go !
                      </button>
                    </form>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 14,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <div>
                      <div
                        class="header"
                      >
                        <h1>
                          stockz 
                          <span>
                            Â®
                          </span>
                        </h1>
                        <div
                          class="current"
                          style="transform: translateX(150px);"
                        >
                          <div
                            class="headerInfo"
                          >
                            <h6
                              class="name"
                            />
                            <h6
                              class="valeur"
                            />
                            <p>
                              last updated:
                            </p>
                            <h6
                              class="date"
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="mainApp"
                    >
                      <h3
                        class="mission"
                      >
                        Validating the effects of social media on brand valuation
                      </h3>
                      <h5>
                        - in 3 simple steps -
                      </h5>
                      <form>
                        <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>
                        <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>
                      </form>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="App"
                >
                  <div>
                    <div
                      class="header"
                    >
                      <h1>
                        stockz 
                        <span>
                          Â®
                        </span>
                      </h1>
                      <div
                        class="current"
                        style="transform: translateX(150px);"
                      >
                        <div
                          class="headerInfo"
                        >
                          <h6
                            class="name"
                          />
                          <h6
                            class="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            class="date"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    class="mainApp"
                  >
                    <h3
                      class="mission"
                    >
                      Validating the effects of social media on brand valuation
                    </h3>
                    <h5>
                      - in 3 simple steps -
                    </h5>
                    <form>
                      <div
                        class="cover"
                      >
                        <h2
                          class="num"
                        >
                          01/ 
                          <span>
                             enter the symbol
                          </span>
                        </h2>
                        <div
                          class="search"
                        >
                          <label
                            class="inp"
                            for="stockInput"
                          >
                            <input
                              autocomplete="off"
                              class="searchInput"
                              id="stockInput"
                              name="stockInput"
                              spellcheck="false"
                              tabindex="1"
                              type="text"
                              value=""
                            />
                            <span
                              class="label"
                            >
                              search...
                            </span>
                          </label>
                          <div
                            class="wrapSelect"
                          >
                            <h2
                              class="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              tabindex="2"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>
                          <div
                            class="wrapSelectSocial"
                          >
                            <h2
                              class="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              tabindex="3"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>
                        </div>
                      </div>
                      <button
                        class="btnProjet"
                        disabled=""
                        tabindex="4"
                        type="submit"
                      >
                        Go !
                      </button>
                    </form>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 14,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "componentDidMount": [Function],
      "context": Object {},
      "handleChange": [Function],
      "props": Object {},
      "refs": Object {},
      "state": Object {
        "isLoading": false,
        "socialValue": "twitter",
        "stockData": Array [],
        "stockInput": "",
        "stockName": null,
        "value": "10",
      },
      "stockPriceGenerator": [Function],
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="App"
      >
        <div>
          <div
            class="header"
          >
            <h1>
              stockz 
              <span>
                Â®
              </span>
            </h1>
            <div
              class="current"
              style="transform: translateX(150px);"
            >
              <div
                class="headerInfo"
              >
                <h6
                  class="name"
                />
                <h6
                  class="valeur"
                />
                <p>
                  last updated:
                </p>
                <h6
                  class="date"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          class="mainApp"
        >
          <h3
            class="mission"
          >
            Validating the effects of social media on brand valuation
          </h3>
          <h5>
            - in 3 simple steps -
          </h5>
          <form>
            <div
              class="cover"
            >
              <h2
                class="num"
              >
                01/ 
                <span>
                   enter the symbol
                </span>
              </h2>
              <div
                class="search"
              >
                <label
                  class="inp"
                  for="stockInput"
                >
                  <input
                    autocomplete="off"
                    class="searchInput"
                    id="stockInput"
                    name="stockInput"
                    spellcheck="false"
                    tabindex="1"
                    type="text"
                    value=""
                  />
                  <span
                    class="label"
                  >
                    search...
                  </span>
                </label>
                <div
                  class="wrapSelect"
                >
                  <h2
                    class="num"
                  >
                    02/ 
                    <span>
                       days reviewed
                    </span>
                  </h2>
                  <select
                    name="value"
                    tabindex="2"
                  >
                    <option
                      value="10"
                    >
                      10 days
                    </option>
                    <option
                      value="20"
                    >
                      20 days
                    </option>
                    <option
                      value="30"
                    >
                      30 days
                    </option>
                    <option
                      value="60"
                    >
                      60 days
                    </option>
                    <option
                      value="90"
                    >
                      90 days
                    </option>
                  </select>
                </div>
                <div
                  class="wrapSelectSocial"
                >
                  <h2
                    class="num"
                  >
                    03/ 
                    <span>
                       by social Media
                    </span>
                  </h2>
                  <select
                    name="socialValue"
                    tabindex="3"
                  >
                    <option
                      value="twitter"
                    >
                      twitter
                    </option>
                    <option
                      value="facebook"
                    >
                      facebook
                    </option>
                  </select>
                </div>
              </div>
            </div>
            <button
              class="btnProjet"
              disabled=""
              tabindex="4"
              type="submit"
            >
              Go !
            </button>
          </form>
        </div>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header
            stockName={null}
          />,
          <div
            className="mainApp"
          >
            <h3
              className="mission"
            >
              Validating the effects of social media on brand valuation
            </h3>
            <h5>
              - in 3 simple steps -
            </h5>
            <form
              onSubmit={[Function]}
            >
              <div
                className="cover"
              >
                <h2
                  className="num"
                >
                  01/ 
                  <span>
                     enter the symbol
                  </span>
                </h2>
                <div
                  className="search"
                >
                  <label
                    className="inp"
                    htmlFor="stockInput"
                  >
                    <input
                      autoComplete="off"
                      className="searchInput"
                      id="stockInput"
                      name="stockInput"
                      onChange={[Function]}
                      spellCheck="false"
                      tabIndex="1"
                      type="text"
                      value=""
                    />
                    <span
                      className="label"
                      style={null}
                    >
                      search...
                    </span>
                  </label>
                  <div
                    className="wrapSelect"
                  >
                    <h2
                      className="num"
                    >
                      02/ 
                      <span>
                         days reviewed
                      </span>
                    </h2>
                    <select
                      name="value"
                      onChange={[Function]}
                      tabIndex="2"
                      value="10"
                    >
                      <option
                        value="10"
                      >
                        10 days
                      </option>
                      <option
                        value="20"
                      >
                        20 days
                      </option>
                      <option
                        value="30"
                      >
                        30 days
                      </option>
                      <option
                        value="60"
                      >
                        60 days
                      </option>
                      <option
                        value="90"
                      >
                        90 days
                      </option>
                    </select>
                  </div>
                  <div
                    className="wrapSelectSocial"
                  >
                    <h2
                      className="num"
                    >
                      03/ 
                      <span>
                         by social Media
                      </span>
                    </h2>
                    <select
                      name="socialValue"
                      onChange={[Function]}
                      tabIndex="3"
                      value="twitter"
                    >
                      <option
                        value="twitter"
                      >
                        twitter
                      </option>
                      <option
                        value="facebook"
                      >
                        facebook
                      </option>
                    </select>
                  </div>
                </div>
              </div>
              <button
                className="btnProjet"
                disabled={true}
                tabIndex="4"
                type="submit"
              >
                Go !
              </button>
            </form>
          </div>,
          false,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "stockName": null,
          },
          "ref": null,
          "rendered": Object {
            "instance": <div>
              <div
                class="header"
              >
                <h1>
                  stockz 
                  <span>
                    Â®
                  </span>
                </h1>
                <div
                  class="current"
                  style="transform: translateX(150px);"
                >
                  <div
                    class="headerInfo"
                  >
                    <h6
                      class="name"
                    />
                    <h6
                      class="valeur"
                    />
                    <p>
                      last updated:
                    </p>
                    <h6
                      class="date"
                    />
                  </div>
                </div>
              </div>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="header"
              >
                <h1>
                  stockz 
                  <span>
                    Â®
                  </span>
                </h1>
                <div
                  className="current"
                  style={
                    Object {
                      "transform": "translateX(150px)",
                    }
                  }
                >
                  <div
                    className="headerInfo"
                  >
                    <h6
                      className="name"
                    />
                    <h6
                      className="valeur"
                    />
                    <p>
                      last updated:
                    </p>
                    <h6
                      className="date"
                    />
                  </div>
                </div>
              </div>,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="header"
                >
                  <h1>
                    stockz 
                    <span>
                      Â®
                    </span>
                  </h1>
                  <div
                    class="current"
                    style="transform: translateX(150px);"
                  >
                    <div
                      class="headerInfo"
                    >
                      <h6
                        class="name"
                      />
                      <h6
                        class="valeur"
                      />
                      <p>
                        last updated:
                      </p>
                      <h6
                        class="date"
                      />
                    </div>
                  </div>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h1>
                      stockz 
                      <span>
                        Â®
                      </span>
                    </h1>,
                    <div
                      className="current"
                      style={
                        Object {
                          "transform": "translateX(150px)",
                        }
                      }
                    >
                      <div
                        className="headerInfo"
                      >
                        <h6
                          className="name"
                        />
                        <h6
                          className="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          className="date"
                        />
                      </div>
                    </div>,
                  ],
                  "className": "header",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <h1>
                      stockz 
                      <span>
                        Â®
                      </span>
                    </h1>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "stockz ",
                        <span>
                          Â®
                        </span>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "stockz ",
                      Object {
                        "instance": <span>
                          Â®
                        </span>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Â®",
                        },
                        "ref": null,
                        "rendered": Array [
                          "Â®",
                        ],
                        "type": "span",
                      },
                    ],
                    "type": "h1",
                  },
                  Object {
                    "instance": <div
                      class="current"
                      style="transform: translateX(150px);"
                    >
                      <div
                        class="headerInfo"
                      >
                        <h6
                          class="name"
                        />
                        <h6
                          class="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          class="date"
                        />
                      </div>
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="headerInfo"
                      >
                        <h6
                          className="name"
                        />
                        <h6
                          className="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          className="date"
                        />
                      </div>,
                      "className": "current",
                      "style": Object {
                        "transform": "translateX(150px)",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <div
                          class="headerInfo"
                        >
                          <h6
                            class="name"
                          />
                          <h6
                            class="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            class="date"
                          />
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <h6
                              className="name"
                            />,
                            <h6
                              className="valeur"
                            />,
                            <p>
                              last updated:
                            </p>,
                            <h6
                              className="date"
                            />,
                          ],
                          "className": "headerInfo",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <h6
                              class="name"
                            />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": null,
                              "className": "name",
                            },
                            "ref": null,
                            "rendered": Array [
                              null,
                            ],
                            "type": "h6",
                          },
                          Object {
                            "instance": <h6
                              class="valeur"
                            />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": null,
                              "className": "valeur",
                            },
                            "ref": null,
                            "rendered": Array [
                              null,
                            ],
                            "type": "h6",
                          },
                          Object {
                            "instance": <p>
                              last updated:
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "last updated:",
                            },
                            "ref": null,
                            "rendered": Array [
                              "last updated:",
                            ],
                            "type": "p",
                          },
                          Object {
                            "instance": <h6
                              class="date"
                            />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": null,
                              "className": "date",
                            },
                            "ref": null,
                            "rendered": Array [
                              null,
                            ],
                            "type": "h6",
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": <div
            class="mainApp"
          >
            <h3
              class="mission"
            >
              Validating the effects of social media on brand valuation
            </h3>
            <h5>
              - in 3 simple steps -
            </h5>
            <form>
              <div
                class="cover"
              >
                <h2
                  class="num"
                >
                  01/ 
                  <span>
                     enter the symbol
                  </span>
                </h2>
                <div
                  class="search"
                >
                  <label
                    class="inp"
                    for="stockInput"
                  >
                    <input
                      autocomplete="off"
                      class="searchInput"
                      id="stockInput"
                      name="stockInput"
                      spellcheck="false"
                      tabindex="1"
                      type="text"
                      value=""
                    />
                    <span
                      class="label"
                    >
                      search...
                    </span>
                  </label>
                  <div
                    class="wrapSelect"
                  >
                    <h2
                      class="num"
                    >
                      02/ 
                      <span>
                         days reviewed
                      </span>
                    </h2>
                    <select
                      name="value"
                      tabindex="2"
                    >
                      <option
                        value="10"
                      >
                        10 days
                      </option>
                      <option
                        value="20"
                      >
                        20 days
                      </option>
                      <option
                        value="30"
                      >
                        30 days
                      </option>
                      <option
                        value="60"
                      >
                        60 days
                      </option>
                      <option
                        value="90"
                      >
                        90 days
                      </option>
                    </select>
                  </div>
                  <div
                    class="wrapSelectSocial"
                  >
                    <h2
                      class="num"
                    >
                      03/ 
                      <span>
                         by social Media
                      </span>
                    </h2>
                    <select
                      name="socialValue"
                      tabindex="3"
                    >
                      <option
                        value="twitter"
                      >
                        twitter
                      </option>
                      <option
                        value="facebook"
                      >
                        facebook
                      </option>
                    </select>
                  </div>
                </div>
              </div>
              <button
                class="btnProjet"
                disabled=""
                tabindex="4"
                type="submit"
              >
                Go !
              </button>
            </form>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3
                className="mission"
              >
                Validating the effects of social media on brand valuation
              </h3>,
              <h5>
                - in 3 simple steps -
              </h5>,
              <form
                onSubmit={[Function]}
              >
                <div
                  className="cover"
                >
                  <h2
                    className="num"
                  >
                    01/ 
                    <span>
                       enter the symbol
                    </span>
                  </h2>
                  <div
                    className="search"
                  >
                    <label
                      className="inp"
                      htmlFor="stockInput"
                    >
                      <input
                        autoComplete="off"
                        className="searchInput"
                        id="stockInput"
                        name="stockInput"
                        onChange={[Function]}
                        spellCheck="false"
                        tabIndex="1"
                        type="text"
                        value=""
                      />
                      <span
                        className="label"
                        style={null}
                      >
                        search...
                      </span>
                    </label>
                    <div
                      className="wrapSelect"
                    >
                      <h2
                        className="num"
                      >
                        02/ 
                        <span>
                           days reviewed
                        </span>
                      </h2>
                      <select
                        name="value"
                        onChange={[Function]}
                        tabIndex="2"
                        value="10"
                      >
                        <option
                          value="10"
                        >
                          10 days
                        </option>
                        <option
                          value="20"
                        >
                          20 days
                        </option>
                        <option
                          value="30"
                        >
                          30 days
                        </option>
                        <option
                          value="60"
                        >
                          60 days
                        </option>
                        <option
                          value="90"
                        >
                          90 days
                        </option>
                      </select>
                    </div>
                    <div
                      className="wrapSelectSocial"
                    >
                      <h2
                        className="num"
                      >
                        03/ 
                        <span>
                           by social Media
                        </span>
                      </h2>
                      <select
                        name="socialValue"
                        onChange={[Function]}
                        tabIndex="3"
                        value="twitter"
                      >
                        <option
                          value="twitter"
                        >
                          twitter
                        </option>
                        <option
                          value="facebook"
                        >
                          facebook
                        </option>
                      </select>
                    </div>
                  </div>
                </div>
                <button
                  className="btnProjet"
                  disabled={true}
                  tabIndex="4"
                  type="submit"
                >
                  Go !
                </button>
              </form>,
            ],
            "className": "mainApp",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <h3
                class="mission"
              >
                Validating the effects of social media on brand valuation
              </h3>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Validating the effects of social media on brand valuation",
                "className": "mission",
              },
              "ref": null,
              "rendered": Array [
                "Validating the effects of social media on brand valuation",
              ],
              "type": "h3",
            },
            Object {
              "instance": <h5>
                - in 3 simple steps -
              </h5>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "- in 3 simple steps -",
              },
              "ref": null,
              "rendered": Array [
                "- in 3 simple steps -",
              ],
              "type": "h5",
            },
            Object {
              "instance": <form>
                <div
                  class="cover"
                >
                  <h2
                    class="num"
                  >
                    01/ 
                    <span>
                       enter the symbol
                    </span>
                  </h2>
                  <div
                    class="search"
                  >
                    <label
                      class="inp"
                      for="stockInput"
                    >
                      <input
                        autocomplete="off"
                        class="searchInput"
                        id="stockInput"
                        name="stockInput"
                        spellcheck="false"
                        tabindex="1"
                        type="text"
                        value=""
                      />
                      <span
                        class="label"
                      >
                        search...
                      </span>
                    </label>
                    <div
                      class="wrapSelect"
                    >
                      <h2
                        class="num"
                      >
                        02/ 
                        <span>
                           days reviewed
                        </span>
                      </h2>
                      <select
                        name="value"
                        tabindex="2"
                      >
                        <option
                          value="10"
                        >
                          10 days
                        </option>
                        <option
                          value="20"
                        >
                          20 days
                        </option>
                        <option
                          value="30"
                        >
                          30 days
                        </option>
                        <option
                          value="60"
                        >
                          60 days
                        </option>
                        <option
                          value="90"
                        >
                          90 days
                        </option>
                      </select>
                    </div>
                    <div
                      class="wrapSelectSocial"
                    >
                      <h2
                        class="num"
                      >
                        03/ 
                        <span>
                           by social Media
                        </span>
                      </h2>
                      <select
                        name="socialValue"
                        tabindex="3"
                      >
                        <option
                          value="twitter"
                        >
                          twitter
                        </option>
                        <option
                          value="facebook"
                        >
                          facebook
                        </option>
                      </select>
                    </div>
                  </div>
                </div>
                <button
                  class="btnProjet"
                  disabled=""
                  tabindex="4"
                  type="submit"
                >
                  Go !
                </button>
              </form>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="cover"
                  >
                    <h2
                      className="num"
                    >
                      01/ 
                      <span>
                         enter the symbol
                      </span>
                    </h2>
                    <div
                      className="search"
                    >
                      <label
                        className="inp"
                        htmlFor="stockInput"
                      >
                        <input
                          autoComplete="off"
                          className="searchInput"
                          id="stockInput"
                          name="stockInput"
                          onChange={[Function]}
                          spellCheck="false"
                          tabIndex="1"
                          type="text"
                          value=""
                        />
                        <span
                          className="label"
                          style={null}
                        >
                          search...
                        </span>
                      </label>
                      <div
                        className="wrapSelect"
                      >
                        <h2
                          className="num"
                        >
                          02/ 
                          <span>
                             days reviewed
                          </span>
                        </h2>
                        <select
                          name="value"
                          onChange={[Function]}
                          tabIndex="2"
                          value="10"
                        >
                          <option
                            value="10"
                          >
                            10 days
                          </option>
                          <option
                            value="20"
                          >
                            20 days
                          </option>
                          <option
                            value="30"
                          >
                            30 days
                          </option>
                          <option
                            value="60"
                          >
                            60 days
                          </option>
                          <option
                            value="90"
                          >
                            90 days
                          </option>
                        </select>
                      </div>
                      <div
                        className="wrapSelectSocial"
                      >
                        <h2
                          className="num"
                        >
                          03/ 
                          <span>
                             by social Media
                          </span>
                        </h2>
                        <select
                          name="socialValue"
                          onChange={[Function]}
                          tabIndex="3"
                          value="twitter"
                        >
                          <option
                            value="twitter"
                          >
                            twitter
                          </option>
                          <option
                            value="facebook"
                          >
                            facebook
                          </option>
                        </select>
                      </div>
                    </div>
                  </div>,
                  <button
                    className="btnProjet"
                    disabled={true}
                    tabIndex="4"
                    type="submit"
                  >
                    Go !
                  </button>,
                ],
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="cover"
                  >
                    <h2
                      class="num"
                    >
                      01/ 
                      <span>
                         enter the symbol
                      </span>
                    </h2>
                    <div
                      class="search"
                    >
                      <label
                        class="inp"
                        for="stockInput"
                      >
                        <input
                          autocomplete="off"
                          class="searchInput"
                          id="stockInput"
                          name="stockInput"
                          spellcheck="false"
                          tabindex="1"
                          type="text"
                          value=""
                        />
                        <span
                          class="label"
                        >
                          search...
                        </span>
                      </label>
                      <div
                        class="wrapSelect"
                      >
                        <h2
                          class="num"
                        >
                          02/ 
                          <span>
                             days reviewed
                          </span>
                        </h2>
                        <select
                          name="value"
                          tabindex="2"
                        >
                          <option
                            value="10"
                          >
                            10 days
                          </option>
                          <option
                            value="20"
                          >
                            20 days
                          </option>
                          <option
                            value="30"
                          >
                            30 days
                          </option>
                          <option
                            value="60"
                          >
                            60 days
                          </option>
                          <option
                            value="90"
                          >
                            90 days
                          </option>
                        </select>
                      </div>
                      <div
                        class="wrapSelectSocial"
                      >
                        <h2
                          class="num"
                        >
                          03/ 
                          <span>
                             by social Media
                          </span>
                        </h2>
                        <select
                          name="socialValue"
                          tabindex="3"
                        >
                          <option
                            value="twitter"
                          >
                            twitter
                          </option>
                          <option
                            value="facebook"
                          >
                            facebook
                          </option>
                        </select>
                      </div>
                    </div>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h2
                        className="num"
                      >
                        01/ 
                        <span>
                           enter the symbol
                        </span>
                      </h2>,
                      <div
                        className="search"
                      >
                        <label
                          className="inp"
                          htmlFor="stockInput"
                        >
                          <input
                            autoComplete="off"
                            className="searchInput"
                            id="stockInput"
                            name="stockInput"
                            onChange={[Function]}
                            spellCheck="false"
                            tabIndex="1"
                            type="text"
                            value=""
                          />
                          <span
                            className="label"
                            style={null}
                          >
                            search...
                          </span>
                        </label>
                        <div
                          className="wrapSelect"
                        >
                          <h2
                            className="num"
                          >
                            02/ 
                            <span>
                               days reviewed
                            </span>
                          </h2>
                          <select
                            name="value"
                            onChange={[Function]}
                            tabIndex="2"
                            value="10"
                          >
                            <option
                              value="10"
                            >
                              10 days
                            </option>
                            <option
                              value="20"
                            >
                              20 days
                            </option>
                            <option
                              value="30"
                            >
                              30 days
                            </option>
                            <option
                              value="60"
                            >
                              60 days
                            </option>
                            <option
                              value="90"
                            >
                              90 days
                            </option>
                          </select>
                        </div>
                        <div
                          className="wrapSelectSocial"
                        >
                          <h2
                            className="num"
                          >
                            03/ 
                            <span>
                               by social Media
                            </span>
                          </h2>
                          <select
                            name="socialValue"
                            onChange={[Function]}
                            tabIndex="3"
                            value="twitter"
                          >
                            <option
                              value="twitter"
                            >
                              twitter
                            </option>
                            <option
                              value="facebook"
                            >
                              facebook
                            </option>
                          </select>
                        </div>
                      </div>,
                    ],
                    "className": "cover",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <h2
                        class="num"
                      >
                        01/ 
                        <span>
                           enter the symbol
                        </span>
                      </h2>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "01/ ",
                          <span>
                             enter the symbol
                          </span>,
                        ],
                        "className": "num",
                      },
                      "ref": null,
                      "rendered": Array [
                        "01/ ",
                        Object {
                          "instance": <span>
                             enter the symbol
                          </span>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": " enter the symbol",
                          },
                          "ref": null,
                          "rendered": Array [
                            " enter the symbol",
                          ],
                          "type": "span",
                        },
                      ],
                      "type": "h2",
                    },
                    Object {
                      "instance": <div
                        class="search"
                      >
                        <label
                          class="inp"
                          for="stockInput"
                        >
                          <input
                            autocomplete="off"
                            class="searchInput"
                            id="stockInput"
                            name="stockInput"
                            spellcheck="false"
                            tabindex="1"
                            type="text"
                            value=""
                          />
                          <span
                            class="label"
                          >
                            search...
                          </span>
                        </label>
                        <div
                          class="wrapSelect"
                        >
                          <h2
                            class="num"
                          >
                            02/ 
                            <span>
                               days reviewed
                            </span>
                          </h2>
                          <select
                            name="value"
                            tabindex="2"
                          >
                            <option
                              value="10"
                            >
                              10 days
                            </option>
                            <option
                              value="20"
                            >
                              20 days
                            </option>
                            <option
                              value="30"
                            >
                              30 days
                            </option>
                            <option
                              value="60"
                            >
                              60 days
                            </option>
                            <option
                              value="90"
                            >
                              90 days
                            </option>
                          </select>
                        </div>
                        <div
                          class="wrapSelectSocial"
                        >
                          <h2
                            class="num"
                          >
                            03/ 
                            <span>
                               by social Media
                            </span>
                          </h2>
                          <select
                            name="socialValue"
                            tabindex="3"
                          >
                            <option
                              value="twitter"
                            >
                              twitter
                            </option>
                            <option
                              value="facebook"
                            >
                              facebook
                            </option>
                          </select>
                        </div>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <label
                            className="inp"
                            htmlFor="stockInput"
                          >
                            <input
                              autoComplete="off"
                              className="searchInput"
                              id="stockInput"
                              name="stockInput"
                              onChange={[Function]}
                              spellCheck="false"
                              tabIndex="1"
                              type="text"
                              value=""
                            />
                            <span
                              className="label"
                              style={null}
                            >
                              search...
                            </span>
                          </label>,
                          <div
                            className="wrapSelect"
                          >
                            <h2
                              className="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              onChange={[Function]}
                              tabIndex="2"
                              value="10"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>,
                          <div
                            className="wrapSelectSocial"
                          >
                            <h2
                              className="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              onChange={[Function]}
                              tabIndex="3"
                              value="twitter"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>,
                        ],
                        "className": "search",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <label
                            class="inp"
                            for="stockInput"
                          >
                            <input
                              autocomplete="off"
                              class="searchInput"
                              id="stockInput"
                              name="stockInput"
                              spellcheck="false"
                              tabindex="1"
                              type="text"
                              value=""
                            />
                            <span
                              class="label"
                            >
                              search...
                            </span>
                          </label>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <input
                                autoComplete="off"
                                className="searchInput"
                                id="stockInput"
                                name="stockInput"
                                onChange={[Function]}
                                spellCheck="false"
                                tabIndex="1"
                                type="text"
                                value=""
                              />,
                              <span
                                className="label"
                                style={null}
                              >
                                search...
                              </span>,
                            ],
                            "className": "inp",
                            "htmlFor": "stockInput",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "autoComplete": "off",
                                "className": "searchInput",
                                "id": "stockInput",
                                "name": "stockInput",
                                "onChange": [Function],
                                "spellCheck": "false",
                                "tabIndex": "1",
                                "type": "text",
                                "value": "",
                              },
                              "ref": null,
                              "rendered": Array [
                                undefined,
                              ],
                              "type": "input",
                            },
                            Object {
                              "instance": <span
                                class="label"
                              >
                                search...
                              </span>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "search...",
                                "className": "label",
                                "style": null,
                              },
                              "ref": null,
                              "rendered": Array [
                                "search...",
                              ],
                              "type": "span",
                            },
                          ],
                          "type": "label",
                        },
                        Object {
                          "instance": <div
                            class="wrapSelect"
                          >
                            <h2
                              class="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              tabindex="2"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <h2
                                className="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>,
                              <select
                                name="value"
                                onChange={[Function]}
                                tabIndex="2"
                                value="10"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>,
                            ],
                            "className": "wrapSelect",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  "02/ ",
                                  <span>
                                     days reviewed
                                  </span>,
                                ],
                                "className": "num",
                              },
                              "ref": null,
                              "rendered": Array [
                                "02/ ",
                                Object {
                                  "instance": <span>
                                     days reviewed
                                  </span>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": " days reviewed",
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    " days reviewed",
                                  ],
                                  "type": "span",
                                },
                              ],
                              "type": "h2",
                            },
                            Object {
                              "instance": <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>,
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>,
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>,
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>,
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>,
                                ],
                                "name": "value",
                                "onChange": [Function],
                                "tabIndex": "2",
                                "value": "10",
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": <option
                                    value="10"
                                  >
                                    10 days
                                  </option>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "10 days",
                                    "value": "10",
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "10 days",
                                  ],
                                  "type": "option",
                                },
                                Object {
                                  "instance": <option
                                    value="20"
                                  >
                                    20 days
                                  </option>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "20 days",
                                    "value": "20",
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "20 days",
                                  ],
                                  "type": "option",
                                },
                                Object {
                                  "instance": <option
                                    value="30"
                                  >
                                    30 days
                                  </option>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "30 days",
                                    "value": "30",
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "30 days",
                                  ],
                                  "type": "option",
                                },
                                Object {
                                  "instance": <option
                                    value="60"
                                  >
                                    60 days
                                  </option>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "60 days",
                                    "value": "60",
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "60 days",
                                  ],
                                  "type": "option",
                                },
                                Object {
                                  "instance": <option
                                    value="90"
                                  >
                                    90 days
                                  </option>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "90 days",
                                    "value": "90",
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "90 days",
                                  ],
                                  "type": "option",
                                },
                              ],
                              "type": "select",
                            },
                          ],
                          "type": "div",
                        },
                        Object {
                          "instance": <div
                            class="wrapSelectSocial"
                          >
                            <h2
                              class="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              tabindex="3"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <h2
                                className="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>,
                              <select
                                name="socialValue"
                                onChange={[Function]}
                                tabIndex="3"
                                value="twitter"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>,
                            ],
                            "className": "wrapSelectSocial",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  "03/ ",
                                  <span>
                                     by social Media
                                  </span>,
                                ],
                                "className": "num",
                              },
                              "ref": null,
                              "rendered": Array [
                                "03/ ",
                                Object {
                                  "instance": <span>
                                     by social Media
                                  </span>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": " by social Media",
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    " by social Media",
                                  ],
                                  "type": "span",
                                },
                              ],
                              "type": "h2",
                            },
                            Object {
                              "instance": <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>,
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>,
                                ],
                                "name": "socialValue",
                                "onChange": [Function],
                                "tabIndex": "3",
                                "value": "twitter",
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "twitter",
                                    "value": "twitter",
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "twitter",
                                  ],
                                  "type": "option",
                                },
                                Object {
                                  "instance": <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "facebook",
                                    "value": "facebook",
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "facebook",
                                  ],
                                  "type": "option",
                                },
                              ],
                              "type": "select",
                            },
                          ],
                          "type": "div",
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <button
                    class="btnProjet"
                    disabled=""
                    tabindex="4"
                    type="submit"
                  >
                    Go !
                  </button>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Go !",
                    "className": "btnProjet",
                    "disabled": true,
                    "tabIndex": "4",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Go !",
                  ],
                  "type": "button",
                },
              ],
              "type": "form",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": App {
        "_reactInternalFiber": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 59,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 58,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="App"
                    >
                      <div>
                        <div
                          class="header"
                        >
                          <h1>
                            stockz 
                            <span>
                              Â®
                            </span>
                          </h1>
                          <div
                            class="current"
                            style="transform: translateX(150px);"
                          >
                            <div
                              class="headerInfo"
                            >
                              <h6
                                class="name"
                              />
                              <h6
                                class="valeur"
                              />
                              <p>
                                last updated:
                              </p>
                              <h6
                                class="date"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        class="mainApp"
                      >
                        <h3
                          class="mission"
                        >
                          Validating the effects of social media on brand valuation
                        </h3>
                        <h5>
                          - in 3 simple steps -
                        </h5>
                        <form>
                          <div
                            class="cover"
                          >
                            <h2
                              class="num"
                            >
                              01/ 
                              <span>
                                 enter the symbol
                              </span>
                            </h2>
                            <div
                              class="search"
                            >
                              <label
                                class="inp"
                                for="stockInput"
                              >
                                <input
                                  autocomplete="off"
                                  class="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  spellcheck="false"
                                  tabindex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  class="label"
                                >
                                  search...
                                </span>
                              </label>
                              <div
                                class="wrapSelect"
                              >
                                <h2
                                  class="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  tabindex="2"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>
                              <div
                                class="wrapSelectSocial"
                              >
                                <h2
                                  class="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>
                                <select
                                  name="socialValue"
                                  tabindex="3"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                          <button
                            class="btnProjet"
                            disabled=""
                            tabindex="4"
                            type="submit"
                          >
                            Go !
                          </button>
                        </form>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 14,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <div>
                      <div
                        class="header"
                      >
                        <h1>
                          stockz 
                          <span>
                            Â®
                          </span>
                        </h1>
                        <div
                          class="current"
                          style="transform: translateX(150px);"
                        >
                          <div
                            class="headerInfo"
                          >
                            <h6
                              class="name"
                            />
                            <h6
                              class="valeur"
                            />
                            <p>
                              last updated:
                            </p>
                            <h6
                              class="date"
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="mainApp"
                    >
                      <h3
                        class="mission"
                      >
                        Validating the effects of social media on brand valuation
                      </h3>
                      <h5>
                        - in 3 simple steps -
                      </h5>
                      <form>
                        <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>
                        <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>
                      </form>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="App"
                    >
                      <div>
                        <div
                          class="header"
                        >
                          <h1>
                            stockz 
                            <span>
                              Â®
                            </span>
                          </h1>
                          <div
                            class="current"
                            style="transform: translateX(150px);"
                          >
                            <div
                              class="headerInfo"
                            >
                              <h6
                                class="name"
                              />
                              <h6
                                class="valeur"
                              />
                              <p>
                                last updated:
                              </p>
                              <h6
                                class="date"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        class="mainApp"
                      >
                        <h3
                          class="mission"
                        >
                          Validating the effects of social media on brand valuation
                        </h3>
                        <h5>
                          - in 3 simple steps -
                        </h5>
                        <form>
                          <div
                            class="cover"
                          >
                            <h2
                              class="num"
                            >
                              01/ 
                              <span>
                                 enter the symbol
                              </span>
                            </h2>
                            <div
                              class="search"
                            >
                              <label
                                class="inp"
                                for="stockInput"
                              >
                                <input
                                  autocomplete="off"
                                  class="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  spellcheck="false"
                                  tabindex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  class="label"
                                >
                                  search...
                                </span>
                              </label>
                              <div
                                class="wrapSelect"
                              >
                                <h2
                                  class="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  tabindex="2"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>
                              <div
                                class="wrapSelectSocial"
                              >
                                <h2
                                  class="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>
                                <select
                                  name="socialValue"
                                  tabindex="3"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                          <button
                            class="btnProjet"
                            disabled=""
                            tabindex="4"
                            type="submit"
                          >
                            Go !
                          </button>
                        </form>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 14,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <div>
                      <div
                        class="header"
                      >
                        <h1>
                          stockz 
                          <span>
                            Â®
                          </span>
                        </h1>
                        <div
                          class="current"
                          style="transform: translateX(150px);"
                        >
                          <div
                            class="headerInfo"
                          >
                            <h6
                              class="name"
                            />
                            <h6
                              class="valeur"
                            />
                            <p>
                              last updated:
                            </p>
                            <h6
                              class="date"
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="mainApp"
                    >
                      <h3
                        class="mission"
                      >
                        Validating the effects of social media on brand valuation
                      </h3>
                      <h5>
                        - in 3 simple steps -
                      </h5>
                      <form>
                        <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>
                        <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>
                      </form>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/axez/Desktop/bourse/src/App.js",
              "lineNumber": 49,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 61,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                "lineNumber": 51,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 63,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                  "lineNumber": 14,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 64,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                    "lineNumber": 15,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 65,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                      "lineNumber": 16,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 67,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": "stockz ",
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": "stockz ",
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 68,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                          "lineNumber": 16,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "span",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Â®",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Â®",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <span>
                          Â®
                        </span>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "span",
                        "updateQueue": null,
                      },
                      "stateNode": stockz ,
                      "tag": 6,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "h1",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        "stockz ",
                        <span>
                          Â®
                        </span>,
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        "stockz ",
                        <span>
                          Â®
                        </span>,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 66,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                        "lineNumber": 18,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 69,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                          "lineNumber": 19,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 70,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                            "lineNumber": 20,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "h6",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": null,
                            "className": "name",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": null,
                            "className": "name",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 71,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                              "lineNumber": 21,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "h6",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": null,
                              "className": "valeur",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": null,
                              "className": "valeur",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 72,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                                "lineNumber": 22,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "p",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "last updated:",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "last updated:",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 73,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/axez/Desktop/bourse/src/components/Header/Header.js",
                                  "lineNumber": 23,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "h6",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 3,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": null,
                                  "className": "date",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": null,
                                  "className": "date",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <h6
                                  class="date"
                                />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "h6",
                                "updateQueue": null,
                              },
                              "stateNode": <p>
                                last updated:
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "stateNode": <h6
                              class="valeur"
                            />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "h6",
                            "updateQueue": null,
                          },
                          "stateNode": <h6
                            class="name"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "h6",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h6
                              className="name"
                            />,
                            <h6
                              className="valeur"
                            />,
                            <p>
                              last updated:
                            </p>,
                            <h6
                              className="date"
                            />,
                          ],
                          "className": "headerInfo",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <h6
                              className="name"
                            />,
                            <h6
                              className="valeur"
                            />,
                            <p>
                              last updated:
                            </p>,
                            <h6
                              className="date"
                            />,
                          ],
                          "className": "headerInfo",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="headerInfo"
                        >
                          <h6
                            class="name"
                          />
                          <h6
                            class="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            class="date"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <div
                          className="headerInfo"
                        >
                          <h6
                            className="name"
                          />
                          <h6
                            className="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            className="date"
                          />
                        </div>,
                        "className": "current",
                        "style": Object {
                          "transform": "translateX(150px)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <div
                          className="headerInfo"
                        >
                          <h6
                            className="name"
                          />
                          <h6
                            className="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            className="date"
                          />
                        </div>,
                        "className": "current",
                        "style": Object {
                          "transform": "translateX(150px)",
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="current"
                        style="transform: translateX(150px);"
                      >
                        <div
                          class="headerInfo"
                        >
                          <h6
                            class="name"
                          />
                          <h6
                            class="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            class="date"
                          />
                        </div>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      stockz 
                      <span>
                        Â®
                      </span>
                    </h1>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        stockz 
                        <span>
                          Â®
                        </span>
                      </h1>,
                      <div
                        className="current"
                        style={
                          Object {
                            "transform": "translateX(150px)",
                          }
                        }
                      >
                        <div
                          className="headerInfo"
                        >
                          <h6
                            className="name"
                          />
                          <h6
                            className="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            className="date"
                          />
                        </div>
                      </div>,
                    ],
                    "className": "header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        stockz 
                        <span>
                          Â®
                        </span>
                      </h1>,
                      <div
                        className="current"
                        style={
                          Object {
                            "transform": "translateX(150px)",
                          }
                        }
                      >
                        <div
                          className="headerInfo"
                        >
                          <h6
                            className="name"
                          />
                          <h6
                            className="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            className="date"
                          />
                        </div>
                      </div>,
                    ],
                    "className": "header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="header"
                  >
                    <h1>
                      stockz 
                      <span>
                        Â®
                      </span>
                    </h1>
                    <div
                      class="current"
                      style="transform: translateX(150px);"
                    >
                      <div
                        class="headerInfo"
                      >
                        <h6
                          class="name"
                        />
                        <h6
                          class="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          class="date"
                        />
                      </div>
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="header"
                  >
                    <h1>
                      stockz 
                      <span>
                        Â®
                      </span>
                    </h1>
                    <div
                      className="current"
                      style={
                        Object {
                          "transform": "translateX(150px)",
                        }
                      }
                    >
                      <div
                        className="headerInfo"
                      >
                        <h6
                          className="name"
                        />
                        <h6
                          className="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          className="date"
                        />
                      </div>
                    </div>
                  </div>,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <div
                    className="header"
                  >
                    <h1>
                      stockz 
                      <span>
                        Â®
                      </span>
                    </h1>
                    <div
                      className="current"
                      style={
                        Object {
                          "transform": "translateX(150px)",
                        }
                      }
                    >
                      <div
                        className="headerInfo"
                      >
                        <h6
                          className="name"
                        />
                        <h6
                          className="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          className="date"
                        />
                      </div>
                    </div>
                  </div>,
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div>
                  <div
                    class="header"
                  >
                    <h1>
                      stockz 
                      <span>
                        Â®
                      </span>
                    </h1>
                    <div
                      class="current"
                      style="transform: translateX(150px);"
                    >
                      <div
                        class="headerInfo"
                      >
                        <h6
                          class="name"
                        />
                        <h6
                          class="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          class="date"
                        />
                      </div>
                    </div>
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "stockName": null,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "stockName": null,
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 62,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                  "lineNumber": 55,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 74,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                    "lineNumber": 56,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "h3",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Validating the effects of social media on brand valuation",
                    "className": "mission",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Validating the effects of social media on brand valuation",
                    "className": "mission",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 75,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                      "lineNumber": 57,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "h5",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "- in 3 simple steps -",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "- in 3 simple steps -",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 76,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                        "lineNumber": 59,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 77,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                          "lineNumber": 60,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 79,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                            "lineNumber": 61,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 81,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": "01/ ",
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": "01/ ",
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 82,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                "lineNumber": 61,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "span",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": " enter the symbol",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": " enter the symbol",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <span>
                                 enter the symbol
                              </span>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "span",
                              "updateQueue": null,
                            },
                            "stateNode": 01/ ,
                            "tag": 6,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "h2",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              "01/ ",
                              <span>
                                 enter the symbol
                              </span>,
                            ],
                            "className": "num",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              "01/ ",
                              <span>
                                 enter the symbol
                              </span>,
                            ],
                            "className": "num",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 80,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                              "lineNumber": 62,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 83,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                "lineNumber": 63,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 86,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                  "lineNumber": 64,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "input",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "autoComplete": "off",
                                  "className": "searchInput",
                                  "id": "stockInput",
                                  "name": "stockInput",
                                  "onChange": [Function],
                                  "spellCheck": "false",
                                  "tabIndex": "1",
                                  "type": "text",
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "autoComplete": "off",
                                  "className": "searchInput",
                                  "id": "stockInput",
                                  "name": "stockInput",
                                  "onChange": [Function],
                                  "spellCheck": "false",
                                  "tabIndex": "1",
                                  "type": "text",
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 87,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                    "lineNumber": 66,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 0,
                                  "elementType": "span",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "search...",
                                    "className": "label",
                                    "style": null,
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "search...",
                                    "className": "label",
                                    "style": null,
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <span
                                    class="label"
                                  >
                                    search...
                                  </span>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "span",
                                  "updateQueue": null,
                                },
                                "stateNode": <input
                                  autocomplete="off"
                                  class="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  spellcheck="false"
                                  tabindex="1"
                                  type="text"
                                  value=""
                                />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "label",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <input
                                    autoComplete="off"
                                    className="searchInput"
                                    id="stockInput"
                                    name="stockInput"
                                    onChange={[Function]}
                                    spellCheck="false"
                                    tabIndex="1"
                                    type="text"
                                    value=""
                                  />,
                                  <span
                                    className="label"
                                    style={null}
                                  >
                                    search...
                                  </span>,
                                ],
                                "className": "inp",
                                "htmlFor": "stockInput",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <input
                                    autoComplete="off"
                                    className="searchInput"
                                    id="stockInput"
                                    name="stockInput"
                                    onChange={[Function]}
                                    spellCheck="false"
                                    tabIndex="1"
                                    type="text"
                                    value=""
                                  />,
                                  <span
                                    className="label"
                                    style={null}
                                  >
                                    search...
                                  </span>,
                                ],
                                "className": "inp",
                                "htmlFor": "stockInput",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 84,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                  "lineNumber": 68,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 88,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                    "lineNumber": 69,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 90,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "contextDependencies": null,
                                    "effectTag": 0,
                                    "elementType": null,
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": "02/ ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "02/ ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 91,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                        "lineNumber": 69,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "contextDependencies": null,
                                      "effectTag": 0,
                                      "elementType": "span",
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 1,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": " days reviewed",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": " days reviewed",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <span>
                                         days reviewed
                                      </span>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "span",
                                      "updateQueue": null,
                                    },
                                    "stateNode": 02/ ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 0,
                                  "elementType": "h2",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      "02/ ",
                                      <span>
                                         days reviewed
                                      </span>,
                                    ],
                                    "className": "num",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      "02/ ",
                                      <span>
                                         days reviewed
                                      </span>,
                                    ],
                                    "className": "num",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 89,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                      "lineNumber": 70,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 92,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                        "lineNumber": 71,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "contextDependencies": null,
                                      "effectTag": 0,
                                      "elementType": "option",
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 0,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": "10 days",
                                        "value": "10",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": "10 days",
                                        "value": "10",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 93,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                          "lineNumber": 72,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childExpirationTime": 0,
                                        "contextDependencies": null,
                                        "effectTag": 0,
                                        "elementType": "option",
                                        "expirationTime": 0,
                                        "firstEffect": null,
                                        "index": 1,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": "20 days",
                                          "value": "20",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": "20 days",
                                          "value": "20",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 94,
                                          "_debugIsCurrentlyTiming": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                            "lineNumber": 73,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childExpirationTime": 0,
                                          "contextDependencies": null,
                                          "effectTag": 0,
                                          "elementType": "option",
                                          "expirationTime": 0,
                                          "firstEffect": null,
                                          "index": 2,
                                          "key": null,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": "30 days",
                                            "value": "30",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": "30 days",
                                            "value": "30",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 95,
                                            "_debugIsCurrentlyTiming": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                              "lineNumber": 74,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childExpirationTime": 0,
                                            "contextDependencies": null,
                                            "effectTag": 0,
                                            "elementType": "option",
                                            "expirationTime": 0,
                                            "firstEffect": null,
                                            "index": 3,
                                            "key": null,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": "60 days",
                                              "value": "60",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": "60 days",
                                              "value": "60",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 96,
                                              "_debugIsCurrentlyTiming": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": Object {
                                                "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                                "lineNumber": 75,
                                              },
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childExpirationTime": 0,
                                              "contextDependencies": null,
                                              "effectTag": 0,
                                              "elementType": "option",
                                              "expirationTime": 0,
                                              "firstEffect": null,
                                              "index": 4,
                                              "key": null,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": "90 days",
                                                "value": "90",
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": "90 days",
                                                "value": "90",
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": <option
                                                value="90"
                                              >
                                                90 days
                                              </option>,
                                              "tag": 5,
                                              "treeBaseDuration": 0,
                                              "type": "option",
                                              "updateQueue": null,
                                            },
                                            "stateNode": <option
                                              value="60"
                                            >
                                              60 days
                                            </option>,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "option",
                                            "updateQueue": null,
                                          },
                                          "stateNode": <option
                                            value="30"
                                          >
                                            30 days
                                          </option>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "option",
                                          "updateQueue": null,
                                        },
                                        "stateNode": <option
                                          value="20"
                                        >
                                          20 days
                                        </option>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "option",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <option
                                        value="10"
                                      >
                                        10 days
                                      </option>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "option",
                                      "updateQueue": null,
                                    },
                                    "childExpirationTime": 0,
                                    "contextDependencies": null,
                                    "effectTag": 0,
                                    "elementType": "select",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 1,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        <option
                                          value="10"
                                        >
                                          10 days
                                        </option>,
                                        <option
                                          value="20"
                                        >
                                          20 days
                                        </option>,
                                        <option
                                          value="30"
                                        >
                                          30 days
                                        </option>,
                                        <option
                                          value="60"
                                        >
                                          60 days
                                        </option>,
                                        <option
                                          value="90"
                                        >
                                          90 days
                                        </option>,
                                      ],
                                      "name": "value",
                                      "onChange": [Function],
                                      "tabIndex": "2",
                                      "value": "10",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        <option
                                          value="10"
                                        >
                                          10 days
                                        </option>,
                                        <option
                                          value="20"
                                        >
                                          20 days
                                        </option>,
                                        <option
                                          value="30"
                                        >
                                          30 days
                                        </option>,
                                        <option
                                          value="60"
                                        >
                                          60 days
                                        </option>,
                                        <option
                                          value="90"
                                        >
                                          90 days
                                        </option>,
                                      ],
                                      "name": "value",
                                      "onChange": [Function],
                                      "tabIndex": "2",
                                      "value": "10",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <select
                                      name="value"
                                      tabindex="2"
                                    >
                                      <option
                                        value="10"
                                      >
                                        10 days
                                      </option>
                                      <option
                                        value="20"
                                      >
                                        20 days
                                      </option>
                                      <option
                                        value="30"
                                      >
                                        30 days
                                      </option>
                                      <option
                                        value="60"
                                      >
                                        60 days
                                      </option>
                                      <option
                                        value="90"
                                      >
                                        90 days
                                      </option>
                                    </select>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "select",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <h2
                                    class="num"
                                  >
                                    02/ 
                                    <span>
                                       days reviewed
                                    </span>
                                  </h2>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "h2",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "div",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <h2
                                      className="num"
                                    >
                                      02/ 
                                      <span>
                                         days reviewed
                                      </span>
                                    </h2>,
                                    <select
                                      name="value"
                                      onChange={[Function]}
                                      tabIndex="2"
                                      value="10"
                                    >
                                      <option
                                        value="10"
                                      >
                                        10 days
                                      </option>
                                      <option
                                        value="20"
                                      >
                                        20 days
                                      </option>
                                      <option
                                        value="30"
                                      >
                                        30 days
                                      </option>
                                      <option
                                        value="60"
                                      >
                                        60 days
                                      </option>
                                      <option
                                        value="90"
                                      >
                                        90 days
                                      </option>
                                    </select>,
                                  ],
                                  "className": "wrapSelect",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <h2
                                      className="num"
                                    >
                                      02/ 
                                      <span>
                                         days reviewed
                                      </span>
                                    </h2>,
                                    <select
                                      name="value"
                                      onChange={[Function]}
                                      tabIndex="2"
                                      value="10"
                                    >
                                      <option
                                        value="10"
                                      >
                                        10 days
                                      </option>
                                      <option
                                        value="20"
                                      >
                                        20 days
                                      </option>
                                      <option
                                        value="30"
                                      >
                                        30 days
                                      </option>
                                      <option
                                        value="60"
                                      >
                                        60 days
                                      </option>
                                      <option
                                        value="90"
                                      >
                                        90 days
                                      </option>
                                    </select>,
                                  ],
                                  "className": "wrapSelect",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 85,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                    "lineNumber": 78,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 97,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                      "lineNumber": 79,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 99,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "contextDependencies": null,
                                      "effectTag": 0,
                                      "elementType": null,
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 0,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": "03/ ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "03/ ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 100,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                          "lineNumber": 79,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childExpirationTime": 0,
                                        "contextDependencies": null,
                                        "effectTag": 0,
                                        "elementType": "span",
                                        "expirationTime": 0,
                                        "firstEffect": null,
                                        "index": 1,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": " by social Media",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": " by social Media",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": <span>
                                           by social Media
                                        </span>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "span",
                                        "updateQueue": null,
                                      },
                                      "stateNode": 03/ ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childExpirationTime": 0,
                                    "contextDependencies": null,
                                    "effectTag": 0,
                                    "elementType": "h2",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        "03/ ",
                                        <span>
                                           by social Media
                                        </span>,
                                      ],
                                      "className": "num",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        "03/ ",
                                        <span>
                                           by social Media
                                        </span>,
                                      ],
                                      "className": "num",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 98,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                        "lineNumber": 80,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 101,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                          "lineNumber": 81,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childExpirationTime": 0,
                                        "contextDependencies": null,
                                        "effectTag": 0,
                                        "elementType": "option",
                                        "expirationTime": 0,
                                        "firstEffect": null,
                                        "index": 0,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": "twitter",
                                          "value": "twitter",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": "twitter",
                                          "value": "twitter",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 102,
                                          "_debugIsCurrentlyTiming": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                                            "lineNumber": 82,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childExpirationTime": 0,
                                          "contextDependencies": null,
                                          "effectTag": 0,
                                          "elementType": "option",
                                          "expirationTime": 0,
                                          "firstEffect": null,
                                          "index": 1,
                                          "key": null,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": "facebook",
                                            "value": "facebook",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": "facebook",
                                            "value": "facebook",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": <option
                                            value="facebook"
                                          >
                                            facebook
                                          </option>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "option",
                                          "updateQueue": null,
                                        },
                                        "stateNode": <option
                                          value="twitter"
                                        >
                                          twitter
                                        </option>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "option",
                                        "updateQueue": null,
                                      },
                                      "childExpirationTime": 0,
                                      "contextDependencies": null,
                                      "effectTag": 0,
                                      "elementType": "select",
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 1,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          <option
                                            value="twitter"
                                          >
                                            twitter
                                          </option>,
                                          <option
                                            value="facebook"
                                          >
                                            facebook
                                          </option>,
                                        ],
                                        "name": "socialValue",
                                        "onChange": [Function],
                                        "tabIndex": "3",
                                        "value": "twitter",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          <option
                                            value="twitter"
                                          >
                                            twitter
                                          </option>,
                                          <option
                                            value="facebook"
                                          >
                                            facebook
                                          </option>,
                                        ],
                                        "name": "socialValue",
                                        "onChange": [Function],
                                        "tabIndex": "3",
                                        "value": "twitter",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <select
                                        name="socialValue"
                                        tabindex="3"
                                      >
                                        <option
                                          value="twitter"
                                        >
                                          twitter
                                        </option>
                                        <option
                                          value="facebook"
                                        >
                                          facebook
                                        </option>
                                      </select>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "select",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <h2
                                      class="num"
                                    >
                                      03/ 
                                      <span>
                                         by social Media
                                      </span>
                                    </h2>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "h2",
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 0,
                                  "elementType": "div",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 2,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <h2
                                        className="num"
                                      >
                                        03/ 
                                        <span>
                                           by social Media
                                        </span>
                                      </h2>,
                                      <select
                                        name="socialValue"
                                        onChange={[Function]}
                                        tabIndex="3"
                                        value="twitter"
                                      >
                                        <option
                                          value="twitter"
                                        >
                                          twitter
                                        </option>
                                        <option
                                          value="facebook"
                                        >
                                          facebook
                                        </option>
                                      </select>,
                                    ],
                                    "className": "wrapSelectSocial",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <h2
                                        className="num"
                                      >
                                        03/ 
                                        <span>
                                           by social Media
                                        </span>
                                      </h2>,
                                      <select
                                        name="socialValue"
                                        onChange={[Function]}
                                        tabIndex="3"
                                        value="twitter"
                                      >
                                        <option
                                          value="twitter"
                                        >
                                          twitter
                                        </option>
                                        <option
                                          value="facebook"
                                        >
                                          facebook
                                        </option>
                                      </select>,
                                    ],
                                    "className": "wrapSelectSocial",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <div
                                    class="wrapSelectSocial"
                                  >
                                    <h2
                                      class="num"
                                    >
                                      03/ 
                                      <span>
                                         by social Media
                                      </span>
                                    </h2>
                                    <select
                                      name="socialValue"
                                      tabindex="3"
                                    >
                                      <option
                                        value="twitter"
                                      >
                                        twitter
                                      </option>
                                      <option
                                        value="facebook"
                                      >
                                        facebook
                                      </option>
                                    </select>
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="wrapSelect"
                                >
                                  <h2
                                    class="num"
                                  >
                                    02/ 
                                    <span>
                                       days reviewed
                                    </span>
                                  </h2>
                                  <select
                                    name="value"
                                    tabindex="2"
                                  >
                                    <option
                                      value="10"
                                    >
                                      10 days
                                    </option>
                                    <option
                                      value="20"
                                    >
                                      20 days
                                    </option>
                                    <option
                                      value="30"
                                    >
                                      30 days
                                    </option>
                                    <option
                                      value="60"
                                    >
                                      60 days
                                    </option>
                                    <option
                                      value="90"
                                    >
                                      90 days
                                    </option>
                                  </select>
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <label
                                class="inp"
                                for="stockInput"
                              >
                                <input
                                  autocomplete="off"
                                  class="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  spellcheck="false"
                                  tabindex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  class="label"
                                >
                                  search...
                                </span>
                              </label>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "label",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <label
                                  className="inp"
                                  htmlFor="stockInput"
                                >
                                  <input
                                    autoComplete="off"
                                    className="searchInput"
                                    id="stockInput"
                                    name="stockInput"
                                    onChange={[Function]}
                                    spellCheck="false"
                                    tabIndex="1"
                                    type="text"
                                    value=""
                                  />
                                  <span
                                    className="label"
                                    style={null}
                                  >
                                    search...
                                  </span>
                                </label>,
                                <div
                                  className="wrapSelect"
                                >
                                  <h2
                                    className="num"
                                  >
                                    02/ 
                                    <span>
                                       days reviewed
                                    </span>
                                  </h2>
                                  <select
                                    name="value"
                                    onChange={[Function]}
                                    tabIndex="2"
                                    value="10"
                                  >
                                    <option
                                      value="10"
                                    >
                                      10 days
                                    </option>
                                    <option
                                      value="20"
                                    >
                                      20 days
                                    </option>
                                    <option
                                      value="30"
                                    >
                                      30 days
                                    </option>
                                    <option
                                      value="60"
                                    >
                                      60 days
                                    </option>
                                    <option
                                      value="90"
                                    >
                                      90 days
                                    </option>
                                  </select>
                                </div>,
                                <div
                                  className="wrapSelectSocial"
                                >
                                  <h2
                                    className="num"
                                  >
                                    03/ 
                                    <span>
                                       by social Media
                                    </span>
                                  </h2>
                                  <select
                                    name="socialValue"
                                    onChange={[Function]}
                                    tabIndex="3"
                                    value="twitter"
                                  >
                                    <option
                                      value="twitter"
                                    >
                                      twitter
                                    </option>
                                    <option
                                      value="facebook"
                                    >
                                      facebook
                                    </option>
                                  </select>
                                </div>,
                              ],
                              "className": "search",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <label
                                  className="inp"
                                  htmlFor="stockInput"
                                >
                                  <input
                                    autoComplete="off"
                                    className="searchInput"
                                    id="stockInput"
                                    name="stockInput"
                                    onChange={[Function]}
                                    spellCheck="false"
                                    tabIndex="1"
                                    type="text"
                                    value=""
                                  />
                                  <span
                                    className="label"
                                    style={null}
                                  >
                                    search...
                                  </span>
                                </label>,
                                <div
                                  className="wrapSelect"
                                >
                                  <h2
                                    className="num"
                                  >
                                    02/ 
                                    <span>
                                       days reviewed
                                    </span>
                                  </h2>
                                  <select
                                    name="value"
                                    onChange={[Function]}
                                    tabIndex="2"
                                    value="10"
                                  >
                                    <option
                                      value="10"
                                    >
                                      10 days
                                    </option>
                                    <option
                                      value="20"
                                    >
                                      20 days
                                    </option>
                                    <option
                                      value="30"
                                    >
                                      30 days
                                    </option>
                                    <option
                                      value="60"
                                    >
                                      60 days
                                    </option>
                                    <option
                                      value="90"
                                    >
                                      90 days
                                    </option>
                                  </select>
                                </div>,
                                <div
                                  className="wrapSelectSocial"
                                >
                                  <h2
                                    className="num"
                                  >
                                    03/ 
                                    <span>
                                       by social Media
                                    </span>
                                  </h2>
                                  <select
                                    name="socialValue"
                                    onChange={[Function]}
                                    tabIndex="3"
                                    value="twitter"
                                  >
                                    <option
                                      value="twitter"
                                    >
                                      twitter
                                    </option>
                                    <option
                                      value="facebook"
                                    >
                                      facebook
                                    </option>
                                  </select>
                                </div>,
                              ],
                              "className": "search",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="search"
                            >
                              <label
                                class="inp"
                                for="stockInput"
                              >
                                <input
                                  autocomplete="off"
                                  class="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  spellcheck="false"
                                  tabindex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  class="label"
                                >
                                  search...
                                </span>
                              </label>
                              <div
                                class="wrapSelect"
                              >
                                <h2
                                  class="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  tabindex="2"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>
                              <div
                                class="wrapSelectSocial"
                              >
                                <h2
                                  class="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>
                                <select
                                  name="socialValue"
                                  tabindex="3"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>
                              </div>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "h2",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h2
                              className="num"
                            >
                              01/ 
                              <span>
                                 enter the symbol
                              </span>
                            </h2>,
                            <div
                              className="search"
                            >
                              <label
                                className="inp"
                                htmlFor="stockInput"
                              >
                                <input
                                  autoComplete="off"
                                  className="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  onChange={[Function]}
                                  spellCheck="false"
                                  tabIndex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  className="label"
                                  style={null}
                                >
                                  search...
                                </span>
                              </label>
                              <div
                                className="wrapSelect"
                              >
                                <h2
                                  className="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  onChange={[Function]}
                                  tabIndex="2"
                                  value="10"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>
                              <div
                                className="wrapSelectSocial"
                              >
                                <h2
                                  className="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>
                                <select
                                  name="socialValue"
                                  onChange={[Function]}
                                  tabIndex="3"
                                  value="twitter"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>
                              </div>
                            </div>,
                          ],
                          "className": "cover",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <h2
                              className="num"
                            >
                              01/ 
                              <span>
                                 enter the symbol
                              </span>
                            </h2>,
                            <div
                              className="search"
                            >
                              <label
                                className="inp"
                                htmlFor="stockInput"
                              >
                                <input
                                  autoComplete="off"
                                  className="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  onChange={[Function]}
                                  spellCheck="false"
                                  tabIndex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  className="label"
                                  style={null}
                                >
                                  search...
                                </span>
                              </label>
                              <div
                                className="wrapSelect"
                              >
                                <h2
                                  className="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  onChange={[Function]}
                                  tabIndex="2"
                                  value="10"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>
                              <div
                                className="wrapSelectSocial"
                              >
                                <h2
                                  className="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>
                                <select
                                  name="socialValue"
                                  onChange={[Function]}
                                  tabIndex="3"
                                  value="twitter"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>
                              </div>
                            </div>,
                          ],
                          "className": "cover",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 78,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/axez/Desktop/bourse/src/App.js",
                            "lineNumber": 87,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "button",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Go !",
                            "className": "btnProjet",
                            "disabled": true,
                            "tabIndex": "4",
                            "type": "submit",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Go !",
                            "className": "btnProjet",
                            "disabled": true,
                            "tabIndex": "4",
                            "type": "submit",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <button
                            class="btnProjet"
                            disabled=""
                            tabindex="4"
                            type="submit"
                          >
                            Go !
                          </button>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "form",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="cover"
                          >
                            <h2
                              className="num"
                            >
                              01/ 
                              <span>
                                 enter the symbol
                              </span>
                            </h2>
                            <div
                              className="search"
                            >
                              <label
                                className="inp"
                                htmlFor="stockInput"
                              >
                                <input
                                  autoComplete="off"
                                  className="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  onChange={[Function]}
                                  spellCheck="false"
                                  tabIndex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  className="label"
                                  style={null}
                                >
                                  search...
                                </span>
                              </label>
                              <div
                                className="wrapSelect"
                              >
                                <h2
                                  className="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  onChange={[Function]}
                                  tabIndex="2"
                                  value="10"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>
                              <div
                                className="wrapSelectSocial"
                              >
                                <h2
                                  className="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>
                                <select
                                  name="socialValue"
                                  onChange={[Function]}
                                  tabIndex="3"
                                  value="twitter"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>,
                          <button
                            className="btnProjet"
                            disabled={true}
                            tabIndex="4"
                            type="submit"
                          >
                            Go !
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="cover"
                          >
                            <h2
                              className="num"
                            >
                              01/ 
                              <span>
                                 enter the symbol
                              </span>
                            </h2>
                            <div
                              className="search"
                            >
                              <label
                                className="inp"
                                htmlFor="stockInput"
                              >
                                <input
                                  autoComplete="off"
                                  className="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  onChange={[Function]}
                                  spellCheck="false"
                                  tabIndex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  className="label"
                                  style={null}
                                >
                                  search...
                                </span>
                              </label>
                              <div
                                className="wrapSelect"
                              >
                                <h2
                                  className="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  onChange={[Function]}
                                  tabIndex="2"
                                  value="10"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>
                              <div
                                className="wrapSelectSocial"
                              >
                                <h2
                                  className="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>
                                <select
                                  name="socialValue"
                                  onChange={[Function]}
                                  tabIndex="3"
                                  value="twitter"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>,
                          <button
                            className="btnProjet"
                            disabled={true}
                            tabIndex="4"
                            type="submit"
                          >
                            Go !
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>
                        <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>
                      </form>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <h5>
                      - in 3 simple steps -
                    </h5>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "h5",
                    "updateQueue": null,
                  },
                  "stateNode": <h3
                    class="mission"
                  >
                    Validating the effects of social media on brand valuation
                  </h3>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "h3",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h3
                      className="mission"
                    >
                      Validating the effects of social media on brand valuation
                    </h3>,
                    <h5>
                      - in 3 simple steps -
                    </h5>,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="cover"
                      >
                        <h2
                          className="num"
                        >
                          01/ 
                          <span>
                             enter the symbol
                          </span>
                        </h2>
                        <div
                          className="search"
                        >
                          <label
                            className="inp"
                            htmlFor="stockInput"
                          >
                            <input
                              autoComplete="off"
                              className="searchInput"
                              id="stockInput"
                              name="stockInput"
                              onChange={[Function]}
                              spellCheck="false"
                              tabIndex="1"
                              type="text"
                              value=""
                            />
                            <span
                              className="label"
                              style={null}
                            >
                              search...
                            </span>
                          </label>
                          <div
                            className="wrapSelect"
                          >
                            <h2
                              className="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              onChange={[Function]}
                              tabIndex="2"
                              value="10"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>
                          <div
                            className="wrapSelectSocial"
                          >
                            <h2
                              className="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              onChange={[Function]}
                              tabIndex="3"
                              value="twitter"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>
                        </div>
                      </div>
                      <button
                        className="btnProjet"
                        disabled={true}
                        tabIndex="4"
                        type="submit"
                      >
                        Go !
                      </button>
                    </form>,
                  ],
                  "className": "mainApp",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h3
                      className="mission"
                    >
                      Validating the effects of social media on brand valuation
                    </h3>,
                    <h5>
                      - in 3 simple steps -
                    </h5>,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="cover"
                      >
                        <h2
                          className="num"
                        >
                          01/ 
                          <span>
                             enter the symbol
                          </span>
                        </h2>
                        <div
                          className="search"
                        >
                          <label
                            className="inp"
                            htmlFor="stockInput"
                          >
                            <input
                              autoComplete="off"
                              className="searchInput"
                              id="stockInput"
                              name="stockInput"
                              onChange={[Function]}
                              spellCheck="false"
                              tabIndex="1"
                              type="text"
                              value=""
                            />
                            <span
                              className="label"
                              style={null}
                            >
                              search...
                            </span>
                          </label>
                          <div
                            className="wrapSelect"
                          >
                            <h2
                              className="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              onChange={[Function]}
                              tabIndex="2"
                              value="10"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>
                          <div
                            className="wrapSelectSocial"
                          >
                            <h2
                              className="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              onChange={[Function]}
                              tabIndex="3"
                              value="twitter"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>
                        </div>
                      </div>
                      <button
                        className="btnProjet"
                        disabled={true}
                        tabIndex="4"
                        type="submit"
                      >
                        Go !
                      </button>
                    </form>,
                  ],
                  "className": "mainApp",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="mainApp"
                >
                  <h3
                    class="mission"
                  >
                    Validating the effects of social media on brand valuation
                  </h3>
                  <h5>
                    - in 3 simple steps -
                  </h5>
                  <form>
                    <div
                      class="cover"
                    >
                      <h2
                        class="num"
                      >
                        01/ 
                        <span>
                           enter the symbol
                        </span>
                      </h2>
                      <div
                        class="search"
                      >
                        <label
                          class="inp"
                          for="stockInput"
                        >
                          <input
                            autocomplete="off"
                            class="searchInput"
                            id="stockInput"
                            name="stockInput"
                            spellcheck="false"
                            tabindex="1"
                            type="text"
                            value=""
                          />
                          <span
                            class="label"
                          >
                            search...
                          </span>
                        </label>
                        <div
                          class="wrapSelect"
                        >
                          <h2
                            class="num"
                          >
                            02/ 
                            <span>
                               days reviewed
                            </span>
                          </h2>
                          <select
                            name="value"
                            tabindex="2"
                          >
                            <option
                              value="10"
                            >
                              10 days
                            </option>
                            <option
                              value="20"
                            >
                              20 days
                            </option>
                            <option
                              value="30"
                            >
                              30 days
                            </option>
                            <option
                              value="60"
                            >
                              60 days
                            </option>
                            <option
                              value="90"
                            >
                              90 days
                            </option>
                          </select>
                        </div>
                        <div
                          class="wrapSelectSocial"
                        >
                          <h2
                            class="num"
                          >
                            03/ 
                            <span>
                               by social Media
                            </span>
                          </h2>
                          <select
                            name="socialValue"
                            tabindex="3"
                          >
                            <option
                              value="twitter"
                            >
                              twitter
                            </option>
                            <option
                              value="facebook"
                            >
                              facebook
                            </option>
                          </select>
                        </div>
                      </div>
                    </div>
                    <button
                      class="btnProjet"
                      disabled=""
                      tabindex="4"
                      type="submit"
                    >
                      Go !
                    </button>
                  </form>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <Header
                  stockName={null}
                />,
                <div
                  className="mainApp"
                >
                  <h3
                    className="mission"
                  >
                    Validating the effects of social media on brand valuation
                  </h3>
                  <h5>
                    - in 3 simple steps -
                  </h5>
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="cover"
                    >
                      <h2
                        className="num"
                      >
                        01/ 
                        <span>
                           enter the symbol
                        </span>
                      </h2>
                      <div
                        className="search"
                      >
                        <label
                          className="inp"
                          htmlFor="stockInput"
                        >
                          <input
                            autoComplete="off"
                            className="searchInput"
                            id="stockInput"
                            name="stockInput"
                            onChange={[Function]}
                            spellCheck="false"
                            tabIndex="1"
                            type="text"
                            value=""
                          />
                          <span
                            className="label"
                            style={null}
                          >
                            search...
                          </span>
                        </label>
                        <div
                          className="wrapSelect"
                        >
                          <h2
                            className="num"
                          >
                            02/ 
                            <span>
                               days reviewed
                            </span>
                          </h2>
                          <select
                            name="value"
                            onChange={[Function]}
                            tabIndex="2"
                            value="10"
                          >
                            <option
                              value="10"
                            >
                              10 days
                            </option>
                            <option
                              value="20"
                            >
                              20 days
                            </option>
                            <option
                              value="30"
                            >
                              30 days
                            </option>
                            <option
                              value="60"
                            >
                              60 days
                            </option>
                            <option
                              value="90"
                            >
                              90 days
                            </option>
                          </select>
                        </div>
                        <div
                          className="wrapSelectSocial"
                        >
                          <h2
                            className="num"
                          >
                            03/ 
                            <span>
                               by social Media
                            </span>
                          </h2>
                          <select
                            name="socialValue"
                            onChange={[Function]}
                            tabIndex="3"
                            value="twitter"
                          >
                            <option
                              value="twitter"
                            >
                              twitter
                            </option>
                            <option
                              value="facebook"
                            >
                              facebook
                            </option>
                          </select>
                        </div>
                      </div>
                    </div>
                    <button
                      className="btnProjet"
                      disabled={true}
                      tabIndex="4"
                      type="submit"
                    >
                      Go !
                    </button>
                  </form>
                </div>,
                false,
              ],
              "className": "App",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <Header
                  stockName={null}
                />,
                <div
                  className="mainApp"
                >
                  <h3
                    className="mission"
                  >
                    Validating the effects of social media on brand valuation
                  </h3>
                  <h5>
                    - in 3 simple steps -
                  </h5>
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="cover"
                    >
                      <h2
                        className="num"
                      >
                        01/ 
                        <span>
                           enter the symbol
                        </span>
                      </h2>
                      <div
                        className="search"
                      >
                        <label
                          className="inp"
                          htmlFor="stockInput"
                        >
                          <input
                            autoComplete="off"
                            className="searchInput"
                            id="stockInput"
                            name="stockInput"
                            onChange={[Function]}
                            spellCheck="false"
                            tabIndex="1"
                            type="text"
                            value=""
                          />
                          <span
                            className="label"
                            style={null}
                          >
                            search...
                          </span>
                        </label>
                        <div
                          className="wrapSelect"
                        >
                          <h2
                            className="num"
                          >
                            02/ 
                            <span>
                               days reviewed
                            </span>
                          </h2>
                          <select
                            name="value"
                            onChange={[Function]}
                            tabIndex="2"
                            value="10"
                          >
                            <option
                              value="10"
                            >
                              10 days
                            </option>
                            <option
                              value="20"
                            >
                              20 days
                            </option>
                            <option
                              value="30"
                            >
                              30 days
                            </option>
                            <option
                              value="60"
                            >
                              60 days
                            </option>
                            <option
                              value="90"
                            >
                              90 days
                            </option>
                          </select>
                        </div>
                        <div
                          className="wrapSelectSocial"
                        >
                          <h2
                            className="num"
                          >
                            03/ 
                            <span>
                               by social Media
                            </span>
                          </h2>
                          <select
                            name="socialValue"
                            onChange={[Function]}
                            tabIndex="3"
                            value="twitter"
                          >
                            <option
                              value="twitter"
                            >
                              twitter
                            </option>
                            <option
                              value="facebook"
                            >
                              facebook
                            </option>
                          </select>
                        </div>
                      </div>
                    </div>
                    <button
                      className="btnProjet"
                      disabled={true}
                      tabIndex="4"
                      type="submit"
                    >
                      Go !
                    </button>
                  </form>
                </div>,
                false,
              ],
              "className": "App",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="App"
            >
              <div>
                <div
                  class="header"
                >
                  <h1>
                    stockz 
                    <span>
                      Â®
                    </span>
                  </h1>
                  <div
                    class="current"
                    style="transform: translateX(150px);"
                  >
                    <div
                      class="headerInfo"
                    >
                      <h6
                        class="name"
                      />
                      <h6
                        class="valeur"
                      />
                      <p>
                        last updated:
                      </p>
                      <h6
                        class="date"
                      />
                    </div>
                  </div>
                </div>
              </div>
              <div
                class="mainApp"
              >
                <h3
                  class="mission"
                >
                  Validating the effects of social media on brand valuation
                </h3>
                <h5>
                  - in 3 simple steps -
                </h5>
                <form>
                  <div
                    class="cover"
                  >
                    <h2
                      class="num"
                    >
                      01/ 
                      <span>
                         enter the symbol
                      </span>
                    </h2>
                    <div
                      class="search"
                    >
                      <label
                        class="inp"
                        for="stockInput"
                      >
                        <input
                          autocomplete="off"
                          class="searchInput"
                          id="stockInput"
                          name="stockInput"
                          spellcheck="false"
                          tabindex="1"
                          type="text"
                          value=""
                        />
                        <span
                          class="label"
                        >
                          search...
                        </span>
                      </label>
                      <div
                        class="wrapSelect"
                      >
                        <h2
                          class="num"
                        >
                          02/ 
                          <span>
                             days reviewed
                          </span>
                        </h2>
                        <select
                          name="value"
                          tabindex="2"
                        >
                          <option
                            value="10"
                          >
                            10 days
                          </option>
                          <option
                            value="20"
                          >
                            20 days
                          </option>
                          <option
                            value="30"
                          >
                            30 days
                          </option>
                          <option
                            value="60"
                          >
                            60 days
                          </option>
                          <option
                            value="90"
                          >
                            90 days
                          </option>
                        </select>
                      </div>
                      <div
                        class="wrapSelectSocial"
                      >
                        <h2
                          class="num"
                        >
                          03/ 
                          <span>
                             by social Media
                          </span>
                        </h2>
                        <select
                          name="socialValue"
                          tabindex="3"
                        >
                          <option
                            value="twitter"
                          >
                            twitter
                          </option>
                          <option
                            value="facebook"
                          >
                            facebook
                          </option>
                        </select>
                      </div>
                    </div>
                  </div>
                  <button
                    class="btnProjet"
                    disabled=""
                    tabindex="4"
                    type="submit"
                  >
                    Go !
                  </button>
                </form>
              </div>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 5,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {},
          "memoizedState": Object {
            "isLoading": false,
            "socialValue": "twitter",
            "stockData": Array [],
            "stockInput": "",
            "stockName": null,
            "value": "10",
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 58,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="App"
                    >
                      <div>
                        <div
                          class="header"
                        >
                          <h1>
                            stockz 
                            <span>
                              Â®
                            </span>
                          </h1>
                          <div
                            class="current"
                            style="transform: translateX(150px);"
                          >
                            <div
                              class="headerInfo"
                            >
                              <h6
                                class="name"
                              />
                              <h6
                                class="valeur"
                              />
                              <p>
                                last updated:
                              </p>
                              <h6
                                class="date"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        class="mainApp"
                      >
                        <h3
                          class="mission"
                        >
                          Validating the effects of social media on brand valuation
                        </h3>
                        <h5>
                          - in 3 simple steps -
                        </h5>
                        <form>
                          <div
                            class="cover"
                          >
                            <h2
                              class="num"
                            >
                              01/ 
                              <span>
                                 enter the symbol
                              </span>
                            </h2>
                            <div
                              class="search"
                            >
                              <label
                                class="inp"
                                for="stockInput"
                              >
                                <input
                                  autocomplete="off"
                                  class="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  spellcheck="false"
                                  tabindex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  class="label"
                                >
                                  search...
                                </span>
                              </label>
                              <div
                                class="wrapSelect"
                              >
                                <h2
                                  class="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  tabindex="2"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>
                              <div
                                class="wrapSelectSocial"
                              >
                                <h2
                                  class="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>
                                <select
                                  name="socialValue"
                                  tabindex="3"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                          <button
                            class="btnProjet"
                            disabled=""
                            tabindex="4"
                            type="submit"
                          >
                            Go !
                          </button>
                        </form>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 14,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <div>
                      <div
                        class="header"
                      >
                        <h1>
                          stockz 
                          <span>
                            Â®
                          </span>
                        </h1>
                        <div
                          class="current"
                          style="transform: translateX(150px);"
                        >
                          <div
                            class="headerInfo"
                          >
                            <h6
                              class="name"
                            />
                            <h6
                              class="valeur"
                            />
                            <p>
                              last updated:
                            </p>
                            <h6
                              class="date"
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="mainApp"
                    >
                      <h3
                        class="mission"
                      >
                        Validating the effects of social media on brand valuation
                      </h3>
                      <h5>
                        - in 3 simple steps -
                      </h5>
                      <form>
                        <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>
                        <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>
                      </form>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="App"
                    >
                      <div>
                        <div
                          class="header"
                        >
                          <h1>
                            stockz 
                            <span>
                              Â®
                            </span>
                          </h1>
                          <div
                            class="current"
                            style="transform: translateX(150px);"
                          >
                            <div
                              class="headerInfo"
                            >
                              <h6
                                class="name"
                              />
                              <h6
                                class="valeur"
                              />
                              <p>
                                last updated:
                              </p>
                              <h6
                                class="date"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        class="mainApp"
                      >
                        <h3
                          class="mission"
                        >
                          Validating the effects of social media on brand valuation
                        </h3>
                        <h5>
                          - in 3 simple steps -
                        </h5>
                        <form>
                          <div
                            class="cover"
                          >
                            <h2
                              class="num"
                            >
                              01/ 
                              <span>
                                 enter the symbol
                              </span>
                            </h2>
                            <div
                              class="search"
                            >
                              <label
                                class="inp"
                                for="stockInput"
                              >
                                <input
                                  autocomplete="off"
                                  class="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  spellcheck="false"
                                  tabindex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  class="label"
                                >
                                  search...
                                </span>
                              </label>
                              <div
                                class="wrapSelect"
                              >
                                <h2
                                  class="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  tabindex="2"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>
                              <div
                                class="wrapSelectSocial"
                              >
                                <h2
                                  class="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>
                                <select
                                  name="socialValue"
                                  tabindex="3"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                          <button
                            class="btnProjet"
                            disabled=""
                            tabindex="4"
                            type="submit"
                          >
                            Go !
                          </button>
                        </form>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 14,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <div>
                      <div
                        class="header"
                      >
                        <h1>
                          stockz 
                          <span>
                            Â®
                          </span>
                        </h1>
                        <div
                          class="current"
                          style="transform: translateX(150px);"
                        >
                          <div
                            class="headerInfo"
                          >
                            <h6
                              class="name"
                            />
                            <h6
                              class="valeur"
                            />
                            <p>
                              last updated:
                            </p>
                            <h6
                              class="date"
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="mainApp"
                    >
                      <h3
                        class="mission"
                      >
                        Validating the effects of social media on brand valuation
                      </h3>
                      <h5>
                        - in 3 simple steps -
                      </h5>
                      <form>
                        <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>
                        <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>
                      </form>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "pendingProps": Object {},
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 58,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="App"
                    >
                      <div>
                        <div
                          class="header"
                        >
                          <h1>
                            stockz 
                            <span>
                              Â®
                            </span>
                          </h1>
                          <div
                            class="current"
                            style="transform: translateX(150px);"
                          >
                            <div
                              class="headerInfo"
                            >
                              <h6
                                class="name"
                              />
                              <h6
                                class="valeur"
                              />
                              <p>
                                last updated:
                              </p>
                              <h6
                                class="date"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        class="mainApp"
                      >
                        <h3
                          class="mission"
                        >
                          Validating the effects of social media on brand valuation
                        </h3>
                        <h5>
                          - in 3 simple steps -
                        </h5>
                        <form>
                          <div
                            class="cover"
                          >
                            <h2
                              class="num"
                            >
                              01/ 
                              <span>
                                 enter the symbol
                              </span>
                            </h2>
                            <div
                              class="search"
                            >
                              <label
                                class="inp"
                                for="stockInput"
                              >
                                <input
                                  autocomplete="off"
                                  class="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  spellcheck="false"
                                  tabindex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  class="label"
                                >
                                  search...
                                </span>
                              </label>
                              <div
                                class="wrapSelect"
                              >
                                <h2
                                  class="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  tabindex="2"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>
                              <div
                                class="wrapSelectSocial"
                              >
                                <h2
                                  class="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>
                                <select
                                  name="socialValue"
                                  tabindex="3"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                          <button
                            class="btnProjet"
                            disabled=""
                            tabindex="4"
                            type="submit"
                          >
                            Go !
                          </button>
                        </form>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 14,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <div>
                      <div
                        class="header"
                      >
                        <h1>
                          stockz 
                          <span>
                            Â®
                          </span>
                        </h1>
                        <div
                          class="current"
                          style="transform: translateX(150px);"
                        >
                          <div
                            class="headerInfo"
                          >
                            <h6
                              class="name"
                            />
                            <h6
                              class="valeur"
                            />
                            <p>
                              last updated:
                            </p>
                            <h6
                              class="date"
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="mainApp"
                    >
                      <h3
                        class="mission"
                      >
                        Validating the effects of social media on brand valuation
                      </h3>
                      <h5>
                        - in 3 simple steps -
                      </h5>
                      <form>
                        <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>
                        <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>
                      </form>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="App"
                    >
                      <div>
                        <div
                          class="header"
                        >
                          <h1>
                            stockz 
                            <span>
                              Â®
                            </span>
                          </h1>
                          <div
                            class="current"
                            style="transform: translateX(150px);"
                          >
                            <div
                              class="headerInfo"
                            >
                              <h6
                                class="name"
                              />
                              <h6
                                class="valeur"
                              />
                              <p>
                                last updated:
                              </p>
                              <h6
                                class="date"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        class="mainApp"
                      >
                        <h3
                          class="mission"
                        >
                          Validating the effects of social media on brand valuation
                        </h3>
                        <h5>
                          - in 3 simple steps -
                        </h5>
                        <form>
                          <div
                            class="cover"
                          >
                            <h2
                              class="num"
                            >
                              01/ 
                              <span>
                                 enter the symbol
                              </span>
                            </h2>
                            <div
                              class="search"
                            >
                              <label
                                class="inp"
                                for="stockInput"
                              >
                                <input
                                  autocomplete="off"
                                  class="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  spellcheck="false"
                                  tabindex="1"
                                  type="text"
                                  value=""
                                />
                                <span
                                  class="label"
                                >
                                  search...
                                </span>
                              </label>
                              <div
                                class="wrapSelect"
                              >
                                <h2
                                  class="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>
                                <select
                                  name="value"
                                  tabindex="2"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>
                              </div>
                              <div
                                class="wrapSelectSocial"
                              >
                                <h2
                                  class="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>
                                <select
                                  name="socialValue"
                                  tabindex="3"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                          <button
                            class="btnProjet"
                            disabled=""
                            tabindex="4"
                            type="submit"
                          >
                            Go !
                          </button>
                        </form>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 14,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <div>
                      <div
                        class="header"
                      >
                        <h1>
                          stockz 
                          <span>
                            Â®
                          </span>
                        </h1>
                        <div
                          class="current"
                          style="transform: translateX(150px);"
                        >
                          <div
                            class="headerInfo"
                          >
                            <h6
                              class="name"
                            />
                            <h6
                              class="valeur"
                            />
                            <p>
                              last updated:
                            </p>
                            <h6
                              class="date"
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="mainApp"
                    >
                      <h3
                        class="mission"
                      >
                        Validating the effects of social media on brand valuation
                      </h3>
                      <h5>
                        - in 3 simple steps -
                      </h5>
                      <form>
                        <div
                          class="cover"
                        >
                          <h2
                            class="num"
                          >
                            01/ 
                            <span>
                               enter the symbol
                            </span>
                          </h2>
                          <div
                            class="search"
                          >
                            <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>
                            <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>
                            <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>
                          </div>
                        </div>
                        <button
                          class="btnProjet"
                          disabled=""
                          tabindex="4"
                          type="submit"
                        >
                          Go !
                        </button>
                      </form>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "componentDidMount": [Function],
        "context": Object {},
        "handleChange": [Function],
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "isLoading": false,
          "socialValue": "twitter",
          "stockData": Array [],
          "stockInput": "",
          "stockName": null,
          "value": "10",
        },
        "stockPriceGenerator": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="App"
        >
          <div>
            <div
              class="header"
            >
              <h1>
                stockz 
                <span>
                  Â®
                </span>
              </h1>
              <div
                class="current"
                style="transform: translateX(150px);"
              >
                <div
                  class="headerInfo"
                >
                  <h6
                    class="name"
                  />
                  <h6
                    class="valeur"
                  />
                  <p>
                    last updated:
                  </p>
                  <h6
                    class="date"
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            class="mainApp"
          >
            <h3
              class="mission"
            >
              Validating the effects of social media on brand valuation
            </h3>
            <h5>
              - in 3 simple steps -
            </h5>
            <form>
              <div
                class="cover"
              >
                <h2
                  class="num"
                >
                  01/ 
                  <span>
                     enter the symbol
                  </span>
                </h2>
                <div
                  class="search"
                >
                  <label
                    class="inp"
                    for="stockInput"
                  >
                    <input
                      autocomplete="off"
                      class="searchInput"
                      id="stockInput"
                      name="stockInput"
                      spellcheck="false"
                      tabindex="1"
                      type="text"
                      value=""
                    />
                    <span
                      class="label"
                    >
                      search...
                    </span>
                  </label>
                  <div
                    class="wrapSelect"
                  >
                    <h2
                      class="num"
                    >
                      02/ 
                      <span>
                         days reviewed
                      </span>
                    </h2>
                    <select
                      name="value"
                      tabindex="2"
                    >
                      <option
                        value="10"
                      >
                        10 days
                      </option>
                      <option
                        value="20"
                      >
                        20 days
                      </option>
                      <option
                        value="30"
                      >
                        30 days
                      </option>
                      <option
                        value="60"
                      >
                        60 days
                      </option>
                      <option
                        value="90"
                      >
                        90 days
                      </option>
                    </select>
                  </div>
                  <div
                    class="wrapSelectSocial"
                  >
                    <h2
                      class="num"
                    >
                      03/ 
                      <span>
                         by social Media
                      </span>
                    </h2>
                    <select
                      name="socialValue"
                      tabindex="3"
                    >
                      <option
                        value="twitter"
                      >
                        twitter
                      </option>
                      <option
                        value="facebook"
                      >
                        facebook
                      </option>
                    </select>
                  </div>
                </div>
              </div>
              <button
                class="btnProjet"
                disabled=""
                tabindex="4"
                type="submit"
              >
                Go !
              </button>
            </form>
          </div>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Header
              stockName={null}
            />,
            <div
              className="mainApp"
            >
              <h3
                className="mission"
              >
                Validating the effects of social media on brand valuation
              </h3>
              <h5>
                - in 3 simple steps -
              </h5>
              <form
                onSubmit={[Function]}
              >
                <div
                  className="cover"
                >
                  <h2
                    className="num"
                  >
                    01/ 
                    <span>
                       enter the symbol
                    </span>
                  </h2>
                  <div
                    className="search"
                  >
                    <label
                      className="inp"
                      htmlFor="stockInput"
                    >
                      <input
                        autoComplete="off"
                        className="searchInput"
                        id="stockInput"
                        name="stockInput"
                        onChange={[Function]}
                        spellCheck="false"
                        tabIndex="1"
                        type="text"
                        value=""
                      />
                      <span
                        className="label"
                        style={null}
                      >
                        search...
                      </span>
                    </label>
                    <div
                      className="wrapSelect"
                    >
                      <h2
                        className="num"
                      >
                        02/ 
                        <span>
                           days reviewed
                        </span>
                      </h2>
                      <select
                        name="value"
                        onChange={[Function]}
                        tabIndex="2"
                        value="10"
                      >
                        <option
                          value="10"
                        >
                          10 days
                        </option>
                        <option
                          value="20"
                        >
                          20 days
                        </option>
                        <option
                          value="30"
                        >
                          30 days
                        </option>
                        <option
                          value="60"
                        >
                          60 days
                        </option>
                        <option
                          value="90"
                        >
                          90 days
                        </option>
                      </select>
                    </div>
                    <div
                      className="wrapSelectSocial"
                    >
                      <h2
                        className="num"
                      >
                        03/ 
                        <span>
                           by social Media
                        </span>
                      </h2>
                      <select
                        name="socialValue"
                        onChange={[Function]}
                        tabIndex="3"
                        value="twitter"
                      >
                        <option
                          value="twitter"
                        >
                          twitter
                        </option>
                        <option
                          value="facebook"
                        >
                          facebook
                        </option>
                      </select>
                    </div>
                  </div>
                </div>
                <button
                  className="btnProjet"
                  disabled={true}
                  tabIndex="4"
                  type="submit"
                >
                  Go !
                </button>
              </form>
            </div>,
            false,
          ],
          "className": "App",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "stockName": null,
            },
            "ref": null,
            "rendered": Object {
              "instance": <div>
                <div
                  class="header"
                >
                  <h1>
                    stockz 
                    <span>
                      Â®
                    </span>
                  </h1>
                  <div
                    class="current"
                    style="transform: translateX(150px);"
                  >
                    <div
                      class="headerInfo"
                    >
                      <h6
                        class="name"
                      />
                      <h6
                        class="valeur"
                      />
                      <p>
                        last updated:
                      </p>
                      <h6
                        class="date"
                      />
                    </div>
                  </div>
                </div>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="header"
                >
                  <h1>
                    stockz 
                    <span>
                      Â®
                    </span>
                  </h1>
                  <div
                    className="current"
                    style={
                      Object {
                        "transform": "translateX(150px)",
                      }
                    }
                  >
                    <div
                      className="headerInfo"
                    >
                      <h6
                        className="name"
                      />
                      <h6
                        className="valeur"
                      />
                      <p>
                        last updated:
                      </p>
                      <h6
                        className="date"
                      />
                    </div>
                  </div>
                </div>,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="header"
                  >
                    <h1>
                      stockz 
                      <span>
                        Â®
                      </span>
                    </h1>
                    <div
                      class="current"
                      style="transform: translateX(150px);"
                    >
                      <div
                        class="headerInfo"
                      >
                        <h6
                          class="name"
                        />
                        <h6
                          class="valeur"
                        />
                        <p>
                          last updated:
                        </p>
                        <h6
                          class="date"
                        />
                      </div>
                    </div>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h1>
                        stockz 
                        <span>
                          Â®
                        </span>
                      </h1>,
                      <div
                        className="current"
                        style={
                          Object {
                            "transform": "translateX(150px)",
                          }
                        }
                      >
                        <div
                          className="headerInfo"
                        >
                          <h6
                            className="name"
                          />
                          <h6
                            className="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            className="date"
                          />
                        </div>
                      </div>,
                    ],
                    "className": "header",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <h1>
                        stockz 
                        <span>
                          Â®
                        </span>
                      </h1>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "stockz ",
                          <span>
                            Â®
                          </span>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        "stockz ",
                        Object {
                          "instance": <span>
                            Â®
                          </span>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Â®",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Â®",
                          ],
                          "type": "span",
                        },
                      ],
                      "type": "h1",
                    },
                    Object {
                      "instance": <div
                        class="current"
                        style="transform: translateX(150px);"
                      >
                        <div
                          class="headerInfo"
                        >
                          <h6
                            class="name"
                          />
                          <h6
                            class="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            class="date"
                          />
                        </div>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <div
                          className="headerInfo"
                        >
                          <h6
                            className="name"
                          />
                          <h6
                            className="valeur"
                          />
                          <p>
                            last updated:
                          </p>
                          <h6
                            className="date"
                          />
                        </div>,
                        "className": "current",
                        "style": Object {
                          "transform": "translateX(150px)",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <div
                            class="headerInfo"
                          >
                            <h6
                              class="name"
                            />
                            <h6
                              class="valeur"
                            />
                            <p>
                              last updated:
                            </p>
                            <h6
                              class="date"
                            />
                          </div>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <h6
                                className="name"
                              />,
                              <h6
                                className="valeur"
                              />,
                              <p>
                                last updated:
                              </p>,
                              <h6
                                className="date"
                              />,
                            ],
                            "className": "headerInfo",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <h6
                                class="name"
                              />,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": null,
                                "className": "name",
                              },
                              "ref": null,
                              "rendered": Array [
                                null,
                              ],
                              "type": "h6",
                            },
                            Object {
                              "instance": <h6
                                class="valeur"
                              />,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": null,
                                "className": "valeur",
                              },
                              "ref": null,
                              "rendered": Array [
                                null,
                              ],
                              "type": "h6",
                            },
                            Object {
                              "instance": <p>
                                last updated:
                              </p>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "last updated:",
                              },
                              "ref": null,
                              "rendered": Array [
                                "last updated:",
                              ],
                              "type": "p",
                            },
                            Object {
                              "instance": <h6
                                class="date"
                              />,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": null,
                                "className": "date",
                              },
                              "ref": null,
                              "rendered": Array [
                                null,
                              ],
                              "type": "h6",
                            },
                          ],
                          "type": "div",
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": <div
              class="mainApp"
            >
              <h3
                class="mission"
              >
                Validating the effects of social media on brand valuation
              </h3>
              <h5>
                - in 3 simple steps -
              </h5>
              <form>
                <div
                  class="cover"
                >
                  <h2
                    class="num"
                  >
                    01/ 
                    <span>
                       enter the symbol
                    </span>
                  </h2>
                  <div
                    class="search"
                  >
                    <label
                      class="inp"
                      for="stockInput"
                    >
                      <input
                        autocomplete="off"
                        class="searchInput"
                        id="stockInput"
                        name="stockInput"
                        spellcheck="false"
                        tabindex="1"
                        type="text"
                        value=""
                      />
                      <span
                        class="label"
                      >
                        search...
                      </span>
                    </label>
                    <div
                      class="wrapSelect"
                    >
                      <h2
                        class="num"
                      >
                        02/ 
                        <span>
                           days reviewed
                        </span>
                      </h2>
                      <select
                        name="value"
                        tabindex="2"
                      >
                        <option
                          value="10"
                        >
                          10 days
                        </option>
                        <option
                          value="20"
                        >
                          20 days
                        </option>
                        <option
                          value="30"
                        >
                          30 days
                        </option>
                        <option
                          value="60"
                        >
                          60 days
                        </option>
                        <option
                          value="90"
                        >
                          90 days
                        </option>
                      </select>
                    </div>
                    <div
                      class="wrapSelectSocial"
                    >
                      <h2
                        class="num"
                      >
                        03/ 
                        <span>
                           by social Media
                        </span>
                      </h2>
                      <select
                        name="socialValue"
                        tabindex="3"
                      >
                        <option
                          value="twitter"
                        >
                          twitter
                        </option>
                        <option
                          value="facebook"
                        >
                          facebook
                        </option>
                      </select>
                    </div>
                  </div>
                </div>
                <button
                  class="btnProjet"
                  disabled=""
                  tabindex="4"
                  type="submit"
                >
                  Go !
                </button>
              </form>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3
                  className="mission"
                >
                  Validating the effects of social media on brand valuation
                </h3>,
                <h5>
                  - in 3 simple steps -
                </h5>,
                <form
                  onSubmit={[Function]}
                >
                  <div
                    className="cover"
                  >
                    <h2
                      className="num"
                    >
                      01/ 
                      <span>
                         enter the symbol
                      </span>
                    </h2>
                    <div
                      className="search"
                    >
                      <label
                        className="inp"
                        htmlFor="stockInput"
                      >
                        <input
                          autoComplete="off"
                          className="searchInput"
                          id="stockInput"
                          name="stockInput"
                          onChange={[Function]}
                          spellCheck="false"
                          tabIndex="1"
                          type="text"
                          value=""
                        />
                        <span
                          className="label"
                          style={null}
                        >
                          search...
                        </span>
                      </label>
                      <div
                        className="wrapSelect"
                      >
                        <h2
                          className="num"
                        >
                          02/ 
                          <span>
                             days reviewed
                          </span>
                        </h2>
                        <select
                          name="value"
                          onChange={[Function]}
                          tabIndex="2"
                          value="10"
                        >
                          <option
                            value="10"
                          >
                            10 days
                          </option>
                          <option
                            value="20"
                          >
                            20 days
                          </option>
                          <option
                            value="30"
                          >
                            30 days
                          </option>
                          <option
                            value="60"
                          >
                            60 days
                          </option>
                          <option
                            value="90"
                          >
                            90 days
                          </option>
                        </select>
                      </div>
                      <div
                        className="wrapSelectSocial"
                      >
                        <h2
                          className="num"
                        >
                          03/ 
                          <span>
                             by social Media
                          </span>
                        </h2>
                        <select
                          name="socialValue"
                          onChange={[Function]}
                          tabIndex="3"
                          value="twitter"
                        >
                          <option
                            value="twitter"
                          >
                            twitter
                          </option>
                          <option
                            value="facebook"
                          >
                            facebook
                          </option>
                        </select>
                      </div>
                    </div>
                  </div>
                  <button
                    className="btnProjet"
                    disabled={true}
                    tabIndex="4"
                    type="submit"
                  >
                    Go !
                  </button>
                </form>,
              ],
              "className": "mainApp",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <h3
                  class="mission"
                >
                  Validating the effects of social media on brand valuation
                </h3>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Validating the effects of social media on brand valuation",
                  "className": "mission",
                },
                "ref": null,
                "rendered": Array [
                  "Validating the effects of social media on brand valuation",
                ],
                "type": "h3",
              },
              Object {
                "instance": <h5>
                  - in 3 simple steps -
                </h5>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "- in 3 simple steps -",
                },
                "ref": null,
                "rendered": Array [
                  "- in 3 simple steps -",
                ],
                "type": "h5",
              },
              Object {
                "instance": <form>
                  <div
                    class="cover"
                  >
                    <h2
                      class="num"
                    >
                      01/ 
                      <span>
                         enter the symbol
                      </span>
                    </h2>
                    <div
                      class="search"
                    >
                      <label
                        class="inp"
                        for="stockInput"
                      >
                        <input
                          autocomplete="off"
                          class="searchInput"
                          id="stockInput"
                          name="stockInput"
                          spellcheck="false"
                          tabindex="1"
                          type="text"
                          value=""
                        />
                        <span
                          class="label"
                        >
                          search...
                        </span>
                      </label>
                      <div
                        class="wrapSelect"
                      >
                        <h2
                          class="num"
                        >
                          02/ 
                          <span>
                             days reviewed
                          </span>
                        </h2>
                        <select
                          name="value"
                          tabindex="2"
                        >
                          <option
                            value="10"
                          >
                            10 days
                          </option>
                          <option
                            value="20"
                          >
                            20 days
                          </option>
                          <option
                            value="30"
                          >
                            30 days
                          </option>
                          <option
                            value="60"
                          >
                            60 days
                          </option>
                          <option
                            value="90"
                          >
                            90 days
                          </option>
                        </select>
                      </div>
                      <div
                        class="wrapSelectSocial"
                      >
                        <h2
                          class="num"
                        >
                          03/ 
                          <span>
                             by social Media
                          </span>
                        </h2>
                        <select
                          name="socialValue"
                          tabindex="3"
                        >
                          <option
                            value="twitter"
                          >
                            twitter
                          </option>
                          <option
                            value="facebook"
                          >
                            facebook
                          </option>
                        </select>
                      </div>
                    </div>
                  </div>
                  <button
                    class="btnProjet"
                    disabled=""
                    tabindex="4"
                    type="submit"
                  >
                    Go !
                  </button>
                </form>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="cover"
                    >
                      <h2
                        className="num"
                      >
                        01/ 
                        <span>
                           enter the symbol
                        </span>
                      </h2>
                      <div
                        className="search"
                      >
                        <label
                          className="inp"
                          htmlFor="stockInput"
                        >
                          <input
                            autoComplete="off"
                            className="searchInput"
                            id="stockInput"
                            name="stockInput"
                            onChange={[Function]}
                            spellCheck="false"
                            tabIndex="1"
                            type="text"
                            value=""
                          />
                          <span
                            className="label"
                            style={null}
                          >
                            search...
                          </span>
                        </label>
                        <div
                          className="wrapSelect"
                        >
                          <h2
                            className="num"
                          >
                            02/ 
                            <span>
                               days reviewed
                            </span>
                          </h2>
                          <select
                            name="value"
                            onChange={[Function]}
                            tabIndex="2"
                            value="10"
                          >
                            <option
                              value="10"
                            >
                              10 days
                            </option>
                            <option
                              value="20"
                            >
                              20 days
                            </option>
                            <option
                              value="30"
                            >
                              30 days
                            </option>
                            <option
                              value="60"
                            >
                              60 days
                            </option>
                            <option
                              value="90"
                            >
                              90 days
                            </option>
                          </select>
                        </div>
                        <div
                          className="wrapSelectSocial"
                        >
                          <h2
                            className="num"
                          >
                            03/ 
                            <span>
                               by social Media
                            </span>
                          </h2>
                          <select
                            name="socialValue"
                            onChange={[Function]}
                            tabIndex="3"
                            value="twitter"
                          >
                            <option
                              value="twitter"
                            >
                              twitter
                            </option>
                            <option
                              value="facebook"
                            >
                              facebook
                            </option>
                          </select>
                        </div>
                      </div>
                    </div>,
                    <button
                      className="btnProjet"
                      disabled={true}
                      tabIndex="4"
                      type="submit"
                    >
                      Go !
                    </button>,
                  ],
                  "onSubmit": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <div
                      class="cover"
                    >
                      <h2
                        class="num"
                      >
                        01/ 
                        <span>
                           enter the symbol
                        </span>
                      </h2>
                      <div
                        class="search"
                      >
                        <label
                          class="inp"
                          for="stockInput"
                        >
                          <input
                            autocomplete="off"
                            class="searchInput"
                            id="stockInput"
                            name="stockInput"
                            spellcheck="false"
                            tabindex="1"
                            type="text"
                            value=""
                          />
                          <span
                            class="label"
                          >
                            search...
                          </span>
                        </label>
                        <div
                          class="wrapSelect"
                        >
                          <h2
                            class="num"
                          >
                            02/ 
                            <span>
                               days reviewed
                            </span>
                          </h2>
                          <select
                            name="value"
                            tabindex="2"
                          >
                            <option
                              value="10"
                            >
                              10 days
                            </option>
                            <option
                              value="20"
                            >
                              20 days
                            </option>
                            <option
                              value="30"
                            >
                              30 days
                            </option>
                            <option
                              value="60"
                            >
                              60 days
                            </option>
                            <option
                              value="90"
                            >
                              90 days
                            </option>
                          </select>
                        </div>
                        <div
                          class="wrapSelectSocial"
                        >
                          <h2
                            class="num"
                          >
                            03/ 
                            <span>
                               by social Media
                            </span>
                          </h2>
                          <select
                            name="socialValue"
                            tabindex="3"
                          >
                            <option
                              value="twitter"
                            >
                              twitter
                            </option>
                            <option
                              value="facebook"
                            >
                              facebook
                            </option>
                          </select>
                        </div>
                      </div>
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <h2
                          className="num"
                        >
                          01/ 
                          <span>
                             enter the symbol
                          </span>
                        </h2>,
                        <div
                          className="search"
                        >
                          <label
                            className="inp"
                            htmlFor="stockInput"
                          >
                            <input
                              autoComplete="off"
                              className="searchInput"
                              id="stockInput"
                              name="stockInput"
                              onChange={[Function]}
                              spellCheck="false"
                              tabIndex="1"
                              type="text"
                              value=""
                            />
                            <span
                              className="label"
                              style={null}
                            >
                              search...
                            </span>
                          </label>
                          <div
                            className="wrapSelect"
                          >
                            <h2
                              className="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              onChange={[Function]}
                              tabIndex="2"
                              value="10"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>
                          <div
                            className="wrapSelectSocial"
                          >
                            <h2
                              className="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              onChange={[Function]}
                              tabIndex="3"
                              value="twitter"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>
                        </div>,
                      ],
                      "className": "cover",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <h2
                          class="num"
                        >
                          01/ 
                          <span>
                             enter the symbol
                          </span>
                        </h2>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            "01/ ",
                            <span>
                               enter the symbol
                            </span>,
                          ],
                          "className": "num",
                        },
                        "ref": null,
                        "rendered": Array [
                          "01/ ",
                          Object {
                            "instance": <span>
                               enter the symbol
                            </span>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": " enter the symbol",
                            },
                            "ref": null,
                            "rendered": Array [
                              " enter the symbol",
                            ],
                            "type": "span",
                          },
                        ],
                        "type": "h2",
                      },
                      Object {
                        "instance": <div
                          class="search"
                        >
                          <label
                            class="inp"
                            for="stockInput"
                          >
                            <input
                              autocomplete="off"
                              class="searchInput"
                              id="stockInput"
                              name="stockInput"
                              spellcheck="false"
                              tabindex="1"
                              type="text"
                              value=""
                            />
                            <span
                              class="label"
                            >
                              search...
                            </span>
                          </label>
                          <div
                            class="wrapSelect"
                          >
                            <h2
                              class="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              tabindex="2"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>
                          <div
                            class="wrapSelectSocial"
                          >
                            <h2
                              class="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              tabindex="3"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <label
                              className="inp"
                              htmlFor="stockInput"
                            >
                              <input
                                autoComplete="off"
                                className="searchInput"
                                id="stockInput"
                                name="stockInput"
                                onChange={[Function]}
                                spellCheck="false"
                                tabIndex="1"
                                type="text"
                                value=""
                              />
                              <span
                                className="label"
                                style={null}
                              >
                                search...
                              </span>
                            </label>,
                            <div
                              className="wrapSelect"
                            >
                              <h2
                                className="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                onChange={[Function]}
                                tabIndex="2"
                                value="10"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>,
                            <div
                              className="wrapSelectSocial"
                            >
                              <h2
                                className="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                onChange={[Function]}
                                tabIndex="3"
                                value="twitter"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>,
                          ],
                          "className": "search",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <label
                              class="inp"
                              for="stockInput"
                            >
                              <input
                                autocomplete="off"
                                class="searchInput"
                                id="stockInput"
                                name="stockInput"
                                spellcheck="false"
                                tabindex="1"
                                type="text"
                                value=""
                              />
                              <span
                                class="label"
                              >
                                search...
                              </span>
                            </label>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <input
                                  autoComplete="off"
                                  className="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  onChange={[Function]}
                                  spellCheck="false"
                                  tabIndex="1"
                                  type="text"
                                  value=""
                                />,
                                <span
                                  className="label"
                                  style={null}
                                >
                                  search...
                                </span>,
                              ],
                              "className": "inp",
                              "htmlFor": "stockInput",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": <input
                                  autocomplete="off"
                                  class="searchInput"
                                  id="stockInput"
                                  name="stockInput"
                                  spellcheck="false"
                                  tabindex="1"
                                  type="text"
                                  value=""
                                />,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "autoComplete": "off",
                                  "className": "searchInput",
                                  "id": "stockInput",
                                  "name": "stockInput",
                                  "onChange": [Function],
                                  "spellCheck": "false",
                                  "tabIndex": "1",
                                  "type": "text",
                                  "value": "",
                                },
                                "ref": null,
                                "rendered": Array [
                                  undefined,
                                ],
                                "type": "input",
                              },
                              Object {
                                "instance": <span
                                  class="label"
                                >
                                  search...
                                </span>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "search...",
                                  "className": "label",
                                  "style": null,
                                },
                                "ref": null,
                                "rendered": Array [
                                  "search...",
                                ],
                                "type": "span",
                              },
                            ],
                            "type": "label",
                          },
                          Object {
                            "instance": <div
                              class="wrapSelect"
                            >
                              <h2
                                class="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>
                              <select
                                name="value"
                                tabindex="2"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>
                            </div>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <h2
                                  className="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>,
                                <select
                                  name="value"
                                  onChange={[Function]}
                                  tabIndex="2"
                                  value="10"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>,
                              ],
                              "className": "wrapSelect",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": <h2
                                  class="num"
                                >
                                  02/ 
                                  <span>
                                     days reviewed
                                  </span>
                                </h2>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": Array [
                                    "02/ ",
                                    <span>
                                       days reviewed
                                    </span>,
                                  ],
                                  "className": "num",
                                },
                                "ref": null,
                                "rendered": Array [
                                  "02/ ",
                                  Object {
                                    "instance": <span>
                                       days reviewed
                                    </span>,
                                    "key": undefined,
                                    "nodeType": "host",
                                    "props": Object {
                                      "children": " days reviewed",
                                    },
                                    "ref": null,
                                    "rendered": Array [
                                      " days reviewed",
                                    ],
                                    "type": "span",
                                  },
                                ],
                                "type": "h2",
                              },
                              Object {
                                "instance": <select
                                  name="value"
                                  tabindex="2"
                                >
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>
                                </select>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": Array [
                                    <option
                                      value="10"
                                    >
                                      10 days
                                    </option>,
                                    <option
                                      value="20"
                                    >
                                      20 days
                                    </option>,
                                    <option
                                      value="30"
                                    >
                                      30 days
                                    </option>,
                                    <option
                                      value="60"
                                    >
                                      60 days
                                    </option>,
                                    <option
                                      value="90"
                                    >
                                      90 days
                                    </option>,
                                  ],
                                  "name": "value",
                                  "onChange": [Function],
                                  "tabIndex": "2",
                                  "value": "10",
                                },
                                "ref": null,
                                "rendered": Array [
                                  Object {
                                    "instance": <option
                                      value="10"
                                    >
                                      10 days
                                    </option>,
                                    "key": undefined,
                                    "nodeType": "host",
                                    "props": Object {
                                      "children": "10 days",
                                      "value": "10",
                                    },
                                    "ref": null,
                                    "rendered": Array [
                                      "10 days",
                                    ],
                                    "type": "option",
                                  },
                                  Object {
                                    "instance": <option
                                      value="20"
                                    >
                                      20 days
                                    </option>,
                                    "key": undefined,
                                    "nodeType": "host",
                                    "props": Object {
                                      "children": "20 days",
                                      "value": "20",
                                    },
                                    "ref": null,
                                    "rendered": Array [
                                      "20 days",
                                    ],
                                    "type": "option",
                                  },
                                  Object {
                                    "instance": <option
                                      value="30"
                                    >
                                      30 days
                                    </option>,
                                    "key": undefined,
                                    "nodeType": "host",
                                    "props": Object {
                                      "children": "30 days",
                                      "value": "30",
                                    },
                                    "ref": null,
                                    "rendered": Array [
                                      "30 days",
                                    ],
                                    "type": "option",
                                  },
                                  Object {
                                    "instance": <option
                                      value="60"
                                    >
                                      60 days
                                    </option>,
                                    "key": undefined,
                                    "nodeType": "host",
                                    "props": Object {
                                      "children": "60 days",
                                      "value": "60",
                                    },
                                    "ref": null,
                                    "rendered": Array [
                                      "60 days",
                                    ],
                                    "type": "option",
                                  },
                                  Object {
                                    "instance": <option
                                      value="90"
                                    >
                                      90 days
                                    </option>,
                                    "key": undefined,
                                    "nodeType": "host",
                                    "props": Object {
                                      "children": "90 days",
                                      "value": "90",
                                    },
                                    "ref": null,
                                    "rendered": Array [
                                      "90 days",
                                    ],
                                    "type": "option",
                                  },
                                ],
                                "type": "select",
                              },
                            ],
                            "type": "div",
                          },
                          Object {
                            "instance": <div
                              class="wrapSelectSocial"
                            >
                              <h2
                                class="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>
                              <select
                                name="socialValue"
                                tabindex="3"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>
                            </div>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <h2
                                  className="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>,
                                <select
                                  name="socialValue"
                                  onChange={[Function]}
                                  tabIndex="3"
                                  value="twitter"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>,
                              ],
                              "className": "wrapSelectSocial",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": <h2
                                  class="num"
                                >
                                  03/ 
                                  <span>
                                     by social Media
                                  </span>
                                </h2>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": Array [
                                    "03/ ",
                                    <span>
                                       by social Media
                                    </span>,
                                  ],
                                  "className": "num",
                                },
                                "ref": null,
                                "rendered": Array [
                                  "03/ ",
                                  Object {
                                    "instance": <span>
                                       by social Media
                                    </span>,
                                    "key": undefined,
                                    "nodeType": "host",
                                    "props": Object {
                                      "children": " by social Media",
                                    },
                                    "ref": null,
                                    "rendered": Array [
                                      " by social Media",
                                    ],
                                    "type": "span",
                                  },
                                ],
                                "type": "h2",
                              },
                              Object {
                                "instance": <select
                                  name="socialValue"
                                  tabindex="3"
                                >
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>
                                </select>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": Array [
                                    <option
                                      value="twitter"
                                    >
                                      twitter
                                    </option>,
                                    <option
                                      value="facebook"
                                    >
                                      facebook
                                    </option>,
                                  ],
                                  "name": "socialValue",
                                  "onChange": [Function],
                                  "tabIndex": "3",
                                  "value": "twitter",
                                },
                                "ref": null,
                                "rendered": Array [
                                  Object {
                                    "instance": <option
                                      value="twitter"
                                    >
                                      twitter
                                    </option>,
                                    "key": undefined,
                                    "nodeType": "host",
                                    "props": Object {
                                      "children": "twitter",
                                      "value": "twitter",
                                    },
                                    "ref": null,
                                    "rendered": Array [
                                      "twitter",
                                    ],
                                    "type": "option",
                                  },
                                  Object {
                                    "instance": <option
                                      value="facebook"
                                    >
                                      facebook
                                    </option>,
                                    "key": undefined,
                                    "nodeType": "host",
                                    "props": Object {
                                      "children": "facebook",
                                      "value": "facebook",
                                    },
                                    "ref": null,
                                    "rendered": Array [
                                      "facebook",
                                    ],
                                    "type": "option",
                                  },
                                ],
                                "type": "select",
                              },
                            ],
                            "type": "div",
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": <button
                      class="btnProjet"
                      disabled=""
                      tabindex="4"
                      type="submit"
                    >
                      Go !
                    </button>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Go !",
                      "className": "btnProjet",
                      "disabled": true,
                      "tabIndex": "4",
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Go !",
                    ],
                    "type": "button",
                  },
                ],
                "type": "form",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`App devrait partir en debug 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    debug={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header
          stockName={null}
        />,
        <div
          className="mainApp"
        >
          <h3
            className="mission"
          >
            Validating the effects of social media on brand valuation
          </h3>
          <h5>
            - in 3 simple steps -
          </h5>
          <form
            onSubmit={[Function]}
          >
            <div
              className="cover"
            >
              <h2
                className="num"
              >
                01/ 
                <span>
                   enter the symbol
                </span>
              </h2>
              <div
                className="search"
              >
                <label
                  className="inp"
                  htmlFor="stockInput"
                >
                  <input
                    autoComplete="off"
                    className="searchInput"
                    id="stockInput"
                    name="stockInput"
                    onChange={[Function]}
                    spellCheck="false"
                    tabIndex="1"
                    type="text"
                    value=""
                  />
                  <span
                    className="label"
                    style={null}
                  >
                    search...
                  </span>
                </label>
                <div
                  className="wrapSelect"
                >
                  <h2
                    className="num"
                  >
                    02/ 
                    <span>
                       days reviewed
                    </span>
                  </h2>
                  <select
                    name="value"
                    onChange={[Function]}
                    tabIndex="2"
                    value="10"
                  >
                    <option
                      value="10"
                    >
                      10 days
                    </option>
                    <option
                      value="20"
                    >
                      20 days
                    </option>
                    <option
                      value="30"
                    >
                      30 days
                    </option>
                    <option
                      value="60"
                    >
                      60 days
                    </option>
                    <option
                      value="90"
                    >
                      90 days
                    </option>
                  </select>
                </div>
                <div
                  className="wrapSelectSocial"
                >
                  <h2
                    className="num"
                  >
                    03/ 
                    <span>
                       by social Media
                    </span>
                  </h2>
                  <select
                    name="socialValue"
                    onChange={[Function]}
                    tabIndex="3"
                    value="twitter"
                  >
                    <option
                      value="twitter"
                    >
                      twitter
                    </option>
                    <option
                      value="facebook"
                    >
                      facebook
                    </option>
                  </select>
                </div>
              </div>
            </div>
            <button
              className="btnProjet"
              disabled={true}
              tabIndex="4"
              type="submit"
            >
              Go !
            </button>
          </form>
        </div>,
        false,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "stockName": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3
              className="mission"
            >
              Validating the effects of social media on brand valuation
            </h3>,
            <h5>
              - in 3 simple steps -
            </h5>,
            <form
              onSubmit={[Function]}
            >
              <div
                className="cover"
              >
                <h2
                  className="num"
                >
                  01/ 
                  <span>
                     enter the symbol
                  </span>
                </h2>
                <div
                  className="search"
                >
                  <label
                    className="inp"
                    htmlFor="stockInput"
                  >
                    <input
                      autoComplete="off"
                      className="searchInput"
                      id="stockInput"
                      name="stockInput"
                      onChange={[Function]}
                      spellCheck="false"
                      tabIndex="1"
                      type="text"
                      value=""
                    />
                    <span
                      className="label"
                      style={null}
                    >
                      search...
                    </span>
                  </label>
                  <div
                    className="wrapSelect"
                  >
                    <h2
                      className="num"
                    >
                      02/ 
                      <span>
                         days reviewed
                      </span>
                    </h2>
                    <select
                      name="value"
                      onChange={[Function]}
                      tabIndex="2"
                      value="10"
                    >
                      <option
                        value="10"
                      >
                        10 days
                      </option>
                      <option
                        value="20"
                      >
                        20 days
                      </option>
                      <option
                        value="30"
                      >
                        30 days
                      </option>
                      <option
                        value="60"
                      >
                        60 days
                      </option>
                      <option
                        value="90"
                      >
                        90 days
                      </option>
                    </select>
                  </div>
                  <div
                    className="wrapSelectSocial"
                  >
                    <h2
                      className="num"
                    >
                      03/ 
                      <span>
                         by social Media
                      </span>
                    </h2>
                    <select
                      name="socialValue"
                      onChange={[Function]}
                      tabIndex="3"
                      value="twitter"
                    >
                      <option
                        value="twitter"
                      >
                        twitter
                      </option>
                      <option
                        value="facebook"
                      >
                        facebook
                      </option>
                    </select>
                  </div>
                </div>
              </div>
              <button
                className="btnProjet"
                disabled={true}
                tabIndex="4"
                type="submit"
              >
                Go !
              </button>
            </form>,
          ],
          "className": "mainApp",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Validating the effects of social media on brand valuation",
              "className": "mission",
            },
            "ref": null,
            "rendered": "Validating the effects of social media on brand valuation",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "- in 3 simple steps -",
            },
            "ref": null,
            "rendered": "- in 3 simple steps -",
            "type": "h5",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="cover"
                >
                  <h2
                    className="num"
                  >
                    01/ 
                    <span>
                       enter the symbol
                    </span>
                  </h2>
                  <div
                    className="search"
                  >
                    <label
                      className="inp"
                      htmlFor="stockInput"
                    >
                      <input
                        autoComplete="off"
                        className="searchInput"
                        id="stockInput"
                        name="stockInput"
                        onChange={[Function]}
                        spellCheck="false"
                        tabIndex="1"
                        type="text"
                        value=""
                      />
                      <span
                        className="label"
                        style={null}
                      >
                        search...
                      </span>
                    </label>
                    <div
                      className="wrapSelect"
                    >
                      <h2
                        className="num"
                      >
                        02/ 
                        <span>
                           days reviewed
                        </span>
                      </h2>
                      <select
                        name="value"
                        onChange={[Function]}
                        tabIndex="2"
                        value="10"
                      >
                        <option
                          value="10"
                        >
                          10 days
                        </option>
                        <option
                          value="20"
                        >
                          20 days
                        </option>
                        <option
                          value="30"
                        >
                          30 days
                        </option>
                        <option
                          value="60"
                        >
                          60 days
                        </option>
                        <option
                          value="90"
                        >
                          90 days
                        </option>
                      </select>
                    </div>
                    <div
                      className="wrapSelectSocial"
                    >
                      <h2
                        className="num"
                      >
                        03/ 
                        <span>
                           by social Media
                        </span>
                      </h2>
                      <select
                        name="socialValue"
                        onChange={[Function]}
                        tabIndex="3"
                        value="twitter"
                      >
                        <option
                          value="twitter"
                        >
                          twitter
                        </option>
                        <option
                          value="facebook"
                        >
                          facebook
                        </option>
                      </select>
                    </div>
                  </div>
                </div>,
                <button
                  className="btnProjet"
                  disabled={true}
                  tabIndex="4"
                  type="submit"
                >
                  Go !
                </button>,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h2
                      className="num"
                    >
                      01/ 
                      <span>
                         enter the symbol
                      </span>
                    </h2>,
                    <div
                      className="search"
                    >
                      <label
                        className="inp"
                        htmlFor="stockInput"
                      >
                        <input
                          autoComplete="off"
                          className="searchInput"
                          id="stockInput"
                          name="stockInput"
                          onChange={[Function]}
                          spellCheck="false"
                          tabIndex="1"
                          type="text"
                          value=""
                        />
                        <span
                          className="label"
                          style={null}
                        >
                          search...
                        </span>
                      </label>
                      <div
                        className="wrapSelect"
                      >
                        <h2
                          className="num"
                        >
                          02/ 
                          <span>
                             days reviewed
                          </span>
                        </h2>
                        <select
                          name="value"
                          onChange={[Function]}
                          tabIndex="2"
                          value="10"
                        >
                          <option
                            value="10"
                          >
                            10 days
                          </option>
                          <option
                            value="20"
                          >
                            20 days
                          </option>
                          <option
                            value="30"
                          >
                            30 days
                          </option>
                          <option
                            value="60"
                          >
                            60 days
                          </option>
                          <option
                            value="90"
                          >
                            90 days
                          </option>
                        </select>
                      </div>
                      <div
                        className="wrapSelectSocial"
                      >
                        <h2
                          className="num"
                        >
                          03/ 
                          <span>
                             by social Media
                          </span>
                        </h2>
                        <select
                          name="socialValue"
                          onChange={[Function]}
                          tabIndex="3"
                          value="twitter"
                        >
                          <option
                            value="twitter"
                          >
                            twitter
                          </option>
                          <option
                            value="facebook"
                          >
                            facebook
                          </option>
                        </select>
                      </div>
                    </div>,
                  ],
                  "className": "cover",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "01/ ",
                        <span>
                           enter the symbol
                        </span>,
                      ],
                      "className": "num",
                    },
                    "ref": null,
                    "rendered": Array [
                      "01/ ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": " enter the symbol",
                        },
                        "ref": null,
                        "rendered": " enter the symbol",
                        "type": "span",
                      },
                    ],
                    "type": "h2",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <label
                          className="inp"
                          htmlFor="stockInput"
                        >
                          <input
                            autoComplete="off"
                            className="searchInput"
                            id="stockInput"
                            name="stockInput"
                            onChange={[Function]}
                            spellCheck="false"
                            tabIndex="1"
                            type="text"
                            value=""
                          />
                          <span
                            className="label"
                            style={null}
                          >
                            search...
                          </span>
                        </label>,
                        <div
                          className="wrapSelect"
                        >
                          <h2
                            className="num"
                          >
                            02/ 
                            <span>
                               days reviewed
                            </span>
                          </h2>
                          <select
                            name="value"
                            onChange={[Function]}
                            tabIndex="2"
                            value="10"
                          >
                            <option
                              value="10"
                            >
                              10 days
                            </option>
                            <option
                              value="20"
                            >
                              20 days
                            </option>
                            <option
                              value="30"
                            >
                              30 days
                            </option>
                            <option
                              value="60"
                            >
                              60 days
                            </option>
                            <option
                              value="90"
                            >
                              90 days
                            </option>
                          </select>
                        </div>,
                        <div
                          className="wrapSelectSocial"
                        >
                          <h2
                            className="num"
                          >
                            03/ 
                            <span>
                               by social Media
                            </span>
                          </h2>
                          <select
                            name="socialValue"
                            onChange={[Function]}
                            tabIndex="3"
                            value="twitter"
                          >
                            <option
                              value="twitter"
                            >
                              twitter
                            </option>
                            <option
                              value="facebook"
                            >
                              facebook
                            </option>
                          </select>
                        </div>,
                      ],
                      "className": "search",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <input
                              autoComplete="off"
                              className="searchInput"
                              id="stockInput"
                              name="stockInput"
                              onChange={[Function]}
                              spellCheck="false"
                              tabIndex="1"
                              type="text"
                              value=""
                            />,
                            <span
                              className="label"
                              style={null}
                            >
                              search...
                            </span>,
                          ],
                          "className": "inp",
                          "htmlFor": "stockInput",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "autoComplete": "off",
                              "className": "searchInput",
                              "id": "stockInput",
                              "name": "stockInput",
                              "onChange": [Function],
                              "spellCheck": "false",
                              "tabIndex": "1",
                              "type": "text",
                              "value": "",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": "input",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "search...",
                              "className": "label",
                              "style": null,
                            },
                            "ref": null,
                            "rendered": "search...",
                            "type": "span",
                          },
                        ],
                        "type": "label",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <h2
                              className="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>,
                            <select
                              name="value"
                              onChange={[Function]}
                              tabIndex="2"
                              value="10"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>,
                          ],
                          "className": "wrapSelect",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                "02/ ",
                                <span>
                                   days reviewed
                                </span>,
                              ],
                              "className": "num",
                            },
                            "ref": null,
                            "rendered": Array [
                              "02/ ",
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": " days reviewed",
                                },
                                "ref": null,
                                "rendered": " days reviewed",
                                "type": "span",
                              },
                            ],
                            "type": "h2",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>,
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>,
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>,
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>,
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>,
                              ],
                              "name": "value",
                              "onChange": [Function],
                              "tabIndex": "2",
                              "value": "10",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "10 days",
                                  "value": "10",
                                },
                                "ref": null,
                                "rendered": "10 days",
                                "type": "option",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "20 days",
                                  "value": "20",
                                },
                                "ref": null,
                                "rendered": "20 days",
                                "type": "option",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "30 days",
                                  "value": "30",
                                },
                                "ref": null,
                                "rendered": "30 days",
                                "type": "option",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "60 days",
                                  "value": "60",
                                },
                                "ref": null,
                                "rendered": "60 days",
                                "type": "option",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "90 days",
                                  "value": "90",
                                },
                                "ref": null,
                                "rendered": "90 days",
                                "type": "option",
                              },
                            ],
                            "type": "select",
                          },
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <h2
                              className="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>,
                            <select
                              name="socialValue"
                              onChange={[Function]}
                              tabIndex="3"
                              value="twitter"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>,
                          ],
                          "className": "wrapSelectSocial",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                "03/ ",
                                <span>
                                   by social Media
                                </span>,
                              ],
                              "className": "num",
                            },
                            "ref": null,
                            "rendered": Array [
                              "03/ ",
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": " by social Media",
                                },
                                "ref": null,
                                "rendered": " by social Media",
                                "type": "span",
                              },
                            ],
                            "type": "h2",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>,
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>,
                              ],
                              "name": "socialValue",
                              "onChange": [Function],
                              "tabIndex": "3",
                              "value": "twitter",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "twitter",
                                  "value": "twitter",
                                },
                                "ref": null,
                                "rendered": "twitter",
                                "type": "option",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "facebook",
                                  "value": "facebook",
                                },
                                "ref": null,
                                "rendered": "facebook",
                                "type": "option",
                              },
                            ],
                            "type": "select",
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Go !",
                  "className": "btnProjet",
                  "disabled": true,
                  "tabIndex": "4",
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Go !",
                "type": "button",
              },
            ],
            "type": "form",
          },
        ],
        "type": "div",
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header
            stockName={null}
          />,
          <div
            className="mainApp"
          >
            <h3
              className="mission"
            >
              Validating the effects of social media on brand valuation
            </h3>
            <h5>
              - in 3 simple steps -
            </h5>
            <form
              onSubmit={[Function]}
            >
              <div
                className="cover"
              >
                <h2
                  className="num"
                >
                  01/ 
                  <span>
                     enter the symbol
                  </span>
                </h2>
                <div
                  className="search"
                >
                  <label
                    className="inp"
                    htmlFor="stockInput"
                  >
                    <input
                      autoComplete="off"
                      className="searchInput"
                      id="stockInput"
                      name="stockInput"
                      onChange={[Function]}
                      spellCheck="false"
                      tabIndex="1"
                      type="text"
                      value=""
                    />
                    <span
                      className="label"
                      style={null}
                    >
                      search...
                    </span>
                  </label>
                  <div
                    className="wrapSelect"
                  >
                    <h2
                      className="num"
                    >
                      02/ 
                      <span>
                         days reviewed
                      </span>
                    </h2>
                    <select
                      name="value"
                      onChange={[Function]}
                      tabIndex="2"
                      value="10"
                    >
                      <option
                        value="10"
                      >
                        10 days
                      </option>
                      <option
                        value="20"
                      >
                        20 days
                      </option>
                      <option
                        value="30"
                      >
                        30 days
                      </option>
                      <option
                        value="60"
                      >
                        60 days
                      </option>
                      <option
                        value="90"
                      >
                        90 days
                      </option>
                    </select>
                  </div>
                  <div
                    className="wrapSelectSocial"
                  >
                    <h2
                      className="num"
                    >
                      03/ 
                      <span>
                         by social Media
                      </span>
                    </h2>
                    <select
                      name="socialValue"
                      onChange={[Function]}
                      tabIndex="3"
                      value="twitter"
                    >
                      <option
                        value="twitter"
                      >
                        twitter
                      </option>
                      <option
                        value="facebook"
                      >
                        facebook
                      </option>
                    </select>
                  </div>
                </div>
              </div>
              <button
                className="btnProjet"
                disabled={true}
                tabIndex="4"
                type="submit"
              >
                Go !
              </button>
            </form>
          </div>,
          false,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "stockName": null,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3
                className="mission"
              >
                Validating the effects of social media on brand valuation
              </h3>,
              <h5>
                - in 3 simple steps -
              </h5>,
              <form
                onSubmit={[Function]}
              >
                <div
                  className="cover"
                >
                  <h2
                    className="num"
                  >
                    01/ 
                    <span>
                       enter the symbol
                    </span>
                  </h2>
                  <div
                    className="search"
                  >
                    <label
                      className="inp"
                      htmlFor="stockInput"
                    >
                      <input
                        autoComplete="off"
                        className="searchInput"
                        id="stockInput"
                        name="stockInput"
                        onChange={[Function]}
                        spellCheck="false"
                        tabIndex="1"
                        type="text"
                        value=""
                      />
                      <span
                        className="label"
                        style={null}
                      >
                        search...
                      </span>
                    </label>
                    <div
                      className="wrapSelect"
                    >
                      <h2
                        className="num"
                      >
                        02/ 
                        <span>
                           days reviewed
                        </span>
                      </h2>
                      <select
                        name="value"
                        onChange={[Function]}
                        tabIndex="2"
                        value="10"
                      >
                        <option
                          value="10"
                        >
                          10 days
                        </option>
                        <option
                          value="20"
                        >
                          20 days
                        </option>
                        <option
                          value="30"
                        >
                          30 days
                        </option>
                        <option
                          value="60"
                        >
                          60 days
                        </option>
                        <option
                          value="90"
                        >
                          90 days
                        </option>
                      </select>
                    </div>
                    <div
                      className="wrapSelectSocial"
                    >
                      <h2
                        className="num"
                      >
                        03/ 
                        <span>
                           by social Media
                        </span>
                      </h2>
                      <select
                        name="socialValue"
                        onChange={[Function]}
                        tabIndex="3"
                        value="twitter"
                      >
                        <option
                          value="twitter"
                        >
                          twitter
                        </option>
                        <option
                          value="facebook"
                        >
                          facebook
                        </option>
                      </select>
                    </div>
                  </div>
                </div>
                <button
                  className="btnProjet"
                  disabled={true}
                  tabIndex="4"
                  type="submit"
                >
                  Go !
                </button>
              </form>,
            ],
            "className": "mainApp",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Validating the effects of social media on brand valuation",
                "className": "mission",
              },
              "ref": null,
              "rendered": "Validating the effects of social media on brand valuation",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "- in 3 simple steps -",
              },
              "ref": null,
              "rendered": "- in 3 simple steps -",
              "type": "h5",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="cover"
                  >
                    <h2
                      className="num"
                    >
                      01/ 
                      <span>
                         enter the symbol
                      </span>
                    </h2>
                    <div
                      className="search"
                    >
                      <label
                        className="inp"
                        htmlFor="stockInput"
                      >
                        <input
                          autoComplete="off"
                          className="searchInput"
                          id="stockInput"
                          name="stockInput"
                          onChange={[Function]}
                          spellCheck="false"
                          tabIndex="1"
                          type="text"
                          value=""
                        />
                        <span
                          className="label"
                          style={null}
                        >
                          search...
                        </span>
                      </label>
                      <div
                        className="wrapSelect"
                      >
                        <h2
                          className="num"
                        >
                          02/ 
                          <span>
                             days reviewed
                          </span>
                        </h2>
                        <select
                          name="value"
                          onChange={[Function]}
                          tabIndex="2"
                          value="10"
                        >
                          <option
                            value="10"
                          >
                            10 days
                          </option>
                          <option
                            value="20"
                          >
                            20 days
                          </option>
                          <option
                            value="30"
                          >
                            30 days
                          </option>
                          <option
                            value="60"
                          >
                            60 days
                          </option>
                          <option
                            value="90"
                          >
                            90 days
                          </option>
                        </select>
                      </div>
                      <div
                        className="wrapSelectSocial"
                      >
                        <h2
                          className="num"
                        >
                          03/ 
                          <span>
                             by social Media
                          </span>
                        </h2>
                        <select
                          name="socialValue"
                          onChange={[Function]}
                          tabIndex="3"
                          value="twitter"
                        >
                          <option
                            value="twitter"
                          >
                            twitter
                          </option>
                          <option
                            value="facebook"
                          >
                            facebook
                          </option>
                        </select>
                      </div>
                    </div>
                  </div>,
                  <button
                    className="btnProjet"
                    disabled={true}
                    tabIndex="4"
                    type="submit"
                  >
                    Go !
                  </button>,
                ],
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h2
                        className="num"
                      >
                        01/ 
                        <span>
                           enter the symbol
                        </span>
                      </h2>,
                      <div
                        className="search"
                      >
                        <label
                          className="inp"
                          htmlFor="stockInput"
                        >
                          <input
                            autoComplete="off"
                            className="searchInput"
                            id="stockInput"
                            name="stockInput"
                            onChange={[Function]}
                            spellCheck="false"
                            tabIndex="1"
                            type="text"
                            value=""
                          />
                          <span
                            className="label"
                            style={null}
                          >
                            search...
                          </span>
                        </label>
                        <div
                          className="wrapSelect"
                        >
                          <h2
                            className="num"
                          >
                            02/ 
                            <span>
                               days reviewed
                            </span>
                          </h2>
                          <select
                            name="value"
                            onChange={[Function]}
                            tabIndex="2"
                            value="10"
                          >
                            <option
                              value="10"
                            >
                              10 days
                            </option>
                            <option
                              value="20"
                            >
                              20 days
                            </option>
                            <option
                              value="30"
                            >
                              30 days
                            </option>
                            <option
                              value="60"
                            >
                              60 days
                            </option>
                            <option
                              value="90"
                            >
                              90 days
                            </option>
                          </select>
                        </div>
                        <div
                          className="wrapSelectSocial"
                        >
                          <h2
                            className="num"
                          >
                            03/ 
                            <span>
                               by social Media
                            </span>
                          </h2>
                          <select
                            name="socialValue"
                            onChange={[Function]}
                            tabIndex="3"
                            value="twitter"
                          >
                            <option
                              value="twitter"
                            >
                              twitter
                            </option>
                            <option
                              value="facebook"
                            >
                              facebook
                            </option>
                          </select>
                        </div>
                      </div>,
                    ],
                    "className": "cover",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "01/ ",
                          <span>
                             enter the symbol
                          </span>,
                        ],
                        "className": "num",
                      },
                      "ref": null,
                      "rendered": Array [
                        "01/ ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": " enter the symbol",
                          },
                          "ref": null,
                          "rendered": " enter the symbol",
                          "type": "span",
                        },
                      ],
                      "type": "h2",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <label
                            className="inp"
                            htmlFor="stockInput"
                          >
                            <input
                              autoComplete="off"
                              className="searchInput"
                              id="stockInput"
                              name="stockInput"
                              onChange={[Function]}
                              spellCheck="false"
                              tabIndex="1"
                              type="text"
                              value=""
                            />
                            <span
                              className="label"
                              style={null}
                            >
                              search...
                            </span>
                          </label>,
                          <div
                            className="wrapSelect"
                          >
                            <h2
                              className="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              onChange={[Function]}
                              tabIndex="2"
                              value="10"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>,
                          <div
                            className="wrapSelectSocial"
                          >
                            <h2
                              className="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              onChange={[Function]}
                              tabIndex="3"
                              value="twitter"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>,
                        ],
                        "className": "search",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <input
                                autoComplete="off"
                                className="searchInput"
                                id="stockInput"
                                name="stockInput"
                                onChange={[Function]}
                                spellCheck="false"
                                tabIndex="1"
                                type="text"
                                value=""
                              />,
                              <span
                                className="label"
                                style={null}
                              >
                                search...
                              </span>,
                            ],
                            "className": "inp",
                            "htmlFor": "stockInput",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "autoComplete": "off",
                                "className": "searchInput",
                                "id": "stockInput",
                                "name": "stockInput",
                                "onChange": [Function],
                                "spellCheck": "false",
                                "tabIndex": "1",
                                "type": "text",
                                "value": "",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "input",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "search...",
                                "className": "label",
                                "style": null,
                              },
                              "ref": null,
                              "rendered": "search...",
                              "type": "span",
                            },
                          ],
                          "type": "label",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <h2
                                className="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>,
                              <select
                                name="value"
                                onChange={[Function]}
                                tabIndex="2"
                                value="10"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>,
                            ],
                            "className": "wrapSelect",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  "02/ ",
                                  <span>
                                     days reviewed
                                  </span>,
                                ],
                                "className": "num",
                              },
                              "ref": null,
                              "rendered": Array [
                                "02/ ",
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": " days reviewed",
                                  },
                                  "ref": null,
                                  "rendered": " days reviewed",
                                  "type": "span",
                                },
                              ],
                              "type": "h2",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>,
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>,
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>,
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>,
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>,
                                ],
                                "name": "value",
                                "onChange": [Function],
                                "tabIndex": "2",
                                "value": "10",
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "10 days",
                                    "value": "10",
                                  },
                                  "ref": null,
                                  "rendered": "10 days",
                                  "type": "option",
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "20 days",
                                    "value": "20",
                                  },
                                  "ref": null,
                                  "rendered": "20 days",
                                  "type": "option",
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "30 days",
                                    "value": "30",
                                  },
                                  "ref": null,
                                  "rendered": "30 days",
                                  "type": "option",
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "60 days",
                                    "value": "60",
                                  },
                                  "ref": null,
                                  "rendered": "60 days",
                                  "type": "option",
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "90 days",
                                    "value": "90",
                                  },
                                  "ref": null,
                                  "rendered": "90 days",
                                  "type": "option",
                                },
                              ],
                              "type": "select",
                            },
                          ],
                          "type": "div",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <h2
                                className="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>,
                              <select
                                name="socialValue"
                                onChange={[Function]}
                                tabIndex="3"
                                value="twitter"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>,
                            ],
                            "className": "wrapSelectSocial",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  "03/ ",
                                  <span>
                                     by social Media
                                  </span>,
                                ],
                                "className": "num",
                              },
                              "ref": null,
                              "rendered": Array [
                                "03/ ",
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": " by social Media",
                                  },
                                  "ref": null,
                                  "rendered": " by social Media",
                                  "type": "span",
                                },
                              ],
                              "type": "h2",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>,
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>,
                                ],
                                "name": "socialValue",
                                "onChange": [Function],
                                "tabIndex": "3",
                                "value": "twitter",
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "twitter",
                                    "value": "twitter",
                                  },
                                  "ref": null,
                                  "rendered": "twitter",
                                  "type": "option",
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "facebook",
                                    "value": "facebook",
                                  },
                                  "ref": null,
                                  "rendered": "facebook",
                                  "type": "option",
                                },
                              ],
                              "type": "select",
                            },
                          ],
                          "type": "div",
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Go !",
                    "className": "btnProjet",
                    "disabled": true,
                    "tabIndex": "4",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Go !",
                  "type": "button",
                },
              ],
              "type": "form",
            },
          ],
          "type": "div",
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`App devrait renderer sans props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header
          stockName={null}
        />,
        <div
          className="mainApp"
        >
          <h3
            className="mission"
          >
            Validating the effects of social media on brand valuation
          </h3>
          <h5>
            - in 3 simple steps -
          </h5>
          <form
            onSubmit={[Function]}
          >
            <div
              className="cover"
            >
              <h2
                className="num"
              >
                01/ 
                <span>
                   enter the symbol
                </span>
              </h2>
              <div
                className="search"
              >
                <label
                  className="inp"
                  htmlFor="stockInput"
                >
                  <input
                    autoComplete="off"
                    className="searchInput"
                    id="stockInput"
                    name="stockInput"
                    onChange={[Function]}
                    spellCheck="false"
                    tabIndex="1"
                    type="text"
                    value=""
                  />
                  <span
                    className="label"
                    style={null}
                  >
                    search...
                  </span>
                </label>
                <div
                  className="wrapSelect"
                >
                  <h2
                    className="num"
                  >
                    02/ 
                    <span>
                       days reviewed
                    </span>
                  </h2>
                  <select
                    name="value"
                    onChange={[Function]}
                    tabIndex="2"
                    value="10"
                  >
                    <option
                      value="10"
                    >
                      10 days
                    </option>
                    <option
                      value="20"
                    >
                      20 days
                    </option>
                    <option
                      value="30"
                    >
                      30 days
                    </option>
                    <option
                      value="60"
                    >
                      60 days
                    </option>
                    <option
                      value="90"
                    >
                      90 days
                    </option>
                  </select>
                </div>
                <div
                  className="wrapSelectSocial"
                >
                  <h2
                    className="num"
                  >
                    03/ 
                    <span>
                       by social Media
                    </span>
                  </h2>
                  <select
                    name="socialValue"
                    onChange={[Function]}
                    tabIndex="3"
                    value="twitter"
                  >
                    <option
                      value="twitter"
                    >
                      twitter
                    </option>
                    <option
                      value="facebook"
                    >
                      facebook
                    </option>
                  </select>
                </div>
              </div>
            </div>
            <button
              className="btnProjet"
              disabled={true}
              tabIndex="4"
              type="submit"
            >
              Go !
            </button>
          </form>
        </div>,
        false,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "stockName": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3
              className="mission"
            >
              Validating the effects of social media on brand valuation
            </h3>,
            <h5>
              - in 3 simple steps -
            </h5>,
            <form
              onSubmit={[Function]}
            >
              <div
                className="cover"
              >
                <h2
                  className="num"
                >
                  01/ 
                  <span>
                     enter the symbol
                  </span>
                </h2>
                <div
                  className="search"
                >
                  <label
                    className="inp"
                    htmlFor="stockInput"
                  >
                    <input
                      autoComplete="off"
                      className="searchInput"
                      id="stockInput"
                      name="stockInput"
                      onChange={[Function]}
                      spellCheck="false"
                      tabIndex="1"
                      type="text"
                      value=""
                    />
                    <span
                      className="label"
                      style={null}
                    >
                      search...
                    </span>
                  </label>
                  <div
                    className="wrapSelect"
                  >
                    <h2
                      className="num"
                    >
                      02/ 
                      <span>
                         days reviewed
                      </span>
                    </h2>
                    <select
                      name="value"
                      onChange={[Function]}
                      tabIndex="2"
                      value="10"
                    >
                      <option
                        value="10"
                      >
                        10 days
                      </option>
                      <option
                        value="20"
                      >
                        20 days
                      </option>
                      <option
                        value="30"
                      >
                        30 days
                      </option>
                      <option
                        value="60"
                      >
                        60 days
                      </option>
                      <option
                        value="90"
                      >
                        90 days
                      </option>
                    </select>
                  </div>
                  <div
                    className="wrapSelectSocial"
                  >
                    <h2
                      className="num"
                    >
                      03/ 
                      <span>
                         by social Media
                      </span>
                    </h2>
                    <select
                      name="socialValue"
                      onChange={[Function]}
                      tabIndex="3"
                      value="twitter"
                    >
                      <option
                        value="twitter"
                      >
                        twitter
                      </option>
                      <option
                        value="facebook"
                      >
                        facebook
                      </option>
                    </select>
                  </div>
                </div>
              </div>
              <button
                className="btnProjet"
                disabled={true}
                tabIndex="4"
                type="submit"
              >
                Go !
              </button>
            </form>,
          ],
          "className": "mainApp",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Validating the effects of social media on brand valuation",
              "className": "mission",
            },
            "ref": null,
            "rendered": "Validating the effects of social media on brand valuation",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "- in 3 simple steps -",
            },
            "ref": null,
            "rendered": "- in 3 simple steps -",
            "type": "h5",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="cover"
                >
                  <h2
                    className="num"
                  >
                    01/ 
                    <span>
                       enter the symbol
                    </span>
                  </h2>
                  <div
                    className="search"
                  >
                    <label
                      className="inp"
                      htmlFor="stockInput"
                    >
                      <input
                        autoComplete="off"
                        className="searchInput"
                        id="stockInput"
                        name="stockInput"
                        onChange={[Function]}
                        spellCheck="false"
                        tabIndex="1"
                        type="text"
                        value=""
                      />
                      <span
                        className="label"
                        style={null}
                      >
                        search...
                      </span>
                    </label>
                    <div
                      className="wrapSelect"
                    >
                      <h2
                        className="num"
                      >
                        02/ 
                        <span>
                           days reviewed
                        </span>
                      </h2>
                      <select
                        name="value"
                        onChange={[Function]}
                        tabIndex="2"
                        value="10"
                      >
                        <option
                          value="10"
                        >
                          10 days
                        </option>
                        <option
                          value="20"
                        >
                          20 days
                        </option>
                        <option
                          value="30"
                        >
                          30 days
                        </option>
                        <option
                          value="60"
                        >
                          60 days
                        </option>
                        <option
                          value="90"
                        >
                          90 days
                        </option>
                      </select>
                    </div>
                    <div
                      className="wrapSelectSocial"
                    >
                      <h2
                        className="num"
                      >
                        03/ 
                        <span>
                           by social Media
                        </span>
                      </h2>
                      <select
                        name="socialValue"
                        onChange={[Function]}
                        tabIndex="3"
                        value="twitter"
                      >
                        <option
                          value="twitter"
                        >
                          twitter
                        </option>
                        <option
                          value="facebook"
                        >
                          facebook
                        </option>
                      </select>
                    </div>
                  </div>
                </div>,
                <button
                  className="btnProjet"
                  disabled={true}
                  tabIndex="4"
                  type="submit"
                >
                  Go !
                </button>,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h2
                      className="num"
                    >
                      01/ 
                      <span>
                         enter the symbol
                      </span>
                    </h2>,
                    <div
                      className="search"
                    >
                      <label
                        className="inp"
                        htmlFor="stockInput"
                      >
                        <input
                          autoComplete="off"
                          className="searchInput"
                          id="stockInput"
                          name="stockInput"
                          onChange={[Function]}
                          spellCheck="false"
                          tabIndex="1"
                          type="text"
                          value=""
                        />
                        <span
                          className="label"
                          style={null}
                        >
                          search...
                        </span>
                      </label>
                      <div
                        className="wrapSelect"
                      >
                        <h2
                          className="num"
                        >
                          02/ 
                          <span>
                             days reviewed
                          </span>
                        </h2>
                        <select
                          name="value"
                          onChange={[Function]}
                          tabIndex="2"
                          value="10"
                        >
                          <option
                            value="10"
                          >
                            10 days
                          </option>
                          <option
                            value="20"
                          >
                            20 days
                          </option>
                          <option
                            value="30"
                          >
                            30 days
                          </option>
                          <option
                            value="60"
                          >
                            60 days
                          </option>
                          <option
                            value="90"
                          >
                            90 days
                          </option>
                        </select>
                      </div>
                      <div
                        className="wrapSelectSocial"
                      >
                        <h2
                          className="num"
                        >
                          03/ 
                          <span>
                             by social Media
                          </span>
                        </h2>
                        <select
                          name="socialValue"
                          onChange={[Function]}
                          tabIndex="3"
                          value="twitter"
                        >
                          <option
                            value="twitter"
                          >
                            twitter
                          </option>
                          <option
                            value="facebook"
                          >
                            facebook
                          </option>
                        </select>
                      </div>
                    </div>,
                  ],
                  "className": "cover",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "01/ ",
                        <span>
                           enter the symbol
                        </span>,
                      ],
                      "className": "num",
                    },
                    "ref": null,
                    "rendered": Array [
                      "01/ ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": " enter the symbol",
                        },
                        "ref": null,
                        "rendered": " enter the symbol",
                        "type": "span",
                      },
                    ],
                    "type": "h2",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <label
                          className="inp"
                          htmlFor="stockInput"
                        >
                          <input
                            autoComplete="off"
                            className="searchInput"
                            id="stockInput"
                            name="stockInput"
                            onChange={[Function]}
                            spellCheck="false"
                            tabIndex="1"
                            type="text"
                            value=""
                          />
                          <span
                            className="label"
                            style={null}
                          >
                            search...
                          </span>
                        </label>,
                        <div
                          className="wrapSelect"
                        >
                          <h2
                            className="num"
                          >
                            02/ 
                            <span>
                               days reviewed
                            </span>
                          </h2>
                          <select
                            name="value"
                            onChange={[Function]}
                            tabIndex="2"
                            value="10"
                          >
                            <option
                              value="10"
                            >
                              10 days
                            </option>
                            <option
                              value="20"
                            >
                              20 days
                            </option>
                            <option
                              value="30"
                            >
                              30 days
                            </option>
                            <option
                              value="60"
                            >
                              60 days
                            </option>
                            <option
                              value="90"
                            >
                              90 days
                            </option>
                          </select>
                        </div>,
                        <div
                          className="wrapSelectSocial"
                        >
                          <h2
                            className="num"
                          >
                            03/ 
                            <span>
                               by social Media
                            </span>
                          </h2>
                          <select
                            name="socialValue"
                            onChange={[Function]}
                            tabIndex="3"
                            value="twitter"
                          >
                            <option
                              value="twitter"
                            >
                              twitter
                            </option>
                            <option
                              value="facebook"
                            >
                              facebook
                            </option>
                          </select>
                        </div>,
                      ],
                      "className": "search",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <input
                              autoComplete="off"
                              className="searchInput"
                              id="stockInput"
                              name="stockInput"
                              onChange={[Function]}
                              spellCheck="false"
                              tabIndex="1"
                              type="text"
                              value=""
                            />,
                            <span
                              className="label"
                              style={null}
                            >
                              search...
                            </span>,
                          ],
                          "className": "inp",
                          "htmlFor": "stockInput",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "autoComplete": "off",
                              "className": "searchInput",
                              "id": "stockInput",
                              "name": "stockInput",
                              "onChange": [Function],
                              "spellCheck": "false",
                              "tabIndex": "1",
                              "type": "text",
                              "value": "",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": "input",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "search...",
                              "className": "label",
                              "style": null,
                            },
                            "ref": null,
                            "rendered": "search...",
                            "type": "span",
                          },
                        ],
                        "type": "label",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <h2
                              className="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>,
                            <select
                              name="value"
                              onChange={[Function]}
                              tabIndex="2"
                              value="10"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>,
                          ],
                          "className": "wrapSelect",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                "02/ ",
                                <span>
                                   days reviewed
                                </span>,
                              ],
                              "className": "num",
                            },
                            "ref": null,
                            "rendered": Array [
                              "02/ ",
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": " days reviewed",
                                },
                                "ref": null,
                                "rendered": " days reviewed",
                                "type": "span",
                              },
                            ],
                            "type": "h2",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>,
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>,
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>,
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>,
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>,
                              ],
                              "name": "value",
                              "onChange": [Function],
                              "tabIndex": "2",
                              "value": "10",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "10 days",
                                  "value": "10",
                                },
                                "ref": null,
                                "rendered": "10 days",
                                "type": "option",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "20 days",
                                  "value": "20",
                                },
                                "ref": null,
                                "rendered": "20 days",
                                "type": "option",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "30 days",
                                  "value": "30",
                                },
                                "ref": null,
                                "rendered": "30 days",
                                "type": "option",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "60 days",
                                  "value": "60",
                                },
                                "ref": null,
                                "rendered": "60 days",
                                "type": "option",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "90 days",
                                  "value": "90",
                                },
                                "ref": null,
                                "rendered": "90 days",
                                "type": "option",
                              },
                            ],
                            "type": "select",
                          },
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <h2
                              className="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>,
                            <select
                              name="socialValue"
                              onChange={[Function]}
                              tabIndex="3"
                              value="twitter"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>,
                          ],
                          "className": "wrapSelectSocial",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                "03/ ",
                                <span>
                                   by social Media
                                </span>,
                              ],
                              "className": "num",
                            },
                            "ref": null,
                            "rendered": Array [
                              "03/ ",
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": " by social Media",
                                },
                                "ref": null,
                                "rendered": " by social Media",
                                "type": "span",
                              },
                            ],
                            "type": "h2",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>,
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>,
                              ],
                              "name": "socialValue",
                              "onChange": [Function],
                              "tabIndex": "3",
                              "value": "twitter",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "twitter",
                                  "value": "twitter",
                                },
                                "ref": null,
                                "rendered": "twitter",
                                "type": "option",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "facebook",
                                  "value": "facebook",
                                },
                                "ref": null,
                                "rendered": "facebook",
                                "type": "option",
                              },
                            ],
                            "type": "select",
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Go !",
                  "className": "btnProjet",
                  "disabled": true,
                  "tabIndex": "4",
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Go !",
                "type": "button",
              },
            ],
            "type": "form",
          },
        ],
        "type": "div",
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header
            stockName={null}
          />,
          <div
            className="mainApp"
          >
            <h3
              className="mission"
            >
              Validating the effects of social media on brand valuation
            </h3>
            <h5>
              - in 3 simple steps -
            </h5>
            <form
              onSubmit={[Function]}
            >
              <div
                className="cover"
              >
                <h2
                  className="num"
                >
                  01/ 
                  <span>
                     enter the symbol
                  </span>
                </h2>
                <div
                  className="search"
                >
                  <label
                    className="inp"
                    htmlFor="stockInput"
                  >
                    <input
                      autoComplete="off"
                      className="searchInput"
                      id="stockInput"
                      name="stockInput"
                      onChange={[Function]}
                      spellCheck="false"
                      tabIndex="1"
                      type="text"
                      value=""
                    />
                    <span
                      className="label"
                      style={null}
                    >
                      search...
                    </span>
                  </label>
                  <div
                    className="wrapSelect"
                  >
                    <h2
                      className="num"
                    >
                      02/ 
                      <span>
                         days reviewed
                      </span>
                    </h2>
                    <select
                      name="value"
                      onChange={[Function]}
                      tabIndex="2"
                      value="10"
                    >
                      <option
                        value="10"
                      >
                        10 days
                      </option>
                      <option
                        value="20"
                      >
                        20 days
                      </option>
                      <option
                        value="30"
                      >
                        30 days
                      </option>
                      <option
                        value="60"
                      >
                        60 days
                      </option>
                      <option
                        value="90"
                      >
                        90 days
                      </option>
                    </select>
                  </div>
                  <div
                    className="wrapSelectSocial"
                  >
                    <h2
                      className="num"
                    >
                      03/ 
                      <span>
                         by social Media
                      </span>
                    </h2>
                    <select
                      name="socialValue"
                      onChange={[Function]}
                      tabIndex="3"
                      value="twitter"
                    >
                      <option
                        value="twitter"
                      >
                        twitter
                      </option>
                      <option
                        value="facebook"
                      >
                        facebook
                      </option>
                    </select>
                  </div>
                </div>
              </div>
              <button
                className="btnProjet"
                disabled={true}
                tabIndex="4"
                type="submit"
              >
                Go !
              </button>
            </form>
          </div>,
          false,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "stockName": null,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3
                className="mission"
              >
                Validating the effects of social media on brand valuation
              </h3>,
              <h5>
                - in 3 simple steps -
              </h5>,
              <form
                onSubmit={[Function]}
              >
                <div
                  className="cover"
                >
                  <h2
                    className="num"
                  >
                    01/ 
                    <span>
                       enter the symbol
                    </span>
                  </h2>
                  <div
                    className="search"
                  >
                    <label
                      className="inp"
                      htmlFor="stockInput"
                    >
                      <input
                        autoComplete="off"
                        className="searchInput"
                        id="stockInput"
                        name="stockInput"
                        onChange={[Function]}
                        spellCheck="false"
                        tabIndex="1"
                        type="text"
                        value=""
                      />
                      <span
                        className="label"
                        style={null}
                      >
                        search...
                      </span>
                    </label>
                    <div
                      className="wrapSelect"
                    >
                      <h2
                        className="num"
                      >
                        02/ 
                        <span>
                           days reviewed
                        </span>
                      </h2>
                      <select
                        name="value"
                        onChange={[Function]}
                        tabIndex="2"
                        value="10"
                      >
                        <option
                          value="10"
                        >
                          10 days
                        </option>
                        <option
                          value="20"
                        >
                          20 days
                        </option>
                        <option
                          value="30"
                        >
                          30 days
                        </option>
                        <option
                          value="60"
                        >
                          60 days
                        </option>
                        <option
                          value="90"
                        >
                          90 days
                        </option>
                      </select>
                    </div>
                    <div
                      className="wrapSelectSocial"
                    >
                      <h2
                        className="num"
                      >
                        03/ 
                        <span>
                           by social Media
                        </span>
                      </h2>
                      <select
                        name="socialValue"
                        onChange={[Function]}
                        tabIndex="3"
                        value="twitter"
                      >
                        <option
                          value="twitter"
                        >
                          twitter
                        </option>
                        <option
                          value="facebook"
                        >
                          facebook
                        </option>
                      </select>
                    </div>
                  </div>
                </div>
                <button
                  className="btnProjet"
                  disabled={true}
                  tabIndex="4"
                  type="submit"
                >
                  Go !
                </button>
              </form>,
            ],
            "className": "mainApp",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Validating the effects of social media on brand valuation",
                "className": "mission",
              },
              "ref": null,
              "rendered": "Validating the effects of social media on brand valuation",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "- in 3 simple steps -",
              },
              "ref": null,
              "rendered": "- in 3 simple steps -",
              "type": "h5",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="cover"
                  >
                    <h2
                      className="num"
                    >
                      01/ 
                      <span>
                         enter the symbol
                      </span>
                    </h2>
                    <div
                      className="search"
                    >
                      <label
                        className="inp"
                        htmlFor="stockInput"
                      >
                        <input
                          autoComplete="off"
                          className="searchInput"
                          id="stockInput"
                          name="stockInput"
                          onChange={[Function]}
                          spellCheck="false"
                          tabIndex="1"
                          type="text"
                          value=""
                        />
                        <span
                          className="label"
                          style={null}
                        >
                          search...
                        </span>
                      </label>
                      <div
                        className="wrapSelect"
                      >
                        <h2
                          className="num"
                        >
                          02/ 
                          <span>
                             days reviewed
                          </span>
                        </h2>
                        <select
                          name="value"
                          onChange={[Function]}
                          tabIndex="2"
                          value="10"
                        >
                          <option
                            value="10"
                          >
                            10 days
                          </option>
                          <option
                            value="20"
                          >
                            20 days
                          </option>
                          <option
                            value="30"
                          >
                            30 days
                          </option>
                          <option
                            value="60"
                          >
                            60 days
                          </option>
                          <option
                            value="90"
                          >
                            90 days
                          </option>
                        </select>
                      </div>
                      <div
                        className="wrapSelectSocial"
                      >
                        <h2
                          className="num"
                        >
                          03/ 
                          <span>
                             by social Media
                          </span>
                        </h2>
                        <select
                          name="socialValue"
                          onChange={[Function]}
                          tabIndex="3"
                          value="twitter"
                        >
                          <option
                            value="twitter"
                          >
                            twitter
                          </option>
                          <option
                            value="facebook"
                          >
                            facebook
                          </option>
                        </select>
                      </div>
                    </div>
                  </div>,
                  <button
                    className="btnProjet"
                    disabled={true}
                    tabIndex="4"
                    type="submit"
                  >
                    Go !
                  </button>,
                ],
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h2
                        className="num"
                      >
                        01/ 
                        <span>
                           enter the symbol
                        </span>
                      </h2>,
                      <div
                        className="search"
                      >
                        <label
                          className="inp"
                          htmlFor="stockInput"
                        >
                          <input
                            autoComplete="off"
                            className="searchInput"
                            id="stockInput"
                            name="stockInput"
                            onChange={[Function]}
                            spellCheck="false"
                            tabIndex="1"
                            type="text"
                            value=""
                          />
                          <span
                            className="label"
                            style={null}
                          >
                            search...
                          </span>
                        </label>
                        <div
                          className="wrapSelect"
                        >
                          <h2
                            className="num"
                          >
                            02/ 
                            <span>
                               days reviewed
                            </span>
                          </h2>
                          <select
                            name="value"
                            onChange={[Function]}
                            tabIndex="2"
                            value="10"
                          >
                            <option
                              value="10"
                            >
                              10 days
                            </option>
                            <option
                              value="20"
                            >
                              20 days
                            </option>
                            <option
                              value="30"
                            >
                              30 days
                            </option>
                            <option
                              value="60"
                            >
                              60 days
                            </option>
                            <option
                              value="90"
                            >
                              90 days
                            </option>
                          </select>
                        </div>
                        <div
                          className="wrapSelectSocial"
                        >
                          <h2
                            className="num"
                          >
                            03/ 
                            <span>
                               by social Media
                            </span>
                          </h2>
                          <select
                            name="socialValue"
                            onChange={[Function]}
                            tabIndex="3"
                            value="twitter"
                          >
                            <option
                              value="twitter"
                            >
                              twitter
                            </option>
                            <option
                              value="facebook"
                            >
                              facebook
                            </option>
                          </select>
                        </div>
                      </div>,
                    ],
                    "className": "cover",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "01/ ",
                          <span>
                             enter the symbol
                          </span>,
                        ],
                        "className": "num",
                      },
                      "ref": null,
                      "rendered": Array [
                        "01/ ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": " enter the symbol",
                          },
                          "ref": null,
                          "rendered": " enter the symbol",
                          "type": "span",
                        },
                      ],
                      "type": "h2",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <label
                            className="inp"
                            htmlFor="stockInput"
                          >
                            <input
                              autoComplete="off"
                              className="searchInput"
                              id="stockInput"
                              name="stockInput"
                              onChange={[Function]}
                              spellCheck="false"
                              tabIndex="1"
                              type="text"
                              value=""
                            />
                            <span
                              className="label"
                              style={null}
                            >
                              search...
                            </span>
                          </label>,
                          <div
                            className="wrapSelect"
                          >
                            <h2
                              className="num"
                            >
                              02/ 
                              <span>
                                 days reviewed
                              </span>
                            </h2>
                            <select
                              name="value"
                              onChange={[Function]}
                              tabIndex="2"
                              value="10"
                            >
                              <option
                                value="10"
                              >
                                10 days
                              </option>
                              <option
                                value="20"
                              >
                                20 days
                              </option>
                              <option
                                value="30"
                              >
                                30 days
                              </option>
                              <option
                                value="60"
                              >
                                60 days
                              </option>
                              <option
                                value="90"
                              >
                                90 days
                              </option>
                            </select>
                          </div>,
                          <div
                            className="wrapSelectSocial"
                          >
                            <h2
                              className="num"
                            >
                              03/ 
                              <span>
                                 by social Media
                              </span>
                            </h2>
                            <select
                              name="socialValue"
                              onChange={[Function]}
                              tabIndex="3"
                              value="twitter"
                            >
                              <option
                                value="twitter"
                              >
                                twitter
                              </option>
                              <option
                                value="facebook"
                              >
                                facebook
                              </option>
                            </select>
                          </div>,
                        ],
                        "className": "search",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <input
                                autoComplete="off"
                                className="searchInput"
                                id="stockInput"
                                name="stockInput"
                                onChange={[Function]}
                                spellCheck="false"
                                tabIndex="1"
                                type="text"
                                value=""
                              />,
                              <span
                                className="label"
                                style={null}
                              >
                                search...
                              </span>,
                            ],
                            "className": "inp",
                            "htmlFor": "stockInput",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "autoComplete": "off",
                                "className": "searchInput",
                                "id": "stockInput",
                                "name": "stockInput",
                                "onChange": [Function],
                                "spellCheck": "false",
                                "tabIndex": "1",
                                "type": "text",
                                "value": "",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "input",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "search...",
                                "className": "label",
                                "style": null,
                              },
                              "ref": null,
                              "rendered": "search...",
                              "type": "span",
                            },
                          ],
                          "type": "label",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <h2
                                className="num"
                              >
                                02/ 
                                <span>
                                   days reviewed
                                </span>
                              </h2>,
                              <select
                                name="value"
                                onChange={[Function]}
                                tabIndex="2"
                                value="10"
                              >
                                <option
                                  value="10"
                                >
                                  10 days
                                </option>
                                <option
                                  value="20"
                                >
                                  20 days
                                </option>
                                <option
                                  value="30"
                                >
                                  30 days
                                </option>
                                <option
                                  value="60"
                                >
                                  60 days
                                </option>
                                <option
                                  value="90"
                                >
                                  90 days
                                </option>
                              </select>,
                            ],
                            "className": "wrapSelect",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  "02/ ",
                                  <span>
                                     days reviewed
                                  </span>,
                                ],
                                "className": "num",
                              },
                              "ref": null,
                              "rendered": Array [
                                "02/ ",
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": " days reviewed",
                                  },
                                  "ref": null,
                                  "rendered": " days reviewed",
                                  "type": "span",
                                },
                              ],
                              "type": "h2",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  <option
                                    value="10"
                                  >
                                    10 days
                                  </option>,
                                  <option
                                    value="20"
                                  >
                                    20 days
                                  </option>,
                                  <option
                                    value="30"
                                  >
                                    30 days
                                  </option>,
                                  <option
                                    value="60"
                                  >
                                    60 days
                                  </option>,
                                  <option
                                    value="90"
                                  >
                                    90 days
                                  </option>,
                                ],
                                "name": "value",
                                "onChange": [Function],
                                "tabIndex": "2",
                                "value": "10",
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "10 days",
                                    "value": "10",
                                  },
                                  "ref": null,
                                  "rendered": "10 days",
                                  "type": "option",
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "20 days",
                                    "value": "20",
                                  },
                                  "ref": null,
                                  "rendered": "20 days",
                                  "type": "option",
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "30 days",
                                    "value": "30",
                                  },
                                  "ref": null,
                                  "rendered": "30 days",
                                  "type": "option",
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "60 days",
                                    "value": "60",
                                  },
                                  "ref": null,
                                  "rendered": "60 days",
                                  "type": "option",
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "90 days",
                                    "value": "90",
                                  },
                                  "ref": null,
                                  "rendered": "90 days",
                                  "type": "option",
                                },
                              ],
                              "type": "select",
                            },
                          ],
                          "type": "div",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <h2
                                className="num"
                              >
                                03/ 
                                <span>
                                   by social Media
                                </span>
                              </h2>,
                              <select
                                name="socialValue"
                                onChange={[Function]}
                                tabIndex="3"
                                value="twitter"
                              >
                                <option
                                  value="twitter"
                                >
                                  twitter
                                </option>
                                <option
                                  value="facebook"
                                >
                                  facebook
                                </option>
                              </select>,
                            ],
                            "className": "wrapSelectSocial",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  "03/ ",
                                  <span>
                                     by social Media
                                  </span>,
                                ],
                                "className": "num",
                              },
                              "ref": null,
                              "rendered": Array [
                                "03/ ",
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": " by social Media",
                                  },
                                  "ref": null,
                                  "rendered": " by social Media",
                                  "type": "span",
                                },
                              ],
                              "type": "h2",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  <option
                                    value="twitter"
                                  >
                                    twitter
                                  </option>,
                                  <option
                                    value="facebook"
                                  >
                                    facebook
                                  </option>,
                                ],
                                "name": "socialValue",
                                "onChange": [Function],
                                "tabIndex": "3",
                                "value": "twitter",
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "twitter",
                                    "value": "twitter",
                                  },
                                  "ref": null,
                                  "rendered": "twitter",
                                  "type": "option",
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "facebook",
                                    "value": "facebook",
                                  },
                                  "ref": null,
                                  "rendered": "facebook",
                                  "type": "option",
                                },
                              ],
                              "type": "select",
                            },
                          ],
                          "type": "div",
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Go !",
                    "className": "btnProjet",
                    "disabled": true,
                    "tabIndex": "4",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Go !",
                  "type": "button",
                },
              ],
              "type": "form",
            },
          ],
          "type": "div",
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
